const e=JSON.parse('{"key":"v-7430a6e0","path":"/JavaLang/SpringFrameWork/04-Spring-Web.html","title":"04-Spring-集成Web","lang":"zh-CN","frontmatter":{"title":"04-Spring-集成Web","date":"2021-12-10T21:08:05.000Z","category":"Spring-FrameWork","tag":["Java","Spring","JavaWeb"],"description":"Spring集成Web环境 ​ 我们首先需要创建一个新的Maven Moudle 然后进行如下操作 ​ 首先创建一个UserDao 和它的Impl（做一个简单的即可）以及UserService，然后配置好相关的Spring--通过SpringConfiguration.java来进行配置 UserDao定义一个save方法，UserDaoImpl实现该方法，并在控制台打印一句话，Service同理，UserServiceImpl在实现save方法时要调用userDao的save方法（UserServiceImpl中保存着一个UserDao变量--通过Spring加载）","head":[["meta",{"property":"og:url","content":"http://www.amayakite.github.io/JavaLang/SpringFrameWork/04-Spring-Web.html"}],["meta",{"property":"og:site_name","content":"Amayakite Blogs"}],["meta",{"property":"og:title","content":"04-Spring-集成Web"}],["meta",{"property":"og:description","content":"Spring集成Web环境 ​ 我们首先需要创建一个新的Maven Moudle 然后进行如下操作 ​ 首先创建一个UserDao 和它的Impl（做一个简单的即可）以及UserService，然后配置好相关的Spring--通过SpringConfiguration.java来进行配置 UserDao定义一个save方法，UserDaoImpl实现该方法，并在控制台打印一句话，Service同理，UserServiceImpl在实现save方法时要调用userDao的save方法（UserServiceImpl中保存着一个UserDao变量--通过Spring加载）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-17T12:51:48.000Z"}],["meta",{"property":"article:author","content":"Amayakite"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"JavaWeb"}],["meta",{"property":"article:published_time","content":"2021-12-10T21:08:05.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-17T12:51:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04-Spring-集成Web\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-10T21:08:05.000Z\\",\\"dateModified\\":\\"2023-06-17T12:51:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Amayakite\\",\\"url\\":\\"https://github.com/Amayakite\\"}]}"]]},"headers":[{"level":2,"title":"Spring集成Web环境","slug":"spring集成web环境","link":"#spring集成web环境","children":[{"level":3,"title":"封装Application","slug":"封装application","link":"#封装application","children":[]},{"level":3,"title":"将加载ApplicationConfig变成动态的","slug":"将加载applicationconfig变成动态的","link":"#将加载applicationconfig变成动态的","children":[]},{"level":3,"title":"Spring集成Web环境-自己使用Utils进行封装","slug":"spring集成web环境-自己使用utils进行封装","link":"#spring集成web环境-自己使用utils进行封装","children":[]}]},{"level":2,"title":"ContextLoaderListener类","slug":"contextloaderlistener类","link":"#contextloaderlistener类","children":[{"level":3,"title":"配置ContextLoaderListener","slug":"配置contextloaderlistener","link":"#配置contextloaderlistener","children":[]}]},{"level":2,"title":"关于Tomcat10中无法使用WebApplicationContext的问题","slug":"关于tomcat10中无法使用webapplicationcontext的问题","link":"#关于tomcat10中无法使用webapplicationcontext的问题","children":[{"level":3,"title":"安装tomcat9","slug":"安装tomcat9","link":"#安装tomcat9","children":[]},{"level":3,"title":"安装tomcat-9对应的Maven依赖","slug":"安装tomcat-9对应的maven依赖","link":"#安装tomcat-9对应的maven依赖","children":[]},{"level":3,"title":"修改web.xml为tomcat9","slug":"修改web-xml为tomcat9","link":"#修改web-xml为tomcat9","children":[]},{"level":3,"title":"可能会遇到的问题ClassNotFoundException:org","slug":"可能会遇到的问题classnotfoundexception-org","link":"#可能会遇到的问题classnotfoundexception-org","children":[]},{"level":3,"title":"使用Java配置文件配置ContextLoaderListener一定会遇到的问题","slug":"使用java配置文件配置contextloaderlistener一定会遇到的问题","link":"#使用java配置文件配置contextloaderlistener一定会遇到的问题","children":[]}]}],"git":{"createdTime":1687006308000,"updatedTime":1687006308000,"contributors":[{"name":"Amayakite","email":"amayakite@qq.com","commits":1}]},"readingTime":{"minutes":9.05,"words":2716},"filePathRelative":"JavaLang/SpringFrameWork/04-Spring-Web.md","localizedDate":"2021年12月10日","excerpt":"<h2> Spring集成Web环境</h2>\\n<p>​  我们首先需要创建一个新的Maven Moudle 然后进行如下操作</p>\\n<p>​  首先创建一个UserDao 和它的Impl（做一个简单的即可）以及UserService，<strong>然后配置好相关的Spring--通过SpringConfiguration.java来进行配置</strong></p>\\n<blockquote>\\n<p>UserDao定义一个save方法，UserDaoImpl实现该方法，并在控制台打印一句话，Service同理，UserServiceImpl在实现save方法时要调用userDao的save方法（UserServiceImpl中保存着一个UserDao变量--通过Spring加载）</p>\\n</blockquote>","autoDesc":true}');export{e as data};
