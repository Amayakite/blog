const l=JSON.parse('{"key":"v-6c99540c","path":"/JavaLang/Android/02-Kotlin-%E5%9F%BA%E7%A1%80.html","title":"2-Kotlin-基础","lang":"zh-CN","frontmatter":{"title":"2-Kotlin-基础","date":"2022-05-05T21:29:18.000Z","category":"Andorid","tag":["Java","Kotlin"],"description":"概述 这个是基于JVM的语言，IDEA对其支持度非常好（亲儿子），在Java的基础上多了非常多的新特性，同理，上手起来比golang之类的语言更难... 在Android和近几年的新项目上，用Kotlin的比Java的多得多，由于其语法简单的特性（其实一堆注解之类的玩起来也不简单了），深受Android开发的喜爱（雾？），同时也是Google的亲儿子一样 Kotlin语法简洁，具备现代高级语言的特性，并且能和Java一流代码无缝操作，因为具备这些优势，至今为止越来越多的公司使用它来进行开发（无论是后端还是Android） 甚至可以编译成二进制源码","head":[["meta",{"property":"og:url","content":"http://www.amayakite.github.io/JavaLang/Android/02-Kotlin-%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"Amayakite Blogs"}],["meta",{"property":"og:title","content":"2-Kotlin-基础"}],["meta",{"property":"og:description","content":"概述 这个是基于JVM的语言，IDEA对其支持度非常好（亲儿子），在Java的基础上多了非常多的新特性，同理，上手起来比golang之类的语言更难... 在Android和近几年的新项目上，用Kotlin的比Java的多得多，由于其语法简单的特性（其实一堆注解之类的玩起来也不简单了），深受Android开发的喜爱（雾？），同时也是Google的亲儿子一样 Kotlin语法简洁，具备现代高级语言的特性，并且能和Java一流代码无缝操作，因为具备这些优势，至今为止越来越多的公司使用它来进行开发（无论是后端还是Android） 甚至可以编译成二进制源码"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-17T15:14:40.000Z"}],["meta",{"property":"article:author","content":"Amayakite"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Kotlin"}],["meta",{"property":"article:published_time","content":"2022-05-05T21:29:18.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-17T15:14:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2-Kotlin-基础\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-05T21:29:18.000Z\\",\\"dateModified\\":\\"2023-06-17T15:14:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Amayakite\\",\\"url\\":\\"https://github.com/Amayakite\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"快速上手","slug":"快速上手","link":"#快速上手","children":[{"level":3,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":3,"title":"变量、常量和内置数据类型","slug":"变量、常量和内置数据类型","link":"#变量、常量和内置数据类型","children":[]},{"level":3,"title":"如何查看Kotlin的字节码文件","slug":"如何查看kotlin的字节码文件","link":"#如何查看kotlin的字节码文件","children":[]},{"level":3,"title":"条件语句","slug":"条件语句","link":"#条件语句","children":[]},{"level":3,"title":"模板字符串","slug":"模板字符串","link":"#模板字符串","children":[]}]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[{"level":3,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":3,"title":"参数默认值和具名传参","slug":"参数默认值和具名传参","link":"#参数默认值和具名传参","children":[]},{"level":3,"title":"Unit函数（Void）","slug":"unit函数-void","link":"#unit函数-void","children":[]},{"level":3,"title":"Todo函数来抛出异常和自己抛出异常","slug":"todo函数来抛出异常和自己抛出异常","link":"#todo函数来抛出异常和自己抛出异常","children":[]},{"level":3,"title":"带有空格和特殊字符的函数名","slug":"带有空格和特殊字符的函数名","link":"#带有空格和特殊字符的函数名","children":[]}]},{"level":2,"title":"匿名函数","slug":"匿名函数","link":"#匿名函数","children":[{"level":3,"title":"创建一个最简单的匿名函数","slug":"创建一个最简单的匿名函数","link":"#创建一个最简单的匿名函数","children":[]},{"level":3,"title":"接收参数","slug":"接收参数","link":"#接收参数","children":[]},{"level":3,"title":"It关键字","slug":"it关键字","link":"#it关键字","children":[]}]},{"level":2,"title":"Lambda","slug":"lambda","link":"#lambda","children":[{"level":3,"title":"函数的参数是函数","slug":"函数的参数是函数","link":"#函数的参数是函数","children":[]},{"level":3,"title":"返回值是函数","slug":"返回值是函数","link":"#返回值是函数","children":[]}]},{"level":2,"title":"Null的处理","slug":"null的处理","link":"#null的处理","children":[{"level":3,"title":"声明可空类型","slug":"声明可空类型","link":"#声明可空类型","children":[]},{"level":3,"title":"null的安全处理-操作符和let","slug":"null的安全处理-操作符和let","link":"#null的安全处理-操作符和let","children":[]},{"level":3,"title":"Null的安全处理-非空断言操作符","slug":"null的安全处理-非空断言操作符","link":"#null的安全处理-非空断言操作符","children":[]},{"level":3,"title":"Null的安全处理-If语句","slug":"null的安全处理-if语句","link":"#null的安全处理-if语句","children":[]}]},{"level":2,"title":"异常","slug":"异常","link":"#异常","children":[{"level":3,"title":"自定义异常和异常处理","slug":"自定义异常和异常处理","link":"#自定义异常和异常处理","children":[]},{"level":3,"title":"先决条件函数","slug":"先决条件函数","link":"#先决条件函数","children":[]}]},{"level":2,"title":"字符串操作","slug":"字符串操作","link":"#字符串操作","children":[{"level":3,"title":"截取字符串subString","slug":"截取字符串substring","link":"#截取字符串substring","children":[]},{"level":3,"title":"转换集合split","slug":"转换集合split","link":"#转换集合split","children":[]},{"level":3,"title":"replace高级语法","slug":"replace高级语法","link":"#replace高级语法","children":[]},{"level":3,"title":"比较字符串或对象","slug":"比较字符串或对象","link":"#比较字符串或对象","children":[]}]},{"level":2,"title":"数值","slug":"数值","link":"#数值","children":[{"level":3,"title":"安全转换数值","slug":"安全转换数值","link":"#安全转换数值","children":[]}]},{"level":2,"title":"标准库","slug":"标准库","link":"#标准库","children":[{"level":3,"title":"apply","slug":"apply","link":"#apply","children":[]},{"level":3,"title":"let","slug":"let","link":"#let","children":[]},{"level":3,"title":"run","slug":"run","link":"#run","children":[]},{"level":3,"title":"With","slug":"with","link":"#with","children":[]},{"level":3,"title":"also","slug":"also","link":"#also","children":[]},{"level":3,"title":"takeIf","slug":"takeif","link":"#takeif","children":[]},{"level":3,"title":"fakeUnless","slug":"fakeunless","link":"#fakeunless","children":[]}]},{"level":2,"title":"集合","slug":"集合","link":"#集合","children":[{"level":3,"title":"不可变List的创建和获取","slug":"不可变list的创建和获取","link":"#不可变list的创建和获取","children":[]},{"level":3,"title":"安全的获取List内的元素","slug":"安全的获取list内的元素","link":"#安全的获取list内的元素","children":[]},{"level":3,"title":"可变List","slug":"可变list","link":"#可变list","children":[]},{"level":3,"title":"遍历（索引遍历）","slug":"遍历-索引遍历","link":"#遍历-索引遍历","children":[]},{"level":3,"title":"结构和过滤","slug":"结构和过滤","link":"#结构和过滤","children":[]},{"level":3,"title":"Set","slug":"set","link":"#set","children":[]},{"level":3,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":3,"title":"Map的操作","slug":"map的操作","link":"#map的操作","children":[]}]}],"git":{"createdTime":1687011047000,"updatedTime":1687014880000,"contributors":[{"name":"Amayakite","email":"amayakite@qq.com","commits":2}]},"readingTime":{"minutes":21.61,"words":6483},"filePathRelative":"JavaLang/Android/02-Kotlin-基础.md","localizedDate":"2022年5月5日","excerpt":"<h2> 概述</h2>\\n<p>这个是基于JVM的语言，IDEA对其支持度非常好（亲儿子），在Java的基础上多了非常多的新特性，同理，上手起来比golang之类的语言更难...</p>\\n<p>在Android和近几年的新项目上，用Kotlin的比Java的多得多，由于其语法简单的特性（其实一堆注解之类的玩起来也不简单了），深受Android开发的喜爱（雾？），同时也是Google的亲儿子一样</p>\\n<p>Kotlin语法简洁，具备现代高级语言的特性，并且能和Java一流代码无缝操作，因为具备这些优势，至今为止越来越多的公司使用它来进行开发（无论是后端还是Android）</p>\\n<p>甚至<strong>可以编译成二进制源码</strong></p>","autoDesc":true}');export{l as data};
