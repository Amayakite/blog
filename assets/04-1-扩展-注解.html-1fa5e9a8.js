const e=JSON.parse('{"key":"v-4e15e86a","path":"/JavaLang/SpringFrameWork/04-1-%E6%89%A9%E5%B1%95-%E6%B3%A8%E8%A7%A3.html","title":"04-1-Java的注解","lang":"zh-CN","frontmatter":{"title":"04-1-Java的注解","date":"2021-12-11T20:06:03.000Z","category":"Spring-FrameWork","tag":["Java","注解","Annotation"],"description":"什么是注解(Annotation) ​ 在正式开始学习后续的内容之前，我们必须得搞明白注解是什么，而不是就单单的使用他，不然后面看源码之类的会非常困难 ​ 截止至目前，我们用的最多的注解可能是： ​ @Override 告诉编译器这个方法是覆盖父类的方法 ​ @WebServlet(\\"/test\\")表示某个类是一个Servlet，Web容器就会识别这个注解，在运行的时候调用它 ​ @Controller 告诉Spring容器这个类是一个JavaWeb的Bean类","head":[["meta",{"property":"og:url","content":"http://www.amayakite.github.io/JavaLang/SpringFrameWork/04-1-%E6%89%A9%E5%B1%95-%E6%B3%A8%E8%A7%A3.html"}],["meta",{"property":"og:site_name","content":"Amayakite Blogs"}],["meta",{"property":"og:title","content":"04-1-Java的注解"}],["meta",{"property":"og:description","content":"什么是注解(Annotation) ​ 在正式开始学习后续的内容之前，我们必须得搞明白注解是什么，而不是就单单的使用他，不然后面看源码之类的会非常困难 ​ 截止至目前，我们用的最多的注解可能是： ​ @Override 告诉编译器这个方法是覆盖父类的方法 ​ @WebServlet(\\"/test\\")表示某个类是一个Servlet，Web容器就会识别这个注解，在运行的时候调用它 ​ @Controller 告诉Spring容器这个类是一个JavaWeb的Bean类"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-17T12:51:48.000Z"}],["meta",{"property":"article:author","content":"Amayakite"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"注解"}],["meta",{"property":"article:tag","content":"Annotation"}],["meta",{"property":"article:published_time","content":"2021-12-11T20:06:03.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-17T12:51:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"04-1-Java的注解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-11T20:06:03.000Z\\",\\"dateModified\\":\\"2023-06-17T12:51:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Amayakite\\",\\"url\\":\\"https://github.com/Amayakite\\"}]}"]]},"headers":[{"level":2,"title":"注解的作用范围","slug":"注解的作用范围","link":"#注解的作用范围","children":[]},{"level":2,"title":"@Target 指定注解针对的地方","slug":"target-指定注解针对的地方","link":"#target-指定注解针对的地方","children":[]},{"level":2,"title":"@Retention 指定注解的保留域","slug":"retention-指定注解的保留域","link":"#retention-指定注解的保留域","children":[]},{"level":2,"title":"实现一个基本的自定义注解","slug":"实现一个基本的自定义注解","link":"#实现一个基本的自定义注解","children":[]},{"level":2,"title":"注解的调用实际是反射的妙用","slug":"注解的调用实际是反射的妙用","link":"#注解的调用实际是反射的妙用","children":[]},{"level":2,"title":"注解用在类上的获取","slug":"注解用在类上的获取","link":"#注解用在类上的获取","children":[]},{"level":2,"title":"注解类的值","slug":"注解类的值","link":"#注解类的值","children":[]},{"level":2,"title":"反射获取注解内的字段","slug":"反射获取注解内的字段","link":"#反射获取注解内的字段","children":[]}],"git":{"createdTime":1687006308000,"updatedTime":1687006308000,"contributors":[{"name":"Amayakite","email":"amayakite@qq.com","commits":1}]},"readingTime":{"minutes":7.1,"words":2129},"filePathRelative":"JavaLang/SpringFrameWork/04-1-扩展-注解.md","localizedDate":"2021年12月11日","excerpt":"<h1> 什么是注解(Annotation)</h1>\\n<p>​  在正式开始学习后续的内容之前，我们必须得搞明白注解是什么，而不是就单单的使用他，不然后面看源码之类的会非常困难</p>\\n<p>​  截止至目前，我们用的最多的注解可能是：</p>\\n<p>​  <code>@Override</code> 告诉编译器这个方法是覆盖父类的方法</p>\\n<p>​  <code>@WebServlet(\\"/test\\")</code>表示某个类是一个Servlet，Web容器就会识别这个注解，在运行的时候调用它</p>\\n<p>​  <code>@Controlle</code>r 告诉Spring容器这个类是一个JavaWeb的Bean类</p>","autoDesc":true}');export{e as data};
