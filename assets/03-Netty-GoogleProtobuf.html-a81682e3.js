import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as l,a as n,b as s,d as e,e as a}from"./app-3ab2953d.js";const i="/images/Java/Netty/03-Netty-GoogleProtobuf/image-20220517225915934.png",u="/images/Java/Netty/03-Netty-GoogleProtobuf/image-20220517231048311.png",k="/images/Java/Netty/03-Netty-GoogleProtobuf/image-20220517231157320.png",r="/images/Java/Netty/03-Netty-GoogleProtobuf/image-20220517233144250.png",d="/images/Java/Netty/03-Netty-GoogleProtobuf/image-20220517234742730.png",m="/images/Java/Netty/03-Netty-GoogleProtobuf/image-20220518214443747.png",v="/images/Java/Netty/03-Netty-GoogleProtobuf/image-20220518214542916.png",b={},g=a('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>这里主要说明下咋在Netty中使用一个由Google开发的高性能协议 Google ProtoBuf(基于TCP)</p><p>唉，最近找工作有点难受，学历不够做啥都是硬伤..找了几个月都没公司要（2022年5月17日22:56:16），准备老老实实的再学学找找，不行的话可能真得进厂拧螺丝了</p><h2 id="编码和解码的介绍" tabindex="-1"><a class="header-anchor" href="#编码和解码的介绍" aria-hidden="true">#</a> 编码和解码的介绍</h2><p>在开始之前，得先了解下这玩意</p><ul><li>在编写网络应用的时候，因为数据在网络传输中都是使用的二进制字节码数据，在发送数据时就需要编码，接收数据的时候就要解码</li><li>codec(解码器)的组成部分有两个 <ul><li>decoder解码器，负责把字节码数据转换成业务数据</li><li>encoder编码器，负责把业务数据转换成字节码数据</li></ul></li></ul><figure><img src="'+i+'" alt="image-20220517225915934" tabindex="0" loading="lazy"><figcaption>image-20220517225915934</figcaption></figure><ul><li>Netty自身提供了一些codec（解码器），例如： <ul><li>StringEncoder，对字符串编码，StringDecoder解码</li><li>ObjectEncoder，对Java对象，ObjectDecoder解码</li><li>……</li></ul></li><li>Netty自带的ObjectEncoder可以实现对POJO对象之类的编码解码，底层使用的是JDK序列化，这个东西本身效率并不高，存在如下问题 <ul><li>无法跨语言</li><li>序列化后的体积太大，是二进制编码的5倍多</li><li>序列化性能太低</li></ul></li></ul><p>因此，这个时候就有一个完美的开源的解决方案：Google Protobuf</p><h2 id="protobuf" tabindex="-1"><a class="header-anchor" href="#protobuf" aria-hidden="true">#</a> Protobuf</h2><h3 id="基本介绍" tabindex="-1"><a class="header-anchor" href="#基本介绍" aria-hidden="true">#</a> 基本介绍</h3>',11),y=n("li",null,[s("是Google发布的开源项目，全称：Google Protobuf Buffers，是一种高效的结构化数据存储格式，可以用于结构化数据的串行化，或者说序列化，他很适合做数据存储或者"),n("strong",null,"RPC数据交换格式"),n("ul",null,[n("li",null,"RPC-远程过程调用(remote procedure call)，Netty没有RPC是没有灵魂就像是西方没有耶路撒冷，之后学Dubbo的时候会更深刻的了解到RPC调用")])],-1),h=n("li",null,[s("ProtocolBuf是以"),n("strong",null,"message"),s("的方式来管理数据的")],-1),w=n("li",null,"支持跨平台，跨语言，目前支持绝大部分语言，例如C++，Java，C#，Python，Golang(需要额外安装解码器)，javascript……",-1),f={href:"https://developers.google.cn/protocol-buffers/docs/proto3",target:"_blank",rel:"noopener noreferrer"},S=n("ul",null,[n("li",null,"可能需要挂代理")],-1),x=n("li",null,"很多项目使用了它，例如Dubbo，Seata等，用它的原因是因为它对数据的极致压缩",-1),C=a('<p>它实际上是一个新的文件类型，同时类型和不用的语言有不同的对应（并不需要去记，有自动转换工具）</p><figure><img src="'+u+'" alt="image-20220517231048311" tabindex="0" loading="lazy"><figcaption>image-20220517231048311</figcaption></figure><figure><img src="'+k+`" alt="image-20220517231157320" tabindex="0" loading="lazy"><figcaption>image-20220517231157320</figcaption></figure><h2 id="protobuf-快速入门" tabindex="-1"><a class="header-anchor" href="#protobuf-快速入门" aria-hidden="true">#</a> Protobuf-快速入门</h2><blockquote><p>需求：</p><ol><li>客户端可以发送一个Student Pojo对象到服务器（通过protobuf）</li><li>服务端能接收Student Pojo对象，并显示信息（通过protobuf）</li><li>客户端分别使用java和golang来完成</li></ol></blockquote><h3 id="依赖和domain的生成" tabindex="-1"><a class="header-anchor" href="#依赖和domain的生成" aria-hidden="true">#</a> 依赖和Domain的生成</h3><p>Java的依赖为</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.protobuf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>protobuf-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.20.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后创建文件<code>Student.proto</code>，并且确保IEDA或者Vscode中安装了<code>protocol Buffers</code>之类的插件</p><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token comment">//声明协议版本号，Proto目前有2和3，通常情况下都是声明3</span>
<span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 声明导出时候的报名（Java 其他语言差不多也是这种写法）</span>
<span class="token keyword">option</span> java_package <span class="token operator">=</span> <span class="token string">&quot;com.project.codec&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//声明导出Java时的外部类名，同时也是文件名</span>
<span class="token keyword">option</span> java_outer_classname <span class="token operator">=</span> <span class="token string">&quot;StudentEntity&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//定义message</span>
<span class="token comment">//这里声明的Student会在StudentEntity外部类生成一个内部类Student,这就是我们真正发送的POJO对象</span>
<span class="token keyword">message</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
  <span class="token comment">//  对应的是java中的 long StudentEntity.Student.id</span>
  <span class="token comment">//  这里的1表示的是属性的序号，不是value</span>
  <span class="token builtin">int64</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token builtin">string</span> name <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token builtin">int32</span> age <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着，我们要去它的仓库内下载好编译器</p>`,11),_={href:"https://github.com/protocolbuffers/protobuf/releases",target:"_blank",rel:"noopener noreferrer"},E={href:"https://gh2.yanqishui.work/https://github.com/protocolbuffers/protobuf/releases/download/v21.0-rc1/protoc-21.0-rc-1-win64.zip",target:"_blank",rel:"noopener noreferrer"},j=a('<figure><img src="'+r+`" alt="image-20220517233144250" tabindex="0" loading="lazy"><figcaption>image-20220517233144250</figcaption></figure><p>然后把bin中的内容丢到path即可（如果你用过golang的话建议是丢在gopath/bin中，方便管理些..）</p><p>接着在刚刚编写文件的位置打开shell，输入</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>protoc <span class="token parameter variable">--java_out</span><span class="token operator">=</span>. .<span class="token punctuation">\\</span>Student.proto
<span class="token comment"># 注意 out=后面有个点 是输出目录 可以替换成上级之类的 这个随意</span>
<span class="token comment"># 当然 你可以替换成--go_out来变成go（要在proto内加上option go_package = &quot;com.project.codec&quot;;）或者其他语言，这个随你心意</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后你就可以得到一个Java文件，并且它的文件头还写了一些话</p><figure><img src="`+d+'" alt="image-20220517234742730" tabindex="0" loading="lazy"><figcaption>image-20220517234742730</figcaption></figure><blockquote><p><strong>由协议缓冲区编译器生成。不要编辑!来源:Student.proto</strong></p><p>也就是说我们要用的时候直接调用它即可，<strong>不要修改</strong>它生成的内容</p></blockquote><p>而且这实体类七八百行，md如何把一个实体类写的我看不懂系列</p><h3 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端" aria-hidden="true">#</a> 客户端</h3><p>这里总的来说也是固定写法，main中加入个编码器（解码器之后可以在服务端看到），然后调用固定类的build创建对象再用</p><blockquote><p>Main</p></blockquote>',11),P=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"package"),s(),n("span",{class:"token namespace"},[s("com"),n("span",{class:"token punctuation"},"."),s("project"),n("span",{class:"token punctuation"},"."),s("codec")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("bootstrap"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Bootstrap")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ChannelFuture")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ChannelInitializer")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ChannelPipeline")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},"."),s("nio"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"NioEventLoopGroup")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},"."),s("socket"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"SocketChannel")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},"."),s("socket"),n("span",{class:"token punctuation"},"."),s("nio"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"NioSocketChannel")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("handler"),n("span",{class:"token punctuation"},"."),s("codec"),n("span",{class:"token punctuation"},"."),s("protobuf"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ProtobufEncoder")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@author"),s(` Amayakite
 * `),n("span",{class:"token keyword"},"@version"),s(` 1.0
 * `),n("span",{class:"token keyword"},"@date"),s(` 2022年05月11日17时49分48秒
 * `),n("span",{class:"token keyword"},"@description"),s(` TODO
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ProtoClient"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"NioEventLoopGroup"),s(" eventExecutors "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"NioEventLoopGroup"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token class-name"},"Bootstrap"),s(" bootstrap "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Bootstrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            bootstrap
                    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"group"),n("span",{class:"token punctuation"},"("),s("eventExecutors"),n("span",{class:"token punctuation"},")"),s(`
                    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"channel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"NioSocketChannel"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
                    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"handler"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ChannelInitializer"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"SocketChannel"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                        `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
                        `),n("span",{class:"token keyword"},"protected"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"initChannel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SocketChannel"),s(" ch"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"Exception"),s(),n("span",{class:"token punctuation"},"{"),s(`
                            `),n("span",{class:"token class-name"},"ChannelPipeline"),s(" pipeline "),n("span",{class:"token operator"},"="),s(" ch"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"pipeline"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                            `),n("span",{class:"token comment"},"// 加入编码器（重要，可以让我们直接发送ProtoBuf的对象而不需要做其他操作）"),s(`
                            pipeline`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addLast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ProtobufEncoder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                            pipeline`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addLast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ProtoClientHandler"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                        `),n("span",{class:"token punctuation"},"}"),s(`
                    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"客户端准备完毕"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

            `),n("span",{class:"token class-name"},"ChannelFuture"),s(" localhost "),n("span",{class:"token operator"},"="),s(" bootstrap"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"connect"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"localhost"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8080"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            localhost`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"channel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"closeFuture"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Exception"),s(" e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"RuntimeException"),n("span",{class:"token punctuation"},"("),s("e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"finally"),s(),n("span",{class:"token punctuation"},"{"),s(`
            eventExecutors`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"shutdownGracefully"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`


    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("p",null,"然后是Handler",-1),N=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"package"),s(),n("span",{class:"token namespace"},[s("com"),n("span",{class:"token punctuation"},"."),s("project"),n("span",{class:"token punctuation"},"."),s("codec")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("buffer"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Unpooled")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ChannelHandlerContext")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ChannelInboundHandlerAdapter")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@author"),s(` Amayakite
 * `),n("span",{class:"token keyword"},"@version"),s(` 1.0
 * `),n("span",{class:"token keyword"},"@date"),s(` 2022年05月11日18时28分34秒
 * `),n("span",{class:"token keyword"},"@description"),s(` TODO
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ProtoClientHandler"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"ChannelInboundHandlerAdapter"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token doc-comment comment"},[s(`/**
     * 当通道准备就绪时触发该方法（和服务端连接成功时）
     *
     * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"ctx"),s(`
     * `),n("span",{class:"token keyword"},"@throws"),s(),n("span",{class:"token reference"},[n("span",{class:"token class-name"},"Exception")]),s(`
     */`)]),s(`
    `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"channelActive"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ChannelHandlerContext"),s(" ctx"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"Exception"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"客户端已连接，ctx对象："'),s(),n("span",{class:"token operator"},"+"),s(" ctx"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"服务端地址为："'),s(),n("span",{class:"token operator"},"+"),s(" ctx"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"channel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"remoteAddress"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// 下面通过Message类中的newBuild()...build()来构建一个对象 固定写法"),s(`
        `),n("span",{class:"token class-name"},[s("StudentEntity"),n("span",{class:"token punctuation"},"."),s("Student")]),s(" student "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},[s("StudentEntity"),n("span",{class:"token punctuation"},"."),s("Student")]),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"newBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setId"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setName"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"张三"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setAge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"18"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"build"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//        ctx.writeAndFlush(Unpooled.copiedBuffer(student.toByteArray()));"),s(`
`),n("span",{class:"token comment"},"//        下面和上面的效果一样（应该，反正我两种都成功了）"),s(`
        ctx`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"writeAndFlush"),n("span",{class:"token punctuation"},"("),s("student"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"客户端发送消息成功"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"exceptionCaught"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ChannelHandlerContext"),s(" ctx"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Throwable"),s(" cause"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"Exception"),s(),n("span",{class:"token punctuation"},"{"),s(`
        ctx`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),H=n("h3",{id:"服务端",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#服务端","aria-hidden":"true"},"#"),s(" 服务端")],-1),I=n("p",null,"主要是解码器得好好设置，然后就能够正确获取对象了",-1),G=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"package"),s(),n("span",{class:"token namespace"},[s("com"),n("span",{class:"token punctuation"},"."),s("project"),n("span",{class:"token punctuation"},"."),s("codec")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("bootstrap"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ServerBootstrap")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ChannelFuture")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ChannelInitializer")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ChannelOption")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ChannelPipeline")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},"."),s("nio"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"NioEventLoopGroup")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},"."),s("socket"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"SocketChannel")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("channel"),n("span",{class:"token punctuation"},"."),s("socket"),n("span",{class:"token punctuation"},"."),s("nio"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"NioServerSocketChannel")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("io"),n("span",{class:"token punctuation"},"."),s("netty"),n("span",{class:"token punctuation"},"."),s("handler"),n("span",{class:"token punctuation"},"."),s("codec"),n("span",{class:"token punctuation"},"."),s("protobuf"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ProtobufDecoder")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token doc-comment comment"},[s(`/**
 * `),n("span",{class:"token keyword"},"@author"),s(` Amayakite
 * `),n("span",{class:"token keyword"},"@version"),s(` 1.0
 * `),n("span",{class:"token keyword"},"@date"),s(` 2022年05月11日17时01分32秒
 * `),n("span",{class:"token keyword"},"@description"),s(` TODO
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ProtoServer"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`

        `),n("span",{class:"token class-name"},"NioEventLoopGroup"),s(" bossGroup "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"NioEventLoopGroup"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"NioEventLoopGroup"),s(" workerGroup "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"NioEventLoopGroup"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token class-name"},"ServerBootstrap"),s(" serverBootstrap "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ServerBootstrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

            serverBootstrap
                    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"group"),n("span",{class:"token punctuation"},"("),s("bossGroup"),n("span",{class:"token punctuation"},","),s(" workerGroup"),n("span",{class:"token punctuation"},")"),s(`
                    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"channel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"NioServerSocketChannel"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
                    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"option"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ChannelOption"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"SO_BACKLOG"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"128"),n("span",{class:"token punctuation"},")"),s(`
                    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"childOption"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ChannelOption"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"SO_KEEPALIVE"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),s(`
                    `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"childHandler"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ChannelInitializer"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"SocketChannel"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                        `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
                        `),n("span",{class:"token keyword"},"protected"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"initChannel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SocketChannel"),s(" ch"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"Exception"),s(),n("span",{class:"token punctuation"},"{"),s(`
                            `),n("span",{class:"token class-name"},"ChannelPipeline"),s(" pipeline "),n("span",{class:"token operator"},"="),s(" ch"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"pipeline"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//                            添加解码器，这里是固定写法，xxx.xxx.getDefaultInstance()即可得到实例"),s(`
                            pipeline`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addLast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ProtobufDecoder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[s("StudentEntity"),n("span",{class:"token punctuation"},"."),s("Student")]),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getDefaultInstance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                            pipeline`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addLast"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ProtoServerHandler"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                        `),n("span",{class:"token punctuation"},"}"),s(`
                    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

            `),n("span",{class:"token class-name"},"ChannelFuture"),s(" sync "),n("span",{class:"token operator"},"="),s(" serverBootstrap"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"bind"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"8080"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addListener"),n("span",{class:"token punctuation"},"("),s("future "),n("span",{class:"token operator"},"->"),s(),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("future"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isSuccess"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"监听端口成功"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
                    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"监听端口失败"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
                `),n("span",{class:"token punctuation"},"}"),s(`
            `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            sync`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"channel"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"closeFuture"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"InterruptedException"),s(" e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"RuntimeException"),n("span",{class:"token punctuation"},"("),s("e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"finally"),s(),n("span",{class:"token punctuation"},"{"),s(`
            bossGroup`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"shutdownGracefully"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            workerGroup`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"shutdownGracefully"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`


    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),O=a(`<p>然后是Handler，两种写法，第一种手动转换</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>project<span class="token punctuation">.</span>codec</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>channel<span class="token punctuation">.</span></span><span class="token class-name">ChannelHandlerContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>channel<span class="token punctuation">.</span></span><span class="token class-name">ChannelInboundHandlerAdapter</span></span><span class="token punctuation">;</span>


<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> Amayakite
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@date</span> 2022年05月11日17时36分54秒
 * <span class="token keyword">@description</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProtoServerHandler</span> <span class="token keyword">extends</span> <span class="token class-name">ChannelInboundHandlerAdapter</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">channelRead</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">Object</span> msg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;服务端接收到的数据对象：&quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;服务端接收到的数据对象的类型：&quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exceptionCaught</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> cause<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 结果：</span>
服务端接收到的数据对象：id<span class="token operator">:</span> <span class="token number">1</span>
name<span class="token operator">:</span> <span class="token string">&quot;\\345\\274\\240\\344\\270\\211&quot;</span>
age<span class="token operator">:</span> <span class="token number">18</span>

服务端接收到的数据对象的类型：<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>project<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span>StudentEntity</span>$<span class="token class-name">Student</span>
<span class="token comment">// 上面那可以直接转换成对应的对象然后进行后续的操作了</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然也可以用Simple来，效果是一样的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>project<span class="token punctuation">.</span>codec</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>channel<span class="token punctuation">.</span></span><span class="token class-name">ChannelHandlerContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>channel<span class="token punctuation">.</span></span><span class="token class-name">ChannelInboundHandlerAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>channel<span class="token punctuation">.</span></span><span class="token class-name">SimpleChannelInboundHandler</span></span><span class="token punctuation">;</span>


<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> Amayakite
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@date</span> 2022年05月11日17时36分54秒
 * <span class="token keyword">@description</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProtoServerHandler</span> <span class="token keyword">extends</span> <span class="token class-name">SimpleChannelInboundHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StudentEntity<span class="token punctuation">.</span>Student</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">channelRead0</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> channelHandlerContext<span class="token punctuation">,</span> <span class="token class-name">StudentEntity<span class="token punctuation">.</span>Student</span> student<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;收到客户端发来的消息：&quot;</span> <span class="token operator">+</span> student<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//       PS: 分别打印信息 如果是上面的toString，则字符串会乱码，直接获取getName则不会</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;name:&quot;</span> <span class="token operator">+</span> student<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;age:&quot;</span> <span class="token operator">+</span> student<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;id:&quot;</span> <span class="token operator">+</span> student<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 效果</span>
收到客户端发来的消息：id<span class="token operator">:</span> <span class="token number">1</span>
name<span class="token operator">:</span> <span class="token string">&quot;\\345\\274\\240\\344\\270\\211&quot;</span>
age<span class="token operator">:</span> <span class="token number">18</span>

name<span class="token operator">:</span>张三
age<span class="token operator">:</span><span class="token number">18</span>
id<span class="token operator">:</span><span class="token number">1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发送不同类型的对象" tabindex="-1"><a class="header-anchor" href="#发送不同类型的对象" aria-hidden="true">#</a> 发送不同类型的对象</h2><p>首先我们要编写好一个proto文件</p><div class="language-protobuf line-numbers-mode" data-ext="protobuf"><pre class="language-protobuf"><code><span class="token comment">//声明协议版本号，Proto目前有2和3，通常情况下都是声明3</span>
<span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 声明导出时候的报名（Java 其他语言差不多也是这种写法）</span>
<span class="token keyword">option</span> java_package <span class="token operator">=</span> <span class="token string">&quot;com.project.codec&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//声明导出Java时的外部类名，同时也是文件名</span>
<span class="token keyword">option</span> java_outer_classname <span class="token operator">=</span> <span class="token string">&quot;StudentEntity&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//optimize_for = SPEED ：代码优化策略，默认是SPEED，可选的还有CODE_SIZE，LITE_RUNTIME（SPEED最快）</span>
<span class="token keyword">option</span> optimize_for <span class="token operator">=</span> SPEED<span class="token punctuation">;</span>


<span class="token comment">// ProtoBuf可以使用message管理其他的message</span>

<span class="token keyword">message</span>  <span class="token class-name">MyMessage</span> <span class="token punctuation">{</span>
  <span class="token comment">//  定义一个枚举类型 这里也可以放到外部定义（这里就相当于是定义了一个内部类一样）</span>
  <span class="token keyword">enum</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
    <span class="token comment">//    注意 枚举类型的话，序号是从0开始的，不是从1开始的</span>
    StudentType <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    WorkerType <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">//  下面的才是数据</span>

  <span class="token comment">//  用data_type来标识传递的数据类型（哪一个枚举类型）</span>
  <span class="token positional-class-name class-name">DataType</span> dataType <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">//  表示每次枚举类型最多只能出现其中的一个，节省空间（也就是下面最终只会出现一个对象）</span>
  <span class="token keyword">oneof</span> dataBody <span class="token punctuation">{</span>
    <span class="token comment">//    这里写了两个，表示可以出现两种类型，Student和Worker</span>
    <span class="token positional-class-name class-name">Student</span> student <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token positional-class-name class-name">Worker</span> worker <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">message</span> <span class="token class-name">Student</span> <span class="token punctuation">{</span>
  <span class="token builtin">int64</span> id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token builtin">string</span> name <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token builtin">int32</span> age <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">message</span> <span class="token class-name">Worker</span><span class="token punctuation">{</span>
  <span class="token builtin">string</span> name <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token builtin">bool</span> sex <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着生成实体类</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>protoc <span class="token parameter variable">--java_out</span><span class="token operator">=</span>你项目的java目录，例如/home/aaa/ccc/src/main/java .<span class="token punctuation">\\</span>Student.proto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后就得到了一个三千行的文件</p><figure><img src="`+m+'" alt="image-20220518214443747" tabindex="0" loading="lazy"><figcaption>image-20220518214443747</figcaption></figure><p>然后结构如下</p><figure><img src="'+v+`" alt="image-20220518214542916" tabindex="0" loading="lazy"><figcaption>image-20220518214542916</figcaption></figure><p>接着是客户端发送，只需要知道DataType是一个枚举类即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>project<span class="token punctuation">.</span>codec</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>buffer<span class="token punctuation">.</span></span><span class="token class-name">Unpooled</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>channel<span class="token punctuation">.</span></span><span class="token class-name">ChannelHandlerContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>channel<span class="token punctuation">.</span></span><span class="token class-name">ChannelInboundHandlerAdapter</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Random</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> Amayakite
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@date</span> 2022年05月11日18时28分34秒
 * <span class="token keyword">@description</span> TODO
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProtoClientHandler</span> <span class="token keyword">extends</span> <span class="token class-name">ChannelInboundHandlerAdapter</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 当通道准备就绪时触发该方法（和服务端连接成功时）
     *
     * <span class="token keyword">@param</span> <span class="token parameter">ctx</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">channelActive</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> nextInt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StudentEntity<span class="token punctuation">.</span>MyMessage</span> message <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nextInt <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">StudentEntity<span class="token punctuation">.</span>Student</span> student <span class="token operator">=</span> <span class="token class-name">StudentEntity<span class="token punctuation">.</span>Student</span><span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            发送Student对象</span>
            message <span class="token operator">=</span> <span class="token class-name">StudentEntity<span class="token punctuation">.</span>MyMessage</span><span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setDataType</span><span class="token punctuation">(</span><span class="token class-name">StudentEntity<span class="token punctuation">.</span>MyMessage<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>StudentType</span><span class="token punctuation">)</span>
                <span class="token comment">// 注意这个build，稍微有点套娃了属于</span>
                    <span class="token punctuation">.</span><span class="token function">setStudent</span><span class="token punctuation">(</span>student<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token comment">//            发送Worker对象</span>
            <span class="token class-name">StudentEntity<span class="token punctuation">.</span>Worker</span> worker <span class="token operator">=</span> <span class="token class-name">StudentEntity<span class="token punctuation">.</span>Worker</span><span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSex</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            message <span class="token operator">=</span> <span class="token class-name">StudentEntity<span class="token punctuation">.</span>MyMessage</span><span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setDataType</span><span class="token punctuation">(</span><span class="token class-name">StudentEntity<span class="token punctuation">.</span>MyMessage<span class="token punctuation">.</span>DataType<span class="token punctuation">.</span>WorkerType</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setWorker</span><span class="token punctuation">(</span>worker<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token comment">//        发送消息</span>
        ctx<span class="token punctuation">.</span><span class="token function">writeAndFlush</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;发送消息给服务端成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exceptionCaught</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> cause<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        ctx<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后是服务端，main中的<code>childHandler</code>中的解码器消息类型改下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">new</span> <span class="token class-name">ChannelInitializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SocketChannel</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">initChannel</span><span class="token punctuation">(</span><span class="token class-name">SocketChannel</span> ch<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">ChannelPipeline</span> pipeline <span class="token operator">=</span> ch<span class="token punctuation">.</span><span class="token function">pipeline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 这里解码器使用到我们定义的MyMessage</span>
        pipeline<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProtobufDecoder</span><span class="token punctuation">(</span><span class="token class-name">StudentEntity<span class="token punctuation">.</span>MyMessage</span><span class="token punctuation">.</span><span class="token function">getDefaultInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pipeline<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProtoServerHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后是Handler</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>project<span class="token punctuation">.</span>codec</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>channel<span class="token punctuation">.</span></span><span class="token class-name">ChannelHandlerContext</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>channel<span class="token punctuation">.</span></span><span class="token class-name">ChannelInboundHandlerAdapter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>netty<span class="token punctuation">.</span>channel<span class="token punctuation">.</span></span><span class="token class-name">SimpleChannelInboundHandler</span></span><span class="token punctuation">;</span>


<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> Amayakite
 * <span class="token keyword">@version</span> 1.0
 * <span class="token keyword">@date</span> 2022年05月11日17时36分54秒
 * <span class="token keyword">@description</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProtoServerHandler</span> <span class="token keyword">extends</span> <span class="token class-name">SimpleChannelInboundHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StudentEntity<span class="token punctuation">.</span>MyMessage</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">channelRead0</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span> channelHandlerContext<span class="token punctuation">,</span> <span class="token class-name">StudentEntity<span class="token punctuation">.</span>MyMessage</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">StudentEntity<span class="token punctuation">.</span>MyMessage<span class="token punctuation">.</span>DataType</span> dataType <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getDataType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 直接根据枚举类判断即可</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>dataType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token class-name">StudentType</span><span class="token operator">:</span>
                <span class="token class-name">StudentEntity<span class="token punctuation">.</span>Student</span> student <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getStudent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;收到的学生信息：&quot;</span> <span class="token operator">+</span> student<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> student<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> student<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token class-name">WorkerType</span><span class="token operator">:</span>
                <span class="token class-name">StudentEntity<span class="token punctuation">.</span>Worker</span> worker <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">getWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;收到的工人信息：&quot;</span> <span class="token operator">+</span> worker<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span> <span class="token operator">+</span> worker<span class="token punctuation">.</span><span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;收到未知类型的消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19);function D(A,B){const t=p("ExternalLinkIcon");return c(),l("div",null,[g,n("ol",null,[y,h,w,n("li",null,[s("语言指南<"),n("a",f,[s("Language Guide (proto3) | Protocol Buffers | Google Developers"),e(t)]),s("> "),S]),x]),C,n("p",null,[n("a",_,[s("Releases · protocolbuffers/protobuf (github.com)"),e(t)])]),n("p",null,[s("嘛反正下载对应系统的版本即可，这里放一个我的"),n("a",E,[s("下载链接"),e(t)])]),j,P,q,N,H,I,G,O])}const L=o(b,[["render",D],["__file","03-Netty-GoogleProtobuf.html.vue"]]);export{L as default};
