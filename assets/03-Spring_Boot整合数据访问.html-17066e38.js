import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as n,b as s,d as e,e as a}from"./app-2d4b26c1.js";const l="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221150913345.png",u="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221151209917.png",r="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221151310736.png",d="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221151826037.png",k="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221151640601.png",m="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221152823431.png",v="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221153017125.png",g="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221153229580.png",b="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221153348274.png",y="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221154104327.png",f="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221160137403.png",h="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221204925951.png",w="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221205315712.png",S="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221205429053.png",_="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221210024410.png",x="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221210211177.png",B="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221210338604.png",j="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221210417054.png",q="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221213429121.png",M="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221223203128.png",C="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221223606137.png",A="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211221224057991.png",I="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222002928765.png",P="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222003213478.png",T="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222003302412-16401043826611.png",D="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222122423789.png",z="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222122531840.png",E="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222123148327.png",F="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222123917205.png",L="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222124513280.png",R="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222125419223.png",O="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222125657921.png",N="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222130736751.png",U="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222152228461.png",V="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222152412179.png",X="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222153704752.png",H="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222172853573.png",J="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222132241034.png",W="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222132256102.png",Y="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222132633012.png",G="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222132850756.png",K="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222132956925.png",Q="/images/SpringBoot/03-Spring_Boot整合数据访问/image-20211222174450513.png",Z={},$=n("h2",{id:"概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),s(" 概述")],-1),nn=n("p",null,"首先我们打开官方文档",-1),sn={href:"https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using.build-systems.starters",target:"_blank",rel:"noopener noreferrer"},an=a('<p>发现跟操作数据库有关的 全都有一个data</p><figure><img src="'+l+'" alt="image-20211221150913345" tabindex="0" loading="lazy"><figcaption>image-20211221150913345</figcaption></figure><p>接下来我们要用jdbc 于是看看有哪些jdbc相关的</p><figure><img src="'+u+`" alt="image-20211221151209917" tabindex="0" loading="lazy"><figcaption>image-20211221151209917</figcaption></figure><p>看到了个名字最短的 应该就是他了</p><h3 id="导入依赖" tabindex="-1"><a class="header-anchor" href="#导入依赖" aria-hidden="true">#</a> 导入依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后可以看到如下内容</p><figure><img src="`+r+`" alt="image-20211221151310736" tabindex="0" loading="lazy"><figcaption>image-20211221151310736</figcaption></figure><p>貌似少了点什么？</p><p>我们的mysql数据库驱动呢？</p><p>因为官方不知道我们接下来要用哪个数据库..</p><p>所以我们接下里我们要操作什么数据库 就安装什么数据库的驱动即可</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你用的是最新版本 这里可以不用写版本号</p><p>因为spring官方已经对它做了一个版本仲裁（最新的版本）</p><figure><img src="`+d+'" alt="image-20211221151826037" tabindex="0" loading="lazy"><figcaption>image-20211221151826037</figcaption></figure><p>如果你还在用5.x 那么可以自定仲裁 版本号为了规范写在这里即可</p><figure><img src="'+k+`" alt="image-20211221151640601" tabindex="0" loading="lazy"><figcaption>image-20211221151640601</figcaption></figure><h3 id="分析自动配置" tabindex="-1"><a class="header-anchor" href="#分析自动配置" aria-hidden="true">#</a> 分析自动配置</h3><p>首先我们能看到springboot 的 autoconfiguration内有一个jdbc的包</p><p>并且里面第一个就是DataSourceAutoconfiguration</p><p>连接池相关 可以看到</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">DataSource</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">EmbeddedDatabaseType</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当我们没有配置任何连接池相关的bean的时候 就会使用它默认的</p><figure><img src="`+m+'" alt="image-20211221152823431" tabindex="0" loading="lazy"><figcaption>image-20211221152823431</figcaption></figure><p>而且还能看到一个DataSourceTransactionManagerAutoConfiguration 看着就是是事务管理器的配置</p><figure><img src="'+v+'" alt="image-20211221153017125" tabindex="0" loading="lazy"><figcaption>image-20211221153017125</figcaption></figure><p>还有一个jdbcTemplate</p><figure><img src="'+g+'" alt="image-20211221153229580" tabindex="0" loading="lazy"><figcaption>image-20211221153229580</figcaption></figure><p>额外说下 还有个分布式事务的相关控制 XADataSourceAutoConfiguration这个我们目前暂时用不到 之后学spring cloud的时候应该用得上</p><figure><img src="'+b+'" alt="image-20211221153348274" tabindex="0" loading="lazy"><figcaption>image-20211221153348274</figcaption></figure><p>接着我们看看DataSource的Properteis</p><figure><img src="'+y+`" alt="image-20211221154104327" tabindex="0" loading="lazy"><figcaption>image-20211221154104327</figcaption></figure><p>可以看到很多熟悉的东西 也就是说我们可以直接按照上面的来配置数据源了</p><h3 id="配置数据源" tabindex="-1"><a class="header-anchor" href="#配置数据源" aria-hidden="true">#</a> 配置数据源</h3><p>我这里就直接在yaml最终配置了（虽然说这样的写在properties里面看起来更规范一些）</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/db1
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试使用" tabindex="-1"><a class="header-anchor" href="#测试使用" aria-hidden="true">#</a> 测试使用</h3><p>因为spring boot直接给我们提供好了 test 文件 所以我们只需要直接注入jdbctemplate即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">class</span> <span class="token class-name">ApplicationTests</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> query <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>
            <span class="token string">&quot;select * from db1.admin&quot;</span><span class="token punctuation">,</span> 
            <span class="token punctuation">(</span>rs<span class="token punctuation">,</span> rowNum<span class="token punctuation">)</span> <span class="token operator">-&gt;</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>
                rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">User</span> next <span class="token operator">=</span>  iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;User:{}&quot;</span><span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试结果：</p><figure><img src="`+f+'" alt="image-20211221160137403" tabindex="0" loading="lazy"><figcaption>image-20211221160137403</figcaption></figure><p>接着 我们发现它这里貌似有一个数据源相关的东西</p><p>HikariDataSource</p><p>搜了下 貌似是当前世界上最快的数据源管理包</p><p>但是我们平常可能因为一些别的需要</p><p>例如Druid：主要是德鲁伊会提供数据监控等等 后边分布式的时候监控很有用</p><p>接下里安装下druid吧</p><h2 id="使用druid数据源" tabindex="-1"><a class="header-anchor" href="#使用druid数据源" aria-hidden="true">#</a> 使用Druid数据源</h2><p>我们整合第三方数据源有两种方式</p>',51),tn=n("li",null,"引入下druid的包",-1),en=n("li",null,"以前的方法就是在xml或者bean中或者注册一个DruidDataSource",-1),pn=n("li",null,"就是我们之前的配置的方式。。然后要额外配置蛮多东西..",-1),on={href:"https://www.bilibili.com/video/BV19K4y1L7MT?p=61&spm_id_from=pageDriver",target:"_blank",rel:"noopener noreferrer"},cn=n("li",null,"找starter",-1),ln=n("h3",{id:"才用传统方法配置druid",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#才用传统方法配置druid","aria-hidden":"true"},"#"),s(" 才用传统方法配置druid")],-1),un={href:"https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"},rn=a(`<p>我们首先安装下druid的依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来配置</p><p>自己配肯定是懒得配的 于是乎去druid的wiki上面找了找</p>`,4),dn={href:"https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"},kn=a(`<p>发现上面都有现成的了 于是乎我们按照它那里的顺序来做即可</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/db1
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>
    <span class="token key atrule">filters</span><span class="token punctuation">:</span> stat<span class="token punctuation">,</span>log4j2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyDataSourceConfig</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 配置druid
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;spring.datasource&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DataSource</span> <span class="token function">dataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DruidDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
 <span class="token comment">// 这里是设置监控的访问路径</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ServletRegistrationBean</span> <span class="token function">servletRegistrationBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">StatViewServlet</span> statViewServlet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StatViewServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token class-name">ServletRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">StatViewServlet</span><span class="token punctuation">&gt;</span></span> bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>statViewServlet<span class="token punctuation">,</span> <span class="token string">&quot;/druid/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 监控web应用
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span> <span class="token function">webFilterRegistation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WebStatFilter</span> webStatFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebStatFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WebStatFilter</span><span class="token punctuation">&gt;</span></span> bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>webStatFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bean<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        bean<span class="token punctuation">.</span><span class="token function">addInitParameter</span><span class="token punctuation">(</span><span class="token string">&quot;exclusions&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> bean<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">DruidStatInterceptor</span> <span class="token function">druidStatInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DruidStatInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>



<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>程序启动后，我们访问下</p><figure><img src="`+h+'" alt="image-20211221204925951" tabindex="0" loading="lazy"><figcaption>image-20211221204925951</figcaption></figure><h3 id="通过state方式来使用druid" tabindex="-1"><a class="header-anchor" href="#通过state方式来使用druid" aria-hidden="true">#</a> 通过state方式来使用druid</h3><p>于是还真的发现了</p>',7),mn={href:"https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"},vn=a(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--version可以去这里看看最新是什么版本
 https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter
 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来我们看看这玩意有什么东西</p><figure><img src="`+w+'" alt="image-20211221205315712" tabindex="0" loading="lazy"><figcaption>image-20211221205315712</figcaption></figure><p>首先是druid 然后是slf4j 然后是 autoconfig</p><p>我们就直奔autoconfig</p><figure><img src="'+S+'" alt="image-20211221205429053" tabindex="0" loading="lazy"><figcaption>image-20211221205429053</figcaption></figure><p>我们首先可以看到它有如下注解</p>',7),gn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@ConditionalOnClass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"DruidDataSource"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@AutoConfigureBefore"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"DataSourceAutoConfiguration"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@EnableConfigurationProperties"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"DruidStatProperties"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"DataSourceProperties"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),bn=a(`<p>这里重点看第二行 自动配置应在其他指定的自动配置类之前应用</p><p>我们可以知道 官方的哪个DataSource注册有一个条件：当前容器内没有dataSource的@Bean才注册</p><p>接着它倒入了四个包</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token class-name">DruidSpringAopConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> 
    <span class="token class-name">DruidStatViewServletConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> 
    <span class="token class-name">DruidWebStatFilterConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
    <span class="token class-name">DruidFilterConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一个是监控SpringBean的（AOP），配置项是<code>spring.datasource.druid.aop-patterns</code></p><figure><img src="`+_+'" alt="image-20211221210024410" tabindex="0" loading="lazy"><figcaption>image-20211221210024410</figcaption></figure><p>第二个是监控页的配置相关 默认开启了(havingValue)</p><p><code>spring.datasource.druid.stat-view-servlet.enabled</code></p><figure><img src="'+x+'" alt="image-20211221210211177" tabindex="0" loading="lazy"><figcaption>image-20211221210211177</figcaption></figure><p>第三个是配置了监控页 默认开启</p><figure><img src="'+B+'" alt="image-20211221210338604" tabindex="0" loading="lazy"><figcaption>image-20211221210338604</figcaption></figure><p>第四个给容器中添加了蛮多的组件</p><p>这些的作用是开启防火墙之类的功能</p><figure><img src="'+j+`" alt="image-20211221210417054" tabindex="0" loading="lazy"><figcaption>image-20211221210417054</figcaption></figure><h3 id="配置druid" tabindex="-1"><a class="header-anchor" href="#配置druid" aria-hidden="true">#</a> 配置druid</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 数据源的绑定</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/db1
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>
    <span class="token key atrule">druid</span><span class="token punctuation">:</span>
      <span class="token key atrule">stat-view-servlet</span><span class="token punctuation">:</span>
        <span class="token comment"># 开启监控统计功能 就是那个网页访问的功能</span>
        <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token comment"># 配置访问监控页的账号和密码</span>
        <span class="token key atrule">login-password</span><span class="token punctuation">:</span> <span class="token number">123456</span>
        <span class="token key atrule">login-username</span><span class="token punctuation">:</span> root
        <span class="token comment"># 是否能重置</span>
        <span class="token key atrule">reset-enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
      <span class="token comment"># 监控web应用相关</span>
      <span class="token key atrule">web-stat-filter</span><span class="token punctuation">:</span>
        <span class="token comment"># 是否开启监控</span>
        <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token comment"># 监控的路径</span>
        <span class="token key atrule">url-pattern</span><span class="token punctuation">:</span> /*
        <span class="token comment"># 排除的路径</span>
        <span class="token key atrule">exclusions</span><span class="token punctuation">:</span> <span class="token string">&#39;*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*&#39;</span>
      <span class="token comment"># 监听器和防火墙相关的设置开启</span>
      <span class="token key atrule">filters</span><span class="token punctuation">:</span> stat<span class="token punctuation">,</span>wall

      <span class="token key atrule">filter</span><span class="token punctuation">:</span>
        <span class="token key atrule">stat</span><span class="token punctuation">:</span>
          <span class="token comment"># 开启监控</span>
          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token comment"># 让druid 统计 慢于1000ms的查询 都统计到慢查询上面去</span>
          <span class="token key atrule">slow-sql-millis</span><span class="token punctuation">:</span> <span class="token number">1000</span>
          <span class="token comment"># 是否记录慢查询</span>
          <span class="token key atrule">log-slow-sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">wall</span><span class="token punctuation">:</span>
          <span class="token comment">#开启防火墙</span>
          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token comment"># 这里可以指定一些防火墙的规则 例如 update不能操作 直接 :</span>
          <span class="token key atrule">config</span><span class="token punctuation">:</span>
            <span class="token comment"># 不允许修改表</span>
            <span class="token key atrule">drop-table-allow</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
            <span class="token comment"># 不允许在无条件的状态下删除数据</span>
            <span class="token key atrule">delete-where-none-check</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
            <span class="token comment"># wall的详细配置看这里 https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE-wallfilter</span>
      <span class="token comment">#          config:</span>
<span class="token comment">#            update-allow:</span>
      <span class="token comment"># 要监控的包（AOP增强）</span>
      <span class="token key atrule">aop-patterns</span><span class="token punctuation">:</span> com.MyProject.webadmin.*
  <span class="token key atrule">jdbc</span><span class="token punctuation">:</span>
    <span class="token key atrule">template</span><span class="token punctuation">:</span>
      <span class="token comment"># 设置查询超时时间 单位为秒</span>
      <span class="token key atrule">query-timeout</span><span class="token punctuation">:</span> <span class="token number">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来尝试访问下项目路径内的druid</p><figure><img src="`+q+`" alt="image-20211221213429121" tabindex="0" loading="lazy"><figcaption>image-20211221213429121</figcaption></figure><p>看起来没问题了</p><p>当然也可以自定义访问路径</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 数据源的绑定</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/db1
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>
    <span class="token key atrule">druid</span><span class="token punctuation">:</span>
      <span class="token key atrule">stat-view-servlet</span><span class="token punctuation">:</span>
        <span class="token comment"># 开启监控统计功能 就是那个网页访问的功能</span>
        <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token comment"># 配置访问监控页的账号和密码</span>
        <span class="token key atrule">login-password</span><span class="token punctuation">:</span> <span class="token number">123456</span>
        <span class="token key atrule">login-username</span><span class="token punctuation">:</span> root
        <span class="token comment"># 是否能重置</span>
        <span class="token key atrule">reset-enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
        <span class="token comment">#  自定义访问路径 注意 自定义访问路径之后 必须得通过 xxx/myproject/index.html</span>
        <span class="token comment"># 这个index.html 不可以省略</span>
        <span class="token key atrule">url-pattern</span><span class="token punctuation">:</span> <span class="token string">&#39;/myproject/*&#39;</span>
      <span class="token comment"># 监控web应用相关</span>
      <span class="token key atrule">web-stat-filter</span><span class="token punctuation">:</span>
        <span class="token comment"># 是否开启监控</span>
        <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token comment"># 监控的路径</span>
        <span class="token key atrule">url-pattern</span><span class="token punctuation">:</span> /*
        <span class="token comment"># 排除的路径</span>
        <span class="token key atrule">exclusions</span><span class="token punctuation">:</span> <span class="token string">&#39;*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*&#39;</span>
      <span class="token comment"># 监听器和防火墙相关的设置开启</span>
      <span class="token key atrule">filters</span><span class="token punctuation">:</span> stat<span class="token punctuation">,</span>wall

      <span class="token key atrule">filter</span><span class="token punctuation">:</span>
        <span class="token key atrule">stat</span><span class="token punctuation">:</span>
          <span class="token comment"># 开启监控</span>
          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token comment"># 让druid 统计 慢于1000ms的查询 都统计到慢查询上面去</span>
          <span class="token key atrule">slow-sql-millis</span><span class="token punctuation">:</span> <span class="token number">1000</span>
          <span class="token comment"># 是否记录慢查询</span>
          <span class="token key atrule">log-slow-sql</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">wall</span><span class="token punctuation">:</span>
          <span class="token comment">#开启防火墙</span>
          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token comment"># 这里可以指定一些防火墙的规则 例如 update不能操作 直接 :</span>
          <span class="token key atrule">config</span><span class="token punctuation">:</span>
            <span class="token comment"># 不允许修改表</span>
            <span class="token key atrule">drop-table-allow</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
            <span class="token comment"># 不允许在无条件的状态下删除数据</span>
            <span class="token key atrule">delete-where-none-check</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
            <span class="token comment"># wall的详细配置看这里 https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE-wallfilter</span>
      <span class="token comment">#          config:</span>
<span class="token comment">#            update-allow:</span>
      <span class="token comment"># 要监控的包（AOP增强）</span>
      <span class="token key atrule">aop-patterns</span><span class="token punctuation">:</span> com.MyProject.webadmin.*
  <span class="token key atrule">jdbc</span><span class="token punctuation">:</span>
    <span class="token key atrule">template</span><span class="token punctuation">:</span>
      <span class="token comment"># 设置查询超时时间 单位为秒</span>
      <span class="token key atrule">query-timeout</span><span class="token punctuation">:</span> <span class="token number">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="整合mybatis" tabindex="-1"><a class="header-anchor" href="#整合mybatis" aria-hidden="true">#</a> 整合Mybatis</h2><h3 id="准备依赖" tabindex="-1"><a class="header-anchor" href="#准备依赖" aria-hidden="true">#</a> 准备依赖</h3>`,23),yn={href:"https://github.com/mybatis/spring-boot-starter",target:"_blank",rel:"noopener noreferrer"},fn=a(`<p>在这上面的spring-boot-stater文件夹内可以获取到我们想要的pom</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然 我还是选择在maven仓库内的</p><figure><img src="`+M+'" alt="image-20211221223203128" tabindex="0" loading="lazy"><figcaption>image-20211221223203128</figcaption></figure><p>可以看到最终引入了springbootstate和jdbc 以及自动配置文件之类的</p><p>回想下我们之前还是怎么用mybatis的</p><ul><li>准备全局mapper配置器</li><li>然后准备单个文件的mapper映射</li><li>然后准备mapper准建</li><li>然后注册SqlSessionFactory工厂</li></ul><p>接下来我们老样子 先看看mybatis的autoconfig</p><figure><img src="'+C+`" alt="image-20211221223606137" tabindex="0" loading="lazy"><figcaption>image-20211221223606137</figcaption></figure><p>首先这玩意的判断是</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token comment">// 必须要包含xxx</span>
<span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">SqlSessionFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">SqlSessionFactoryBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 全局有且只有一个DataSource</span>
<span class="token annotation punctuation">@ConditionalOnSingleCandidate</span><span class="token punctuation">(</span><span class="token class-name">DataSource</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token comment">// 加载配置文件</span>
<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">MybatisProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 在自动加载完毕后加载的项</span>
<span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">DataSourceAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">MybatisLanguageDriverAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着我们看下MybatisProperties这个文件内绑定的是什么字段的配置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>
    prefix <span class="token operator">=</span> <span class="token string">&quot;mybatis&quot;</span>
<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisProperties</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">MYBATIS_PREFIX</span> <span class="token operator">=</span> <span class="token string">&quot;mybatis&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ResourcePatternResolver</span> resourceResolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PathMatchingResourcePatternResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
   * Location of MyBatis xml config file.
   */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> configLocation<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
   * Locations of MyBatis mapper files.
   */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mapperLocations<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
   * Packages to search type aliases. (Package delimiters are &quot;,; \\t\\n&quot;)
   */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> typeAliasesPackage<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
   * The super class for filtering type alias. If this not specifies, the MyBatis deal as type alias all classes that
   * searched from typeAliasesPackage.
   */</span>
    <span class="token keyword">private</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> typeAliasesSuperType<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
   * Packages to search for type handlers. (Package delimiters are &quot;,; \\t\\n&quot;)
   */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> typeHandlersPackage<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
   * Indicates whether perform presence check of the MyBatis xml config file.
   */</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> checkConfigLocation <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
   * Execution mode for <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>spring<span class="token punctuation">.</span></span><span class="token class-name">SqlSessionTemplate</span></span><span class="token punctuation">}</span>.
   */</span>
    <span class="token keyword">private</span> <span class="token class-name">ExecutorType</span> executorType<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
   * The default scripting language driver class. (Available when use together with mybatis-spring 2.0.2+)
   */</span>
    <span class="token keyword">private</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">LanguageDriver</span><span class="token punctuation">&gt;</span></span> defaultScriptingLanguageDriver<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
   * Externalized properties for MyBatis configuration.
   */</span>
    <span class="token keyword">private</span> <span class="token class-name">Properties</span> configurationProperties<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着我们看看是否有配置好SQLsessionFactory</p><p>在autoconfig中发现了</p><figure><img src="`+A+`" alt="image-20211221224057991" tabindex="0" loading="lazy"><figcaption>image-20211221224057991</figcaption></figure><p>@ConditionalOnMissingBean是在容器内找datasource并放进去 其他东西都是在配置文件中取的</p><p>紧接着 我们在这个配置文件的最底下发现了这些</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@org.springframework.context.annotation.Configuration</span>
    <span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token class-name">AutoConfiguredMapperScannerRegistrar</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">MapperFactoryBean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">MapperScannerConfigurer</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">MapperScannerRegistrarNotFoundConfiguration</span> <span class="token keyword">implements</span> <span class="token class-name">InitializingBean</span> <span class="token punctuation">{</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span>
                <span class="token string">&quot;Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他的倒是没什么</p><p>只有这个<code>@Import(AutoConfiguredMapperScannerRegistrar.class)</code></p><p>我们之前整合SSM的时候 mybatis需要配置一个扫包路径 这玩意就是来帮助我们扫包的 默认情况下会扫描项目路径下的所有包 也就是说 我们无须手动再编写扫mapper包的代码了</p><p>也就是说 只要我们写的操作mybatis的接口标注了@Mapper注解 就会被扫进来</p><h3 id="使用mybatis-配置文件" tabindex="-1"><a class="header-anchor" href="#使用mybatis-配置文件" aria-hidden="true">#</a> 使用mybatis-配置文件</h3><p>我们先创建如下配置文件</p><figure><img src="`+I+`" alt="image-20211222002928765" tabindex="0" loading="lazy"><figcaption>image-20211222002928765</figcaption></figure><p>一个mybatis-config</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>
        <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span>
        <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还有一个admin的mapper</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>
        <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>
        <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.MyProject.webadmin.mapper.AdminMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getAdminById<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>int<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.MyProject.webadmin.domain.Admin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        select * from db1.admin2 where id = #{id}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着在spring的配置文件中增加这两项</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 配置mybatis的规则</span>
<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>
  <span class="token comment"># 配置mybatis的全局配置文件</span>
  <span class="token key atrule">config-location</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mybatis/mybatis<span class="token punctuation">-</span>config.xml
  <span class="token comment"># 指定mapper映射文件路径</span>
  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mybatis/mapper/<span class="token important">*.xml</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用mybatis" tabindex="-1"><a class="header-anchor" href="#使用mybatis" aria-hidden="true">#</a> 使用mybatis</h3><p>三层架构</p><figure><img src="`+P+`" alt="image-20211222003213478" tabindex="0" loading="lazy"><figcaption>image-20211222003213478</figcaption></figure><p>这里我查的是admin表 对应字段</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Admin</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>写一个mapper来完成数据访问</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span> <span class="token comment">//注意 这个mapper不能省略</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AdminMapper</span> <span class="token punctuation">{</span>

     <span class="token class-name">Admin</span> <span class="token function">getAdminById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再写一个service来完成操作</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdminService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">AdminMapper</span> adminMapper<span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token class-name">Admin</span> <span class="token function">getAdminById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> adminMapper<span class="token punctuation">.</span><span class="token function">getAdminById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着写一个请求测试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DataSourceController</span> <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">AdminService</span> adminService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/admin/{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Admin</span> <span class="token function">getAdmin</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> adminService<span class="token punctuation">.</span><span class="token function">getAdminById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+T+'" alt="image-20211222003302412" tabindex="0" loading="lazy"><figcaption>image-20211222003302412</figcaption></figure><p>成功</p><h3 id="整合mybatis的一些配置-驼峰命名等" tabindex="-1"><a class="header-anchor" href="#整合mybatis的一些配置-驼峰命名等" aria-hidden="true">#</a> 整合Mybatis的一些配置（驼峰命名等）</h3>',46),hn={href:"https://mybatis.org/mybatis-3/zh/configuration.html#settings",target:"_blank",rel:"noopener noreferrer"},wn=a(`<p>可以看到，设置驼峰命名是通过设置mapUnderscoreToCamelCase为true来完成的</p><p>所以我们有两个选择--在xml或者在spring配置文件中配置</p><p>注意 这两个不能同时存在</p><p>例如：</p><ul><li><p>在XML中配置了，则不能再yaml之类的配置文件中配置configuration</p></li><li><p>反之亦然，如果说两者一齐存在，会报错</p></li><li><p>通常情况下 我们并不会创建mybatis的核心配置文件，而是像这样，全部都在spring的配置文件中配置核心设置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 配置mybatis的规则</span>
<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>
  <span class="token comment">#     这里不指定 mybatis的全局核心配置文件 而是通过下面的configuration来配置对应的项目</span>
<span class="token comment">#  config-location: classpath:mybatis/mybatis-config.xml</span>
  <span class="token comment"># 指定mapper映射文件路径</span>
  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mybatis/mapper/<span class="token important">*.xml</span>
  
  <span class="token comment"># 如果你配置了mybatis的核心配置文件 则这里千万不要写这个configuration项，铁定会报错</span>
  <span class="token key atrule">configuration</span><span class="token punctuation">:</span>
    <span class="token key atrule">map-underscore-to-camel-case</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>在xml中</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>
        <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span>
        <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mapUnderscoreToCamelCase<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在spring配置文件中</p>`,8),Sn=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{yaml:"",class:"language-yaml"},[n("code",null,[n("span",{class:"token comment"},"# 配置mybatis的规则"),s(`
`),n("span",{class:"token key atrule"},"mybatis"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token comment"},"# 配置mybatis的全局配置文件"),s(`
  `),n("span",{class:"token key atrule"},"config-location"),n("span",{class:"token punctuation"},":"),s(" classpath"),n("span",{class:"token punctuation"},":"),s("mybatis/mybatis"),n("span",{class:"token punctuation"},"-"),s(`config.xml
  `),n("span",{class:"token comment"},"# 指定mapper映射文件路径"),s(`
  `),n("span",{class:"token key atrule"},"mapper-locations"),n("span",{class:"token punctuation"},":"),s(" classpath"),n("span",{class:"token punctuation"},":"),s("mybatis/mapper/"),n("span",{class:"token important"},"*.xml"),s(`
  `),n("span",{class:"token key atrule"},"configuration"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"map-underscore-to-camel-case"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean important"},"true"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," ")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_n=n("p",null,"当然 你可以选择删掉mybatis核心配置xml文件 全部都在spring内进行配置",-1),xn=n("p",null,"这个通常根据项目情况来决定",-1),Bn=n("p",null,"但是，XXXMapper--表的查询文件最好不要删 一般情况下来说 简单的查询用注解 ，复杂的一定要用xxxMapper.xml的",-1),jn=n("h2",{id:"整合mybatisplus",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#整合mybatisplus","aria-hidden":"true"},"#"),s(" 整合MybatisPlus")],-1),qn=n("p",null,"MybatisPlus是一个Mybatis的增强工具，在Mybatis的基础上只做增强不做改变，为简化开发，提高效率而生",-1),Mn={href:"https://baomidou.com/",target:"_blank",rel:"noopener noreferrer"},Cn=a(`<p>封装了很多基本的增删改查</p><p>我们就直接按照官方文档的上手操作了</p><h3 id="添加依赖" tabindex="-1"><a class="header-anchor" href="#添加依赖" aria-hidden="true">#</a> 添加依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4.3.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着我们可以发现它引入了如下的依赖</p><figure><img src="`+D+'" alt="image-20211222122423789" tabindex="0" loading="lazy"><figcaption>image-20211222122423789</figcaption></figure><p>引入了mybatis jdbc以及额外的autoconfiguration</p><p>说明这里已经给我们引入了mybatis 不需要额外的引入其他内容</p><p>可以在autoconfiguration中看到如下内容</p><figure><img src="'+z+`" alt="image-20211222122531840" tabindex="0" loading="lazy"><figcaption>image-20211222122531840</figcaption></figure><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># Auto Configure</span>
<span class="token key attr-name">org.springframework.boot.env.EnvironmentPostProcessor</span><span class="token punctuation">=</span><span class="token value attr-value">\\
  com.baomidou.mybatisplus.autoconfigure.SafetyEncryptProcessor</span>
<span class="token key attr-name">org.springframework.boot.autoconfigure.EnableAutoConfiguration</span><span class="token punctuation">=</span><span class="token value attr-value">\\
  com.baomidou.mybatisplus.autoconfigure.IdentifierGeneratorAutoConfiguration,\\
  com.baomidou.mybatisplus.autoconfigure.MybatisPlusLanguageDriverAutoConfiguration,\\
  com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>EnableAutoConfiguration是启动时额外要加载的类</p><p>接下来我们看看MybatisPlusAutoConfiguration</p>`,13),An=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@ConditionalOnClass"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"SqlSessionFactory"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"SqlSessionFactoryBean"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@ConditionalOnSingleCandidate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"DataSource"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@EnableConfigurationProperties"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"MybatisPlusProperties"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@AutoConfigureAfter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"DataSourceAutoConfiguration"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"MybatisPlusLanguageDriverAutoConfiguration"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MybatisPlusAutoConfiguration"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"InitializingBean"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),In=a('<p>这个自动配置类在容器中放了一堆Bean，关联了MybatisPlusProperties，也就是说，我们以后要更改的话 只需要修改<code>mybatis-plus</code>的配置即可</p><p>接着我们继续看看AutoConciguration配置 了哪些bean</p><p>首先是一个</p><figure><img src="'+E+`" alt="image-20211222123148327" tabindex="0" loading="lazy"><figcaption>image-20211222123148327</figcaption></figure><p>设置好了Mybatis的SqlSessionFactory</p><p>@Bean标注的对象，如果参数是一个对象，那么就会从容器中自动的传入这个组件</p><p>而我们此时的容器中正好是一个Druid的是数据源</p><p>所以使用的将是我们的druid数据源</p><p>接着我们看看第一个if</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span><span class="token function">getConfigLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    factory<span class="token punctuation">.</span><span class="token function">setConfigLocation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resourceLoader<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span><span class="token function">getConfigLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个是我们有没有mybatis的全局配置文件 如果没有配 就不用管了</p><p>接下来还有非常多的配置</p><p>例如一个configuration</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span><span class="token function">getConfigurationProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 factory<span class="token punctuation">.</span><span class="token function">setConfigurationProperties</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span><span class="token function">getConfigurationProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来我们再看看这个MybatisPlusProperties</p><p>首先就能看到配置了一个mapper的位置-mapperLocations</p><figure><img src="`+F+`" alt="image-20211222123917205" tabindex="0" loading="lazy"><figcaption>image-20211222123917205</figcaption></figure><p><code>classpath*:/mapper/**/*.xml</code></p><p>任意包下的类路径下的所有mapper文件夹下任意路径下的xml都是sql映射文件</p><p>相当于给我们把mapper的映射也配置好了</p><p>所以说我们以后需要增加mapper配置文件 只需要在我们的resources文件夹下的mapper文件夹里一放就可以了</p><p>接着我们还可以发现 它给我们配置好了sqlsessionTemplate</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token annotation punctuation">@ConditionalOnMissingBean</span>
<span class="token keyword">public</span> <span class="token class-name">SqlSessionTemplate</span> <span class="token function">sqlSessionTemplate</span><span class="token punctuation">(</span><span class="token class-name">SqlSessionFactory</span> sqlSessionFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ExecutorType</span> executorType <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>properties<span class="token punctuation">.</span><span class="token function">getExecutorType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>executorType <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionTemplate</span><span class="token punctuation">(</span>sqlSessionFactory<span class="token punctuation">,</span> executorType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionTemplate</span><span class="token punctuation">(</span>sqlSessionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们继续下翻</p><p>看到了有一个额外的静态内部类，并且导入了一个AutoConfiguredMapperScannerRegistrar</p>`,25),Pn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Configuration"),n("span",{class:"token punctuation"},"("),s("proxyBeanMethods "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Import"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"AutoConfiguredMapperScannerRegistrar"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@ConditionalOnMissingBean"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"MapperFactoryBean"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"MapperScannerConfigurer"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"MapperScannerRegistrarNotFoundConfiguration"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"InitializingBean"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"afterPropertiesSet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        logger`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"debug"),n("span",{class:"token punctuation"},"("),s(`
            `),n("span",{class:"token string"},'"Not found configuration for registering mapper bean using @MapperScan, MapperFactoryBean and MapperScannerConfigurer."'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Tn=n("p",null,"接下来看看这个AutoConfiguredMapperScannerRegistrar",-1),Dn=n("figure",null,[n("img",{src:L,alt:"image-20211222124513280",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20211222124513280")],-1),zn=n("p",null,"可以发现 是和@mapper注解有关的，也就是说，我们无需额外的配置mapper注解的少报位置 它将会自动给我们进行扫描@mapper标注的接口",-1),En=n("h3",{id:"使用mybatis-plus",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用mybatis-plus","aria-hidden":"true"},"#"),s(" 使用Mybatis-Plus")],-1),Fn=n("p",null,"我们参照官方文档 先在main文件中额外加一个扫描的路径",-1),Ln=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@SpringBootApplication"),s(`
`),n("span",{class:"token annotation punctuation"},"@MapperScan"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"com.MyProject.webadmin.mapper"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Application"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"SpringApplication"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"run"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Application"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},","),s(" args"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Rn=a(`<p>这样在写mapper的时候就无需额外标注@mapper了</p><p>接下来我们依旧是创建一个admin类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Admin</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的数据源</p><figure><img src="`+R+`" alt="image-20211222125419223" tabindex="0" loading="lazy"><figcaption>image-20211222125419223</figcaption></figure><p>接着我们编写一个mapper接口AdminMapper</p><p>接着让其继承BaseMapper接口，并传入我们的Admin类泛型</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AdminMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Admin</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在BaseMapper中，我们可以看到有非常多的定义好的封装好的东西，基本的增删改查全部都有的</p><p>（注意 如果说要对数据库进行优化 则不太建议使用这里面的一些东西 还是建议手写）</p><figure><img src="`+O+`" alt="image-20211222125657921" tabindex="0" loading="lazy"><figcaption>image-20211222125657921</figcaption></figure><p>也就是我们现在无需对自己的AdminMapper再进行额外的任何操作 就可以拥有CRUD的功能</p><p>接下来我们简单使用下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">class</span> <span class="token class-name">ApplicationTests</span> <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">AdminMapper</span> adminMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Admin</span> admin <span class="token operator">=</span> adminMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;admin={}&quot;</span><span class="token punctuation">,</span> admin<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着喜闻热见的报错了--我们的表名是admin_2，这里用的类是admin 默认情况下它会去找admin2的表 所以说我们根据官方文档</p><h3 id="注解标注表名、字段名等" tabindex="-1"><a class="header-anchor" href="#注解标注表名、字段名等" aria-hidden="true">#</a> 注解标注表名、字段名等</h3>`,16),On={href:"https://baomidou.com/pages/223848/#tablename",target:"_blank",rel:"noopener noreferrer"},Nn=n("p",null,"发现可以指定表名",-1),Un=n("p",null,"于是乎在admin上标注下表名",-1),Vn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@NoArgsConstructor"),s(`
`),n("span",{class:"token annotation punctuation"},"@AllArgsConstructor"),s(`
`),n("span",{class:"token annotation punctuation"},"@TableName"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"admin2"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Admin"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Integer"),s(" id"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" name"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" password"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Xn=a('<p>运行：</p><figure><img src="'+N+`" alt="image-20211222130736751" tabindex="0" loading="lazy"><figcaption>image-20211222130736751</figcaption></figure><h3 id="规范的使用mybatis-plus" tabindex="-1"><a class="header-anchor" href="#规范的使用mybatis-plus" aria-hidden="true">#</a> 规范的使用Mybatis-plus</h3><p>我们正常的使用过程中 应该是这样的</p><p>Java Bean</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span><span class="token string">&quot;admin2&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Admin</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后是mapper</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AdminMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Admin</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个时候我们突然想起 应该规范的开发</p><p>也就是service分为两个 一个 接口 一个impl</p><p>但是这样又引出了一个问题 因为我们要使用BaseMapper所提供的查询，所以说要手动给service写一堆BaseMapper中的方法 并且让Impl再实现这个借口，再调用AdminMapper的一些方法不太现实</p><p>所以Mybatis-plus提供了一个神器接口</p><p><code>IService&lt;T&gt;</code></p><figure><img src="`+U+`" alt="image-20211222152228461" tabindex="0" loading="lazy"><figcaption>image-20211222152228461</figcaption></figure><p>这个接口里面定义了超多的方法和返回值，和baseMapper几乎一一对应 需要传入一个泛型</p><p>所以我们只需要这样：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AdminService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Admin</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是问题又来了</p><p>我们总不可能在IMPL中一个一个的去实现这么多方法吧</p><figure><img src="`+V+`" alt="image-20211222152412179" tabindex="0" loading="lazy"><figcaption>image-20211222152412179</figcaption></figure><p>所以mybatis也做了一个超级强大的类</p><p><code>ServiceImpl&lt;M,T&gt;</code> 这是一个对顶级Service接口的实现类</p><p>使用它的时候 继承它并传入两个泛型即可</p><p>第一个泛型M----Mapper接口</p><p>第二个泛型T----实体domain类</p><p>所以我们只需要</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdminServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AdminMapper</span><span class="token punctuation">,</span> <span class="token class-name">Admin</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">AdminService</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里有相当多的增删改查方法 这里就不展示了 接下来使用它</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">class</span> <span class="token class-name">ApplicationTests</span> <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">AdminService</span> adminService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Admin</span> admin <span class="token operator">=</span> adminService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;admin:{}&quot;</span><span class="token punctuation">,</span>admin<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+X+'" alt="image-20211222153704752" tabindex="0" loading="lazy"><figcaption>image-20211222153704752</figcaption></figure><h3 id="mybatis-plus的分页功能的使用" tabindex="-1"><a class="header-anchor" href="#mybatis-plus的分页功能的使用" aria-hidden="true">#</a> Mybatis-Plus的分页功能的使用</h3><p>官方是这样说明的</p>',32),Hn={href:"https://baomidou.com/pages/8f40ae/",target:"_blank",rel:"noopener noreferrer"},Jn=a(`<p>说以我们要先注册一个Bean 这里官方文有分新旧版本 我们就用新版即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//Spring boot方式</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.baomidou.cloud.service.*.mapper*&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisPlusConfig</span> <span class="token punctuation">{</span>

    <span class="token comment">// 旧版</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">PaginationInterceptor</span> <span class="token function">paginationInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">PaginationInterceptor</span> paginationInterceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PaginationInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置请求的页面大于最大页后操作， true调回到首页，false 继续请求  默认false</span>
        <span class="token comment">// paginationInterceptor.setOverflow(false);</span>
        <span class="token comment">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span>
        <span class="token comment">// paginationInterceptor.setLimit(500);</span>
        <span class="token comment">// 开启 count 的 join 优化,只针对部分 left join</span>
        paginationInterceptor<span class="token punctuation">.</span><span class="token function">setCountSqlParser</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JsqlParserCountOptimize</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> paginationInterceptor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 最新版</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MybatisPlusInterceptor</span> <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MybatisPlusInterceptor</span> interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PaginationInnerInterceptor</span><span class="token punctuation">(</span><span class="token class-name">DbType</span><span class="token punctuation">.</span><span class="token constant">H2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> interceptor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们使用最新版本的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.MyProject.webadmin.mapper&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisConfiguration</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MybatisPlusInterceptor</span> <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">MybatisPlusInterceptor</span> interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//        设置分页拦截器</span>
        <span class="token class-name">PaginationInnerInterceptor</span> interceptor1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PaginationInnerInterceptor</span><span class="token punctuation">(</span><span class="token class-name">DbType</span><span class="token punctuation">.</span><span class="token constant">H2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//        设置每一页最多有多少个结果 这里设置成100</span>
        interceptor1<span class="token punctuation">.</span><span class="token function">setMaxLimit</span><span class="token punctuation">(</span><span class="token number">100L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span>interceptor1<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> interceptor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来写个代码测试一下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">class</span> <span class="token class-name">ApplicationTests</span> <span class="token punctuation">{</span>


    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">AdminService</span> adminService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//        首先要创建一个page 传入两个参数 第一个是从哪个index开始查 第二个是要查询多少条记录</span>
        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Admin</span><span class="token punctuation">&gt;</span></span> adminPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//        然后使用service创建一个查询结果对象  第一个参数是page对象 第二个是查询条件（这里先不指定查询条件）</span>
        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Admin</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> adminService<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>adminPage<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;每页显示条数&quot;</span> <span class="token operator">+</span> page<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;总条数&quot;</span> <span class="token operator">+</span> page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;总页数&quot;</span> <span class="token operator">+</span> page<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;当前页&quot;</span> <span class="token operator">+</span> page<span class="token punctuation">.</span><span class="token function">getCurrent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;当前页的数据&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><figure><img src="`+H+'" alt="image-20211222172853573" tabindex="0" loading="lazy"><figcaption>image-20211222172853573</figcaption></figure><h3 id="扩展-ieda的mybatisx插件的使用" tabindex="-1"><a class="header-anchor" href="#扩展-ieda的mybatisx插件的使用" aria-hidden="true">#</a> 扩展-IEDA的MybatisX插件的使用</h3><p>这玩意非常方便..</p><p>比方说我们现在有一张表</p><figure><img src="'+J+'" alt="image-20211222132241034" tabindex="0" loading="lazy"><figcaption>image-20211222132241034</figcaption></figure><p>右键</p><figure><img src="'+W+'" alt="image-20211222132256102" tabindex="0" loading="lazy"><figcaption>image-20211222132256102</figcaption></figure><p>接着几个设置大概这样 其他的都可以不动</p><figure><img src="'+Y+'" alt="image-20211222132633012" tabindex="0" loading="lazy"><figcaption>image-20211222132633012</figcaption></figure><figure><img src="'+G+'" alt="image-20211222132850756" tabindex="0" loading="lazy"><figcaption>image-20211222132850756</figcaption></figure><p>接着你就能在你的项目中额外得到这些东西</p><figure><img src="'+K+`" alt="image-20211222132956925" tabindex="0" loading="lazy"><figcaption>image-20211222132956925</figcaption></figure><p>Domain</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">webadmin<span class="token punctuation">.</span>domain</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">IdType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">TableField</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">TableId</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">TableName</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>


<span class="token annotation punctuation">@TableName</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">&quot;mes&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Mes</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>


    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Date</span> sendTime<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>exist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> that<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> that<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>that <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> that<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Mes</span> other <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Mes</span><span class="token punctuation">)</span> that<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> other<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> other<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSendTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> other<span class="token punctuation">.</span><span class="token function">getSendTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSendTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span><span class="token function">getSendTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> prime <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> prime <span class="token operator">*</span> result <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> prime <span class="token operator">*</span> result <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> prime <span class="token operator">*</span> result <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getSendTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token function">getSendTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot; [&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;Hash = &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;, id=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;, content=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;, sendTime=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>sendTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;, serialVersionUID=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>serialVersionUID<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mapper</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MesMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Mes</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>service</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MesService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Mes</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>serviceImpl</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Service</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MesServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MesMapper</span><span class="token punctuation">,</span> <span class="token class-name">Mes</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">MesService</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="扩展-junit5的额外注解" tabindex="-1"><a class="header-anchor" href="#扩展-junit5的额外注解" aria-hidden="true">#</a> 扩展-Junit5的额外注解</h3><figure><img src="`+Q+'" alt="image-20211222174450513" tabindex="0" loading="lazy"><figcaption>image-20211222174450513</figcaption></figure><p>注意 在所有springboot的相关项目中 要使用spring容器内的内容 都需要：</p><p>在类名处加上@SpringBootTest注解</p><p>还有一些其他的东西暂时先不学 了 等过了spring cloud再说</p>',32);function Wn(Yn,Gn){const t=o("ExternalLinkIcon");return i(),c("div",null,[$,nn,n("p",null,[n("a",sn,[s("https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using.build-systems.starters"),e(t)])]),an,n("ul",null,[n("li",null,[s("自定义 "),n("ul",null,[tn,en,pn,n("li",null,[s("详情的可以看"),n("a",on,[s("https://www.bilibili.com/video/BV19K4y1L7MT?p=61&spm_id_from=pageDriver"),e(t)])])])]),cn]),ln,n("p",null,[s("全部按照官方文档来"),n("a",un,[s("https://github.com/alibaba/druid/wiki/常见问题"),e(t)])]),rn,n("p",null,[n("a",dn,[s("https://github.com/alibaba/druid/wiki/常见问题"),e(t)])]),kn,n("p",null,[n("a",mn,[s("https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter"),e(t)])]),vn,gn,bn,n("p",null,[n("a",yn,[s("https://github.com/mybatis/spring-boot-starter"),e(t)])]),fn,n("p",null,[s("在官方文档中"),n("a",hn,[s("https://mybatis.org/mybatis-3/zh/configuration.html#settings"),e(t)])]),wn,Sn,_n,xn,Bn,jn,qn,n("p",null,[s("国人制作的，官网"),n("a",Mn,[s("https://baomidou.com/"),e(t)])]),Cn,An,In,Pn,Tn,Dn,zn,En,Fn,Ln,Rn,n("p",null,[n("a",On,[s("https://baomidou.com/pages/223848/#tablename"),e(t)])]),Nn,Un,Vn,Xn,n("p",null,[n("a",Hn,[s("https://baomidou.com/pages/8f40ae/"),e(t)])]),Jn])}const Zn=p(Z,[["render",Wn],["__file","03-Spring_Boot整合数据访问.html.vue"]]);export{Zn as default};
