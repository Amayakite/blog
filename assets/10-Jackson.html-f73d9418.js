import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e}from"./app-2d4b26c1.js";const i="/images/SpringBoot/10-Jackson/image-20220611212331382.png",u="/images/SpringBoot/10-Jackson/image-20220611212734500.png",r="/images/SpringBoot/10-Jackson/image-20220611213608366.png",k="/images/SpringBoot/10-Jackson/image-20220611214047277.png",d="/images/SpringBoot/10-Jackson/image-20220611214435426.png",m="/images/SpringBoot/10-Jackson/image-20220611223636750.png",v="/images/SpringBoot/10-Jackson/image-20220611224750641.png",b={},g=n("h2",{id:"概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概述","aria-hidden":"true"},"#"),s(" 概述")],-1),y=n("p",null,"如果你用了Springboot，应该会发现他有个很神奇的自带功能，就是可以将实体类转换成json对象返回给客户端，其底层就是用到了Jackson",-1),q=n("p",null,"不过json转换器目前不止有Jackson，还有",-1),j=n("ul",null,[n("li",null,"Google提供的Gson"),n("li",null,"Alibaba提供的FastJson")],-1),w=n("p",null,"当然三者各有千秋吧，不过SpringBoot竟然默认是使用Jackson，所以就有必要了解下如何使用了",-1),h={href:"https://github.com/FasterXML/jackson",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,"其中有一句描述为",-1),_=n("blockquote",null,[n("p",null,'Jackson has been known as "the Java JSON library" or "the best JSON parser for Java". Or simply as "JSON for Java".'),n("p",null,"Jackson被称为“Java JSON库”或“Java的最佳JSON解析器”。或者干脆写成“JSON for Java”。")],-1),x=n("p",null,"然后它还有如下的几个内容可以选择",-1),T={href:"https://github.com/FasterXML/jackson-core",target:"_blank",rel:"noopener noreferrer"},J={href:"https://github.com/FasterXML/jackson-core/wiki",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/FasterXML/jackson-annotations",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/FasterXML/jackson-annotations/wiki",target:"_blank",rel:"noopener noreferrer"},M={href:"https://github.com/FasterXML/jackson-databind",target:"_blank",rel:"noopener noreferrer"},L={href:"https://github.com/FasterXML/jackson-databind/wiki",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"streaming",-1),z=n("code",null,"streaming",-1),U=n("code",null,"annotations",-1),O=e('<p>也就是说我们使用jackson实际上就是使用它的<code>jackson-databind</code>这个项目</p><p>并且它还不仅能转换json，还可通过其他方式来完成对其他类型的转换</p><figure><img src="'+i+`" alt="image-20220611212331382" tabindex="0" loading="lazy"><figcaption>image-20220611212331382</figcaption></figure><h2 id="jackson的安装" tabindex="-1"><a class="header-anchor" href="#jackson的安装" aria-hidden="true">#</a> Jackson的安装</h2><p>比较简单，这里创建一个空的maven或者gradle项目，依赖如下</p><blockquote><p>maven</p></blockquote><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jackson-databind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.13.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>gradle(groovy)</p></blockquote><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code><span class="token comment">// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind</span>
implementation <span class="token string">&#39;com.fasterxml.jackson.core:jackson-databind:2.13.3&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>gradle(kotlin)</p></blockquote><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind</span>
<span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.fasterxml.jackson.core:jackson-databind:2.13.3&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到导入后，实际包含了core和注解的依赖</p><figure><img src="`+u+`" alt="image-20220611212734500" tabindex="0" loading="lazy"><figcaption>image-20220611212734500</figcaption></figure><h2 id="将java对象转换成json字符串" tabindex="-1"><a class="header-anchor" href="#将java对象转换成json字符串" aria-hidden="true">#</a> 将Java对象转换成Json字符串</h2><p>我们首先来一个实体类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>project<span class="token punctuation">.</span>jsontest</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> salary<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> updateTime<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Integer</span> age<span class="token punctuation">,</span> <span class="token class-name">BigDecimal</span> salary<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span> updateTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>salary <span class="token operator">=</span> salary<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>createTime <span class="token operator">=</span> createTime<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>updateTime <span class="token operator">=</span> updateTime<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着写一点测试代码，然后发现运行报错</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>
                <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
                <span class="token number">20</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token string">&quot;1012321.325135621156&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        首先来一个ObjectMapper对象</span>
        <span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
<span class="token comment">//            然后来转换成json字符串</span>
            <span class="token class-name">String</span> s <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JsonProcessingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+'" alt="image-20220611213608366" tabindex="0" loading="lazy"><figcaption>image-20220611213608366</figcaption></figure><p>是我们<strong>实体类中并没有任何的get</strong>和set方法，所以说给全部属性手动加上即可（基本所有来检测是否有get方法，通过getXXX来获取所有的相关字段，fastjson和gson之类的也是如此）</p><p>加上后，又出现了一个异常</p><figure><img src="'+k+`" alt="image-20220611214047277" tabindex="0" loading="lazy"><figcaption>image-20220611214047277</figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 date/time type \`java.time.LocalDateTime\` not supported by default: add Module &quot;com.fasterxml.jackson.datatype:jackson-datatype-jsr310&quot; to enable handling (through reference chain: com.project.jsontest.User[&quot;createTime&quot;])
 
 com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Java 8 datetime type \`java.time.LocalDateTime\` 默认不支持：添加模块“com.fasterxml.jackson.datatype:jackson-datatype-jsr310”以启用处理（通过参考链：com.project.jsontest.User[&quot;createTime&quot;])
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也就是说他不支持java8中提供的LocalDatetime类的转换，需要额外添加一个依赖来进行处理</p><p>这里直接加上即可</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.fasterxml.jackson.datatype<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jackson-datatype-jsr310<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.13.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来看看这个jsr310的依赖关系</p><figure><img src="`+d+'" alt="image-20220611214435426" tabindex="0" loading="lazy"><figcaption>image-20220611214435426</figcaption></figure><p>实际上它包含了之前的三者，所以说通常情况下直接引入它就可以替代databind了，所以现在可以直接把<code>databind</code>删除掉</p><p>当然，目前情况下依旧是无法直接转换的，需要添加一行代码来注册jsr310到ObjectWarpper对象之内</p>',30),A=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"JsonTest"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"User"),s(" user "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"("),s(`
                `),n("span",{class:"token string"},'"张三"'),n("span",{class:"token punctuation"},","),s(`
                `),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},","),s(`
                `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BigDecimal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"1012321.325135621156"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
                `),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
                `),n("span",{class:"token class-name"},"LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//        首先来一个ObjectMapper对象"),s(`
        `),n("span",{class:"token class-name"},"ObjectMapper"),s(" objectMapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//        findAndRegisterModules：查找并注册所有的Module（比如jsr310）"),s(`
        objectMapper`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"findAndRegisterModules"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"try"),s(),n("span",{class:"token punctuation"},"{"),s(`
`),n("span",{class:"token comment"},"//            然后来转换成json字符串"),s(`
            `),n("span",{class:"token class-name"},"String"),s(" s "),n("span",{class:"token operator"},"="),s(" objectMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"writeValueAsString"),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"catch"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"JsonProcessingException"),s(" e"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"throw"),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"RuntimeException"),n("span",{class:"token punctuation"},"("),s("e"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=e(`<p>结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token number">1012321.325135621156</span><span class="token punctuation">,</span>
    <span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token number">2022</span><span class="token punctuation">,</span>
        <span class="token number">6</span><span class="token punctuation">,</span>
        <span class="token number">11</span><span class="token punctuation">,</span>
        <span class="token number">21</span><span class="token punctuation">,</span>
        <span class="token number">47</span><span class="token punctuation">,</span>
        <span class="token number">55</span><span class="token punctuation">,</span>
        <span class="token number">818482000</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;updateTime&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
        <span class="token number">2022</span><span class="token punctuation">,</span>
        <span class="token number">6</span><span class="token punctuation">,</span>
        <span class="token number">11</span><span class="token punctuation">,</span>
        <span class="token number">21</span><span class="token punctuation">,</span>
        <span class="token number">47</span><span class="token punctuation">,</span>
        <span class="token number">55</span><span class="token punctuation">,</span>
        <span class="token number">818482000</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>EMM这个日期也转换的不对啊，所以我们应该手动给他一个日期转换器，这里可以在实体类中设置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 注意 这个@Date是Lombok的，不是Jackson的 和Jackson没有关系</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> salary<span class="token punctuation">;</span>

<span class="token comment">//    只需要使用@JsonFormat注解，然后pattern参数指定日期格式即可</span>
    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> updateTime<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后你就能得到这样一个json</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>
    <span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token number">1012321.325135621156</span><span class="token punctuation">,</span>
    <span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 21:54:14&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;updateTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 21:54:14&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="json自定义转换器" tabindex="-1"><a class="header-anchor" href="#json自定义转换器" aria-hidden="true">#</a> Json自定义转换器</h2><p>如果我们想要自定义一个Json的转换器，例如一个BigDecimal，我只想保留小数点后一位（四舍五入）</p><p>那么可以这样</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>project<span class="token punctuation">.</span>jsontest</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">JsonGenerator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">JsonSerializer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">SerializerProvider</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">RoundingMode</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomerBigDecimalSerialize</span> <span class="token keyword">extends</span> <span class="token class-name">JsonSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BigDecimal</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> bigDecimal<span class="token punctuation">,</span> <span class="token class-name">JsonGenerator</span> jsonGenerator<span class="token punctuation">,</span> <span class="token class-name">SerializerProvider</span> serializerProvider<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
<span class="token comment">//        保留小数点后一位，第二个参数是四舍五入的模式</span>
        jsonGenerator<span class="token punctuation">.</span><span class="token function">writeNumber</span><span class="token punctuation">(</span>bigDecimal<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">RoundingMode</span><span class="token punctuation">.</span><span class="token constant">HALF_UP</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然你也可以直接输出string</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>project<span class="token punctuation">.</span>jsontest</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">JsonGenerator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">JsonSerializer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span></span><span class="token class-name">SerializerProvider</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">RoundingMode</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomerBigDecimalSerialize</span> <span class="token keyword">extends</span> <span class="token class-name">JsonSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BigDecimal</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">BigDecimal</span> bigDecimal<span class="token punctuation">,</span> <span class="token class-name">JsonGenerator</span> jsonGenerator<span class="token punctuation">,</span> <span class="token class-name">SerializerProvider</span> serializerProvider<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
<span class="token comment">//        保留小数点后一位，第二个参数是四舍五入的模式</span>
        <span class="token class-name">BigDecimal</span> bigDecimal1 <span class="token operator">=</span> bigDecimal<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">RoundingMode</span><span class="token punctuation">.</span><span class="token constant">HALF_UP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//       当然也可以直接输出string</span>
        jsonGenerator<span class="token punctuation">.</span><span class="token function">writeString</span><span class="token punctuation">(</span>bigDecimal1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着使用</p>`,13),P=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@AllArgsConstructor"),s(`
`),n("span",{class:"token annotation punctuation"},"@NoArgsConstructor"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"User"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" name"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Integer"),s(" age"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//    @JsonSerialize:可以自定义序列化的规则，例如：将BigDecimal转换为String"),s(`
`),n("span",{class:"token comment"},"//    注意 这里并不是@JsonFormat"),s(`
    `),n("span",{class:"token annotation punctuation"},"@JsonSerialize"),n("span",{class:"token punctuation"},"("),s("using "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"CustomerBigDecimalSerialize"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"BigDecimal"),s(" salary"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token annotation punctuation"},"@JsonFormat"),n("span",{class:"token punctuation"},"("),s("pattern "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"yyyy-MM-dd HH:mm:ss"'),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" createTime"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token annotation punctuation"},"@JsonFormat"),n("span",{class:"token punctuation"},"("),s("pattern "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"yyyy-MM-dd HH:mm:ss"'),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" updateTime"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=e(`<blockquote><p>再写一个方法试试</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">JsonProcessingException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        users<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">1000.56456456</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        users<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">2000.45645456</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        users<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">3000.33345633</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        首先来一个ObjectMapper对象</span>
        <span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        findAndRegisterModules：查找并注册所有的Module（比如jsr310）</span>
        objectMapper<span class="token punctuation">.</span><span class="token function">findAndRegisterModules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        writeValueAsString：将对象转换为json字符串</span>
        <span class="token class-name">String</span> json <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>效果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">,</span>
        <span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token string">&quot;1000.6&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 22:18:42&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;updateTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 22:18:42&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">19</span><span class="token punctuation">,</span>
        <span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token string">&quot;2000.5&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 22:18:42&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;updateTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 22:18:42&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token string">&quot;3000.3&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 22:18:42&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;updateTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 22:18:42&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解析json字符串" tabindex="-1"><a class="header-anchor" href="#解析json字符串" aria-hidden="true">#</a> 解析Json字符串</h2><p>直接上代码</p><p>只有一个注意点：在任何情况下，要转换成带有泛型的类的话，必须得使用<code>TypeReference</code></p>`,6),C=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"package"),s(),n("span",{class:"token namespace"},[s("com"),n("span",{class:"token punctuation"},"."),s("project"),n("span",{class:"token punctuation"},"."),s("jsontest")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("com"),n("span",{class:"token punctuation"},"."),s("fasterxml"),n("span",{class:"token punctuation"},"."),s("jackson"),n("span",{class:"token punctuation"},"."),s("core"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"JsonProcessingException")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("com"),n("span",{class:"token punctuation"},"."),s("fasterxml"),n("span",{class:"token punctuation"},"."),s("jackson"),n("span",{class:"token punctuation"},"."),s("core"),n("span",{class:"token punctuation"},"."),s("type"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"TypeReference")]),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("com"),n("span",{class:"token punctuation"},"."),s("fasterxml"),n("span",{class:"token punctuation"},"."),s("jackson"),n("span",{class:"token punctuation"},"."),s("databind"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ObjectMapper")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ArrayList")]),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"JsonTest"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"JsonProcessingException"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"String"),s(" str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"[{\\"name\\":\\"张三\\",\\"age\\":18,\\"salary\\":\\"1000.6\\",\\"createTime\\":\\"2022-06-11 22:18:42\\",\\"updateTime\\":\\"2022-06-11 22:18:42\\"},{\\"name\\":\\"李四\\",\\"age\\":19,\\"salary\\":\\"2000.5\\",\\"createTime\\":\\"2022-06-11 22:18:42\\",\\"updateTime\\":\\"2022-06-11 22:18:42\\"},{\\"name\\":\\"王五\\",\\"age\\":20,\\"salary\\":\\"3000.3\\",\\"createTime\\":\\"2022-06-11 22:18:42\\",\\"updateTime\\":\\"2022-06-11 22:18:42\\"}]"'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//        首先来一个ObjectMapper对象"),s(`
        `),n("span",{class:"token class-name"},"ObjectMapper"),s(" objectMapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        objectMapper`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"findAndRegisterModules"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//        解析json字符串 这里和FastJson差不多，都是用objectMapper.readValue(str, new TypeReference<List<Customer>>() {});"),s(`
`),n("span",{class:"token comment"},"//        如果是FastJson的话，则是：JSON.parseObject(str, new TypeReference<List<Customer>>() {});"),s(`
        `),n("span",{class:"token class-name"},"ArrayList"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(" users "),n("span",{class:"token operator"},"="),s(" objectMapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readValue"),n("span",{class:"token punctuation"},"("),s("str"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TypeReference"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"ArrayList"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"User"),s(" user "),n("span",{class:"token operator"},":"),s(" users"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),H=e('<p>当然，如果只是转换个简简单单的单User的话，第二个参数直接传入<code>User.class</code>即可</p><p>效果</p><figure><img src="'+m+'" alt="image-20220611223636750" tabindex="0" loading="lazy"><figcaption>image-20220611223636750</figcaption></figure><p>嘛反正这个Typereference用途大概如下</p><figure><img src="'+v+'" alt="image-20220611224750641" tabindex="0" loading="lazy"><figcaption>image-20220611224750641</figcaption></figure><h2 id="jsonproperty设定别名" tabindex="-1"><a class="header-anchor" href="#jsonproperty设定别名" aria-hidden="true">#</a> @JsonProperty设定别名</h2><p>例如</p>',7),R=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Data"),s(`
`),n("span",{class:"token annotation punctuation"},"@AllArgsConstructor"),s(`
`),n("span",{class:"token annotation punctuation"},"@NoArgsConstructor"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"User"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token annotation punctuation"},"@JsonProperty"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user_name"'),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"String"),s(" name"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"Integer"),s(" age"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token annotation punctuation"},"@JsonSerialize"),n("span",{class:"token punctuation"},"("),s("using "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"CustomerBigDecimalSerialize"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"BigDecimal"),s(" salary"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token annotation punctuation"},"@JsonFormat"),n("span",{class:"token punctuation"},"("),s("pattern "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"yyyy-MM-dd HH:mm:ss"'),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" createTime"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token annotation punctuation"},"@JsonFormat"),n("span",{class:"token punctuation"},"("),s("pattern "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"yyyy-MM-dd HH:mm:ss"'),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"LocalDateTime"),s(" updateTime"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=e(`<p>反序列化结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token string">&quot;1000.0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 22:59:12&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;updateTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 22:59:12&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;user_name&quot;</span><span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="jsonignore和-jsonignoreproperties忽略属性" tabindex="-1"><a class="header-anchor" href="#jsonignore和-jsonignoreproperties忽略属性" aria-hidden="true">#</a> @JsonIgnore和@JsonIgnoreProperties忽略属性</h2><p>两个效果一样，不过一个是放在类上，一个是放在属性上声明</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token comment">// 这里可以指定多个，逗号分隔</span>
<span class="token annotation punctuation">@JsonIgnoreProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;user_name&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;user_name&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@JsonIgnore</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@JsonSerialize</span><span class="token punctuation">(</span>using <span class="token operator">=</span> <span class="token class-name">CustomerBigDecimalSerialize</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> salary<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createTime<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> updateTime<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>效果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token string">&quot;1000.0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 23:02:10&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;updateTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-11 23:02:10&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="jsoncreator来自定义构造函数" tabindex="-1"><a class="header-anchor" href="#jsoncreator来自定义构造函数" aria-hidden="true">#</a> @JsonCreator来自定义构造函数</h2><p>例子：当你 的属性都是final值的时候（无法set）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CtorBean</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@JsonCreator</span> <span class="token comment">// 这个构造器随便是啥，public或者private都可以，只要带上JsonCreator这个依赖并且在构造函数中声明的属性和实际要解析的属性名一致（可以用@JsonProperty来指定</span>
  <span class="token keyword">private</span> <span class="token class-name">CtorBean</span><span class="token punctuation">(</span><span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span>
    <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> age<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="附录-在kotlin中使用jackson" tabindex="-1"><a class="header-anchor" href="#附录-在kotlin中使用jackson" aria-hidden="true">#</a> 附录-在Kotlin中使用Jackson</h2><p>首先需要一个原先的jsr310依赖（附带data-bind、注解和core)，然后需要一个配合kotlin的依赖<code>jackson-module-kotlin</code>，这两个依赖的版本务必相同</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3&quot;</span></span><span class="token punctuation">)</span>
<span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>接着，可以正常的在data类中使用对对应的注解，例如</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">package</span> com<span class="token punctuation">.</span>project

<span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>JsonFormat
<span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>JsonProperty
<span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>JsonSerialize
<span class="token keyword">import</span> java<span class="token punctuation">.</span>math<span class="token punctuation">.</span>BigDecimal
<span class="token keyword">import</span> java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>LocalDateTime

<span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">User</span><span class="token punctuation">(</span>
    <span class="token annotation builtin">@JsonProperty</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;user_name&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">val</span> name<span class="token operator">:</span> String<span class="token punctuation">,</span>
    <span class="token keyword">val</span> age<span class="token operator">:</span> Int<span class="token operator">?</span><span class="token punctuation">,</span>
    <span class="token annotation builtin">@JsonFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">val</span> createTime<span class="token operator">:</span> LocalDateTime<span class="token punctuation">,</span>
    <span class="token annotation builtin">@JsonSerialize</span><span class="token punctuation">(</span>using <span class="token operator">=</span> CustomBigDecimalSerialize<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token keyword">val</span> salary<span class="token operator">:</span> BigDecimal<span class="token operator">?</span>
<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CustomBigDecimalSerialize类如下</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">package</span> com<span class="token punctuation">.</span>project

<span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token punctuation">.</span>JsonGenerator
<span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>JsonSerializer
<span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>SerializerProvider
<span class="token keyword">import</span> java<span class="token punctuation">.</span>math<span class="token punctuation">.</span>BigDecimal

<span class="token keyword">class</span> CustomBigDecimalSerialize <span class="token operator">:</span> JsonSerializer<span class="token operator">&lt;</span>BigDecimal<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">serialize</span><span class="token punctuation">(</span>value<span class="token operator">:</span> BigDecimal<span class="token operator">?</span><span class="token punctuation">,</span> gen<span class="token operator">:</span> JsonGenerator<span class="token operator">?</span><span class="token punctuation">,</span> serializers<span class="token operator">:</span> SerializerProvider<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        gen<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">writeString</span><span class="token punctuation">(</span>value<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">toPlainString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着调用</p>`,18),N=n("div",{class:"language-kotlin line-numbers-mode","data-ext":"kt"},[n("pre",{kotlin:"",class:"language-kotlin"},[n("code",null,[n("span",{class:"token keyword"},"package"),s(" com"),n("span",{class:"token punctuation"},"."),s(`project

`),n("span",{class:"token keyword"},"import"),s(" com"),n("span",{class:"token punctuation"},"."),s("fasterxml"),n("span",{class:"token punctuation"},"."),s("jackson"),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),s("kotlin"),n("span",{class:"token punctuation"},"."),s(`jacksonObjectMapper
`),n("span",{class:"token keyword"},"import"),s(" com"),n("span",{class:"token punctuation"},"."),s("fasterxml"),n("span",{class:"token punctuation"},"."),s("jackson"),n("span",{class:"token punctuation"},"."),s("module"),n("span",{class:"token punctuation"},"."),s("kotlin"),n("span",{class:"token punctuation"},"."),s(`readValue
`),n("span",{class:"token keyword"},"import"),s(" java"),n("span",{class:"token punctuation"},"."),s("math"),n("span",{class:"token punctuation"},"."),s(`BigDecimal
`),n("span",{class:"token keyword"},"import"),s(" java"),n("span",{class:"token punctuation"},"."),s("time"),n("span",{class:"token punctuation"},"."),s(`LocalDateTime


`),n("span",{class:"token keyword"},"fun"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token keyword"},"val"),s(" jacksonObjectMapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"jacksonObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    jacksonObjectMapper`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"findAndRegisterModules"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"val"),s(" userList "),n("span",{class:"token operator"},"="),s(" ArrayList"),n("span",{class:"token operator"},"<"),s("User"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    userList`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"User"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"张三"')]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"BigDecimal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"100.00"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    userList`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"User"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"李四"')]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(" LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"BigDecimal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"200.03"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    userList`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"User"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"王五"')]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(" LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"BigDecimal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"300.04"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    userList`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"User"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"赵六"')]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(" LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"BigDecimal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"400.05"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
    userList`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"User"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"田七"')]),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(" LocalDateTime"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"now"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"BigDecimal"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"500.06"')]),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

    jacksonObjectMapper`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"writeValueAsString"),n("span",{class:"token punctuation"},"("),s("userList"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"also"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("it"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token comment"},"//        再转换回来 在Kotlin中对readValue做了增强，可以直接传入泛型而不需要使用TypeReference"),s(`
        `),n("span",{class:"token keyword"},"val"),s(" userList2 "),n("span",{class:"token operator"},"="),s(" jacksonObjectMapper"),n("span",{class:"token punctuation"},"."),s("readValue"),n("span",{class:"token operator"},"<"),s("List"),n("span",{class:"token operator"},"<"),s("User"),n("span",{class:"token operator"},">"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("it"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string-literal singleline"},[n("span",{class:"token string"},'"====转换回来"')]),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("userList2"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`


`),n("span",{class:"token punctuation"},"}"),s(`


`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),V=e(`<p>效果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">&quot;user_name&quot;</span><span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-12 10:21:24&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token string">&quot;100.00&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token property">&quot;user_name&quot;</span><span class="token operator">:</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-12 10:21:24&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token string">&quot;200.03&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token property">&quot;user_name&quot;</span><span class="token operator">:</span><span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-12 10:21:24&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token string">&quot;300.04&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token property">&quot;user_name&quot;</span><span class="token operator">:</span><span class="token string">&quot;赵六&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-12 10:21:24&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token string">&quot;400.05&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token property">&quot;user_name&quot;</span><span class="token operator">:</span><span class="token string">&quot;田七&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span><span class="token string">&quot;2022-06-12 10:21:24&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;salary&quot;</span><span class="token operator">:</span><span class="token string">&quot;500.06&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>

====转换回来

<span class="token punctuation">[</span>User(name=张三<span class="token punctuation">,</span> age=<span class="token number">1</span><span class="token punctuation">,</span> createTime=<span class="token number">2022</span><span class="token number">-06</span>-12T10<span class="token operator">:</span><span class="token number">21</span><span class="token operator">:</span><span class="token number">24</span><span class="token punctuation">,</span> salary=<span class="token number">100.00</span>)<span class="token punctuation">,</span> User(name=李四<span class="token punctuation">,</span> age=<span class="token number">2</span><span class="token punctuation">,</span> createTime=<span class="token number">2022</span><span class="token number">-06</span>-12T10<span class="token operator">:</span><span class="token number">21</span><span class="token operator">:</span><span class="token number">24</span><span class="token punctuation">,</span> salary=<span class="token number">200.03</span>)<span class="token punctuation">,</span> User(name=王五<span class="token punctuation">,</span> age=<span class="token number">3</span><span class="token punctuation">,</span> createTime=<span class="token number">2022</span><span class="token number">-06</span>-12T10<span class="token operator">:</span><span class="token number">21</span><span class="token operator">:</span><span class="token number">24</span><span class="token punctuation">,</span> salary=<span class="token number">300.04</span>)<span class="token punctuation">,</span> User(name=赵六<span class="token punctuation">,</span> age=<span class="token number">4</span><span class="token punctuation">,</span> createTime=<span class="token number">2022</span><span class="token number">-06</span>-12T10<span class="token operator">:</span><span class="token number">21</span><span class="token operator">:</span><span class="token number">24</span><span class="token punctuation">,</span> salary=<span class="token number">400.05</span>)<span class="token punctuation">,</span> User(name=田七<span class="token punctuation">,</span> age=<span class="token number">5</span><span class="token punctuation">,</span> createTime=<span class="token number">2022</span><span class="token number">-06</span>-12T10<span class="token operator">:</span><span class="token number">21</span><span class="token operator">:</span><span class="token number">24</span><span class="token punctuation">,</span> salary=<span class="token number">500.06</span>)<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function G(X,K){const a=o("ExternalLinkIcon");return c(),l("div",null,[g,y,q,j,w,n("p",null,[s("官网："),n("a",h,[s("FasterXML/jackson: Main Portal page for the Jackson project (github.com)"),t(a)])]),f,_,x,n("ul",null,[n("li",null,[n("a",T,[s("Streaming"),t(a)]),s(" ("),n("a",J,[s("docs"),t(a)]),s(') ("jackson-core") defines low-level streaming API, and includes JSON-specific implementations—也就是核心包')]),n("li",null,[n("a",D,[s("Annotations"),t(a)]),s(" ("),n("a",S,[s("docs"),t(a)]),s(') ("jackson-annotations") contains standard Jackson annotations—基于核心包封装了一些注解')]),n("li",null,[n("a",M,[s("Databind"),t(a)]),s(" ("),n("a",L,[s("docs"),t(a)]),s(') ("jackson-databind") implements data-binding (and object serialization) support on '),B,s(" package; it depends both on "),z,s(" and "),U,s(" packages—实现数据的绑定（序列化和反序列化）")])]),O,A,I,P,F,C,H,R,E,N,V])}const Y=p(b,[["render",G],["__file","10-Jackson.html.vue"]]);export{Y as default};
