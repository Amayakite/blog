import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as a,d as t,e as p}from"./app-3ab2953d.js";const l={},u=p(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>这里主要过下 GoLang 中的 IO 还有文件以及时间库对应的操作</p><h2 id="文件" tabindex="-1"><a class="header-anchor" href="#文件" aria-hidden="true">#</a> 文件</h2><h3 id="打开和读取" tabindex="-1"><a class="header-anchor" href="#打开和读取" aria-hidden="true">#</a> 打开和读取</h3><p>整体思路还是和其他语言包差不多的，就是这 err...比较折磨人</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;fmt&quot;</span>
  <span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fileObject<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;./main.go&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;发生了异常，%v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//文件的关闭操作</span>
  <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span>fileObject <span class="token operator">*</span>os<span class="token punctuation">.</span>File<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    err <span class="token operator">:=</span> fileObject<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
      <span class="token comment">//    关闭出现了错误，不处理</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;关闭文件成功&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">(</span>fileObject<span class="token punctuation">)</span>

  <span class="token comment">//    读取文件</span>
  <span class="token comment">//1. 指定文件读取长度</span>
  <span class="token keyword">var</span> tmp <span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span><span class="token builtin">byte</span>

  read<span class="token punctuation">,</span> err <span class="token operator">:=</span> fileObject<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>tmp<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;文件读取出错%v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;读取了%d个字节，内容为：%s\\n&quot;</span><span class="token punctuation">,</span> read<span class="token punctuation">,</span> tmp<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然,一般情况下不会直接这样读，没有缓冲区，效率太低了</p><h3 id="buffer-读取文件" tabindex="-1"><a class="header-anchor" href="#buffer-读取文件" aria-hidden="true">#</a> Buffer 读取文件</h3><p>读取普通文件</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
  <span class="token string">&quot;bufio&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;io&quot;</span>
	<span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fileObject<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;./main.go&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;发生了异常，%v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//文件的关闭操作</span>
	<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span>fileObject <span class="token operator">*</span>os<span class="token punctuation">.</span>File<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		err <span class="token operator">:=</span> fileObject<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token comment">//    关闭出现了错误，不处理</span>
		<span class="token punctuation">}</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;关闭文件成功&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span>fileObject<span class="token punctuation">)</span>

	<span class="token comment">//	使用buffer来读取文件 先创建一个buffer对象</span>
	reader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>fileObject<span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		readString<span class="token punctuation">,</span> err <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;文件读取完毕&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;出现了异常：%#v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>readString<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>读取二进制文件</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;bufio&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;io&quot;</span>
	<span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fileObject<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\Administrator\\\\Desktop\\\\settings.zip&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;发生了异常，%v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//文件的关闭操作</span>
	<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span>fileObject <span class="token operator">*</span>os<span class="token punctuation">.</span>File<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		err <span class="token operator">:=</span> fileObject<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token comment">//    关闭出现了错误，不处理</span>
		<span class="token punctuation">}</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;关闭文件成功&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span>fileObject<span class="token punctuation">)</span>

	<span class="token comment">//	使用buffer来读取文件 先创建一个buffer对象</span>
	reader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>fileObject<span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		readRune<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">ReadRune</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">==</span> io<span class="token punctuation">.</span>EOF <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;文件读取完毕&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;文件读取出错，原因：&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token function">print</span><span class="token punctuation">(</span>readRune<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-ioutil-来读取文件" tabindex="-1"><a class="header-anchor" href="#使用-ioutil-来读取文件" aria-hidden="true">#</a> 使用 ioUtil 来读取文件</h3><p>相当于是官方封装好了的包，可以使用它来很方便来读取文件</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;io/ioutil&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	file<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span><span class="token string">&quot;./main.go&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;发生了错误:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看源码可以看到，是对我们之前的代码进行了封装而成的，将读取到的内容全部转换成了 byte 字节数组，我们可以对其进行任意的打印或者转存之类的</p><h3 id="写入文件" tabindex="-1"><a class="header-anchor" href="#写入文件" aria-hidden="true">#</a> 写入文件</h3><p>官方提供了<code>os.OpenFile()</code>函数可以用指定的模式打开文件，从而实现文件的写入相关功能</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">OpenFIle</span><span class="token punctuation">(</span>name <span class="token builtin">string</span><span class="token punctuation">,</span>flag <span class="token builtin">int</span><span class="token punctuation">,</span>perm FileMode<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span>File<span class="token punctuation">,</span><span class="token builtin">error</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">//......</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，name 是要打开的文件名，flag：打开文件的模式，模式有如下几种</p><ol><li><code>os.O_WRONLY</code> 只写</li><li><code>os.O_CREATE</code> 创建文件</li><li><code>os.O_RDONLY</code> 只读</li><li><code>os.O_RDWR</code> 读写</li><li><code>os.O_TRUNC</code> 清空</li><li><code>os.O_APPEND</code> 追加</li></ol><div class="hint-container tip"><p class="hint-container-title">提示</p><p>上述可以使用异或<code>|</code>方式叠加使用</p></div><p>还有一个参数<code>perm</code></p><p>这个就是文件权限，一个八进制数</p><ul><li><code>r</code>读取，对应<code>04</code></li><li><code>w</code>写，对应<code>02</code></li><li><code>x</code>可执行，对应<code>01</code></li></ul><p>举个例子</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token comment">//那个0644 貌似是常规写法 正常写这个即可</span>
	fileObject<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">OpenFile</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\Administrator\\\\Desktop\\\\aaa.txt&quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>O_CREATE<span class="token operator">|</span>os<span class="token punctuation">.</span>O_APPEND<span class="token punctuation">,</span> <span class="token number">0644</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;出错了:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;文件关闭完毕&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">defer</span> fileObject<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	fileObject<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span><span class="token string">&quot;啊这\\n&quot;</span><span class="token punctuation">)</span>
	fileObject<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;EMMM 今晚吃啥\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;写入完毕&quot;</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="buffer-写入文件" tabindex="-1"><a class="header-anchor" href="#buffer-写入文件" aria-hidden="true">#</a> Buffer 写入文件</h3><p>和读取差不多的方法</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;bufio&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	<span class="token comment">//那个0644 貌似是常规写法 正常写这个即可</span>
	fileObject<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">OpenFile</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\Administrator\\\\Desktop\\\\aaa.txt&quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>O_CREATE<span class="token operator">|</span>os<span class="token punctuation">.</span>O_APPEND<span class="token punctuation">,</span> <span class="token number">0644</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;出错了:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;文件关闭完毕&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">defer</span> fileObject<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	writer <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewWriter</span><span class="token punctuation">(</span>fileObject<span class="token punctuation">)</span>

	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里是将内容写入到缓存中</span>
		writer<span class="token punctuation">.</span><span class="token function">WriteString</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!\\n&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//将缓存写入到文件中 必须要做的操作 否则内容将不会被写入</span>
	writer<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-ioutil-来写入文件" tabindex="-1"><a class="header-anchor" href="#使用-ioutil-来写入文件" aria-hidden="true">#</a> 使用 IoUtil 来写入文件</h3><p>这个就更简单了，不过缺陷还是在那里的，一般还是用 Buffer 来写入比较好</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;io/ioutil&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	str <span class="token operator">:=</span> <span class="token string">&quot;世界你好！&quot;</span>
	err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">WriteFile</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\Administrator\\\\Desktop\\\\aaa.txt&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0644</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;发生了异常:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取用户输入" tabindex="-1"><a class="header-anchor" href="#获取用户输入" aria-hidden="true">#</a> 获取用户输入</h3><p>有两种方式，第一种是<code>fmt.Scanln( *string)</code>，这个是用户只要输入空格或者回车就表示输入结束</p><p>例子：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> str <span class="token builtin">string</span>
	fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;请输入内容：&quot;</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Scanln</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>str<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;你输入的内容为&quot;</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果想要获取换行的话，可以通过 bufferIO 来完成对应的操作</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;bufio&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 创建一个bufferIO对象，获取的流为系统输入流</span>
	reader <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdin<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;请输入内容：&quot;</span><span class="token punctuation">)</span>
  <span class="token comment">// 读取一行内容，如果没有读取到当前线程则会阻塞</span>
	readString<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> reader<span class="token punctuation">.</span><span class="token function">ReadString</span><span class="token punctuation">(</span><span class="token char">&#39;\\n&#39;</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;你输入的内容为&quot;</span><span class="token punctuation">,</span> readString<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件的其他相关操作" tabindex="-1"><a class="header-anchor" href="#文件的其他相关操作" aria-hidden="true">#</a> 文件的其他相关操作</h3><p>相关的可以看看这两篇文章</p>`,41),k={href:"https://studygolang.com/articles/4158",target:"_blank",rel:"noopener noreferrer"},r={href:"https://www.cnblogs.com/craneboos/p/9843098.html",target:"_blank",rel:"noopener noreferrer"},d=p(`<p>嘛，反正就是一些增删改查重命名和压缩之类的，用到了再整</p><h2 id="时间操作" tabindex="-1"><a class="header-anchor" href="#时间操作" aria-hidden="true">#</a> 时间操作</h2><h3 id="基本操作和格式化时间输出" tabindex="-1"><a class="header-anchor" href="#基本操作和格式化时间输出" aria-hidden="true">#</a> 基本操作和格式化时间输出</h3><p>我们可以通过 time.Now()函数获取当前的时间对象，然后获取时间对象的年月日时分秒等信息。</p><p>示例代码如下：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// 获取当前时间</span>
	now <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// 输出当前时间</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;当前的本地时间是 ：%v, \\nUTC格林威治时间是: %v\\n&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Local</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token comment">// 分别获取当前时间的年月日/时分秒</span>
	year <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Year</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">//年</span>
	month <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Month</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">//月</span>
	day <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Day</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">//日</span>
	hour <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Hour</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">//小时</span>
	minute <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Minute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//分钟</span>
	second <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//秒</span>
	y<span class="token punctuation">,</span> m<span class="token punctuation">,</span> d <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//年月日</span>
	week <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Weekday</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//周</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;当前时间格式化: %d-%02d-%02d %02d:%02d:%02d\\n&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> hour<span class="token punctuation">,</span> minute<span class="token punctuation">,</span> second<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Year : %d ,Month : %v ,Day : %d ,WeekDay : %v\\n&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">,</span> m<span class="token punctuation">,</span> d<span class="token punctuation">,</span> week<span class="token punctuation">)</span>
<span class="token comment">// ==== 执行结果 ====</span>
当前的本地时间是 ：<span class="token number">2022</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">48</span><span class="token punctuation">:</span><span class="token number">17.7156675</span> <span class="token operator">+</span><span class="token number">0800</span> CST<span class="token punctuation">,</span>
UTC格林威治时间是<span class="token punctuation">:</span> <span class="token number">2022</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token number">48</span><span class="token punctuation">:</span><span class="token number">17.7156675</span> <span class="token operator">+</span><span class="token number">0000</span> UTC
当前时间格式化<span class="token punctuation">:</span> <span class="token number">2022</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">00</span><span class="token punctuation">:</span><span class="token number">48</span><span class="token punctuation">:</span><span class="token number">17</span>
Year <span class="token punctuation">:</span> <span class="token number">2022</span> <span class="token punctuation">,</span>Month <span class="token punctuation">:</span> February <span class="token punctuation">,</span>Day <span class="token punctuation">:</span> <span class="token number">28</span> <span class="token punctuation">,</span>WeekDay <span class="token punctuation">:</span> Monday

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="时间戳相关" tabindex="-1"><a class="header-anchor" href="#时间戳相关" aria-hidden="true">#</a> 时间戳相关</h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>时间戳是自 1970 年 1 月 1 日（00:00:00）至当前时间的总毫秒数与时区无关,它也被称为 Unix 时间戳（UnixTimestamp）,我们可以使用 time.Unix()函数将时间戳转为时间格式。</p></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">// # Unix创建一个本地时间，对应sec和nsec表示的Unix时间（从January 1, 1970 UTC至该时间的秒数和纳秒数）。</span>
<span class="token keyword">func</span> <span class="token function">Unix</span><span class="token punctuation">(</span>sec <span class="token builtin">int64</span><span class="token punctuation">,</span> nsec <span class="token builtin">int64</span><span class="token punctuation">)</span> Time
<span class="token comment">// nsec的值在[0, 999999999]范围外是合法的。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例子：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">//获取当前时间</span>
now <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
timestamp1 <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">//时间戳</span>
timestamp2 <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">UnixNano</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//纳秒时间戳</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;current timestamp : %v\\n&quot;</span><span class="token punctuation">,</span> timestamp1<span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;current timestamp nanosecond: %v\\n&quot;</span><span class="token punctuation">,</span> timestamp2<span class="token punctuation">)</span>

<span class="token comment">//将时间戳转为时间格式(秒数，纳秒数)</span>
timeObj <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span>timestamp1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;时间戳转换后的时间 :&quot;</span><span class="token punctuation">,</span> timeObj<span class="token punctuation">)</span>
year <span class="token operator">:=</span> timeObj<span class="token punctuation">.</span><span class="token function">Year</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">//年</span>
month <span class="token operator">:=</span> timeObj<span class="token punctuation">.</span><span class="token function">Month</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">//月</span>
day <span class="token operator">:=</span> timeObj<span class="token punctuation">.</span><span class="token function">Day</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">//日</span>
hour <span class="token operator">:=</span> timeObj<span class="token punctuation">.</span><span class="token function">Hour</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment">//小时</span>
minute <span class="token operator">:=</span> timeObj<span class="token punctuation">.</span><span class="token function">Minute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//分钟</span>
second <span class="token operator">:=</span> timeObj<span class="token punctuation">.</span><span class="token function">Second</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//秒</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;格式化后 ：%d-%02d-%02d %02d:%02d:%02d\\n&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> hour<span class="token punctuation">,</span> minute<span class="token punctuation">,</span> second<span class="token punctuation">)</span>

<span class="token comment">// ==== 执行结果 ====</span>
current timestamp <span class="token punctuation">:</span> <span class="token number">1632718244</span>
current timestamp nanosecond<span class="token punctuation">:</span> <span class="token number">1632718244062677557</span>
时间戳转换后的时间 <span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token number">44</span> <span class="token operator">+</span><span class="token number">0800</span> CST
格式化后 ：<span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token number">44</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="时间间隔" tabindex="-1"><a class="header-anchor" href="#时间间隔" aria-hidden="true">#</a> 时间间隔</h3><p>描述: time.Duration 是 time 包定义的一个类型，它代表两个时间点之间经过的时间，以纳秒为单位。</p><p>time.Duration 表示一段时间间隔，可表示的最长时间段大约 290 年。</p><p>time 包中定义的时间间隔类型的常量如下：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">const</span> <span class="token punctuation">(</span>
  Nanosecond  Duration <span class="token operator">=</span> <span class="token number">1</span>
  Microsecond          <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">*</span> Nanosecond
  Millisecond          <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">*</span> Microsecond
  Second               <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">*</span> Millisecond
  Minute               <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> Second
  Hour                 <span class="token operator">=</span> <span class="token number">60</span> <span class="token operator">*</span> Minute
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：time.Duration 表示 1 纳秒，time.Second 表示 1 秒。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">demo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Nanosecond<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Microsecond<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Minute<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Hour<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 执行结果:</span>
1ns
<span class="token number">1</span>µs
1ms
1s
1m0s
1h0m0s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="时间时区" tabindex="-1"><a class="header-anchor" href="#时间时区" aria-hidden="true">#</a> 时间时区</h3><p>描述: 默认输出的时间为 UTC 世界协调时间，我们可以设置 CST 中部标准时间  (Central Standard Time) , 而中国属于东八区，我们需要在上述时间+8 小时，我们可以利用如下方法。</p><p>GMT、UTC、DST、CST 时区代表的意义</p><ul><li>GMT：Greenwich Mean Time (格林威治标准时间); 英国伦敦格林威治定为 0° 经线开始的地方，地球每 15° 经度 被分为一个时区，共分为 24 个时区，相邻时区相差一小时；例: 中国北京位于东八区，GMT 时间比北京时间慢 8 小时。</li><li>UTC: Coordinated Universal Time (世界协调时间)；经严谨计算得到的时间，精确到秒，误差在 0.9s 以内， 是比 GMT 更为精确的世界时间</li><li>DST: Daylight Saving Time (夏季节约时间) 即夏令时；是为了利用夏天充足的光照而将时间调早一个小时，北美、欧洲的许多国家实行夏令时；</li><li>CST: Central Standard Time (中部标准时间) 四个不同时区的缩写：</li><li>Central Standard Time (USA) UT-6:00 美国标准时间</li><li>Central Standard Time (Australia) UT+9:30 澳大利亚标准时间</li><li>China Standard Time UT+8:00 中国标准时间</li><li>Cuba Standard Time UT-4:00 古巴标准时间</li></ul><p>代码演示:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">demo4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// UTC &amp; CST &amp; 本地时间 并返回与 t 关联的时区信息。</span>
now <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;UTC 世界协调时间 : %v,时区信息: %v\\n&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Location</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> cst <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">FixedZone</span><span class="token punctuation">(</span><span class="token string">&quot;CST&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    cstnow <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">In</span><span class="token punctuation">(</span>cst<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;CST 中部标准时间 : %v,时区信息: %v\\n&quot;</span><span class="token punctuation">,</span> cstnow<span class="token punctuation">,</span> cstnow<span class="token punctuation">.</span><span class="token function">Location</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;将UTC时间转化为当地时间 : %v,时区信息: %v\\n\\n&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Local</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Location</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// 中国北京时间东八区</span>
    <span class="token comment">// 方式1.FixedZone</span>
    <span class="token keyword">var</span> utcZone <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">FixedZone</span><span class="token punctuation">(</span><span class="token string">&quot;UTC&quot;</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token operator">*</span><span class="token number">3600</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;北京时间 : %v\\n&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">In</span><span class="token punctuation">(</span>utcZone<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// 方式2.LoadLocation 设置地区</span>
    <span class="token keyword">var</span> cstZone<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">LoadLocation</span><span class="token punctuation">(</span><span class="token string">&quot;Asia/Shanghai&quot;</span><span class="token punctuation">)</span> <span class="token comment">//上海</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;北京时间 : %v\\n&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">In</span><span class="token punctuation">(</span>cstZone<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// 输出当前格林威治时间和该时区相对于UTC的时间偏移量（单位秒）</span>
    name<span class="token punctuation">,</span> offset <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">In</span><span class="token punctuation">(</span>utcZone<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Zone</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;当前时间时区名称:&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token string">&quot; 对于UTC的时间偏移量:&quot;</span><span class="token punctuation">,</span> offset<span class="token punctuation">)</span>

<span class="token comment">// 当前操作系统本地时区</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;当前操作系统本地时区&quot;</span><span class="token punctuation">,</span>time<span class="token punctuation">.</span>Local<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

执行结果<span class="token punctuation">:</span>

UTC 世界协调时间 <span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">04</span><span class="token punctuation">:</span><span class="token number">58</span><span class="token punctuation">:</span><span class="token number">11.866995694</span> <span class="token operator">+</span><span class="token number">0000</span> UTC<span class="token punctuation">,</span>时区信息<span class="token punctuation">:</span> UTC
CST 中部标准时间 <span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">04</span><span class="token punctuation">:</span><span class="token number">58</span><span class="token punctuation">:</span><span class="token number">11.867088566</span> <span class="token operator">+</span><span class="token number">0000</span> CST<span class="token punctuation">,</span>时区信息<span class="token punctuation">:</span> CST
将 UTC 时间转化为当地时间 <span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">58</span><span class="token punctuation">:</span><span class="token number">11.866995694</span> <span class="token operator">+</span><span class="token number">0800</span> CST<span class="token punctuation">,</span>时区信息<span class="token punctuation">:</span> Local

北京时间 <span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">58</span><span class="token punctuation">:</span><span class="token number">11.866995694</span> <span class="token operator">+</span><span class="token number">0800</span> UTC
北京时间 <span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">12</span><span class="token punctuation">:</span><span class="token number">58</span><span class="token punctuation">:</span><span class="token number">11.866995694</span> <span class="token operator">+</span><span class="token number">0800</span> CST
当前时间时区名称<span class="token punctuation">:</span> UTC 对于 UTC 的时间偏移量<span class="token punctuation">:</span> <span class="token number">28800</span>
当前操作系统本地时区<span class="token punctuation">:</span> Local
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="时间操作-1" tabindex="-1"><a class="header-anchor" href="#时间操作-1" aria-hidden="true">#</a> 时间操作</h3><ul><li>Add</li></ul><p>描述: 我们在日常的编码过程中可能会遇到要求时间+时间间隔的需求，Go 语言的时间对象有提供 Add 方法如下：</p><p>语法: <code>func (t Time) Add(d Duration) Time</code></p><ul><li>Sub</li></ul><p>描述: 求两个时间之间的差值，返回一个时间段 t-u。</p><p>如果结果超出了 Duration 可以表示的最大值/最小值，将返回最大值/最小值。要获取时间点 t-d（d 为 Duration），可以使用 t.Add(-d)。</p><p>语法: <code>func (t Time) Sub(u Time) Duration</code></p><ul><li>Equal</li></ul><p>描述: 判断两个时间是否相同，会考虑时区的影响，因此不同时区标准的时间也可以正确比较。本方法和用 t==u 不同，这种方法还会比较地点和时区信息。</p><p>语法: <code>func (t Time) Equal(u Time) bool</code></p><ul><li>Before</li></ul><p>如果 t 代表的时间点在 u 之前，返回真；否则返回假。</p><p>语法: <code>func (t Time) Before(u Time) bool</code></p><ul><li>After</li></ul><p>如果 t 代表的时间点在 u 之后，返回真；否则返回假。</p><p>语法: <code>func (t Time) After(u Time) bool</code></p><p>代码示例</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">demo5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
now <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 1.求一个小时之后的时间</span>
later <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Hour<span class="token punctuation">)</span> <span class="token comment">// 当前时间加 1 小时后的时间</span>
tomorrow <span class="token operator">:=</span> now<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Hour \\<span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token comment">// 当前时间加 1 天后的时间</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;later :&quot;</span><span class="token punctuation">,</span> later<span class="token punctuation">,</span> <span class="token string">&quot;\\ntomorrow: &quot;</span><span class="token punctuation">,</span> tomorrow<span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;later :&quot;</span><span class="token punctuation">,</span> later<span class="token punctuation">)</span>
<span class="token comment">// 2.当前时间与 later 的差值</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Sub :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Sub</span><span class="token punctuation">(</span>later<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 3.当前时间与 later 是否相等</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Equal :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span>later<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 3.当前时间是否在 later 之前</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Before :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Before</span><span class="token punctuation">(</span>later<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 3.当前时间是否在 later 之后</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;After :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">After</span><span class="token punctuation">(</span>later<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
执行结果<span class="token punctuation">:</span>
later <span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">04</span><span class="token punctuation">:</span><span class="token number">53.94642009</span> <span class="token operator">+</span><span class="token number">0800</span> CST m<span class="token operator">=</span><span class="token operator">+</span><span class="token number">3600.000091915</span>
tomorrow<span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">28</span> <span class="token number">13</span><span class="token punctuation">:</span><span class="token number">04</span><span class="token punctuation">:</span><span class="token number">53.94642009</span> <span class="token operator">+</span><span class="token number">0800</span> CST m<span class="token operator">=</span><span class="token operator">+</span><span class="token number">86400.000091915</span>
Sub <span class="token punctuation">:</span> <span class="token operator">-</span>1h0m0s
Equal <span class="token punctuation">:</span> <span class="token boolean">false</span>
Before <span class="token punctuation">:</span> <span class="token boolean">true</span>
After <span class="token punctuation">:</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="定时器" tabindex="-1"><a class="header-anchor" href="#定时器" aria-hidden="true">#</a> 定时器</h3><p>描述: 使用 time.Tick(时间间隔)来设置定时器以及使用 time.Sleep(Duration)函数来延迟执行，定时器的本质上是一个通道（channel）。</p><p>Duration 时间间隔可选参数:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>time<span class="token punctuation">.</span>Nanosecond
time<span class="token punctuation">.</span>Microsecond
time<span class="token punctuation">.</span>Millisecond
time<span class="token punctuation">.</span>Second
time<span class="token punctuation">.</span>Minute
time<span class="token punctuation">.</span>Hour
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例演示:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">demo6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
ticker <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Tick</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span> <span class="token comment">//定义一个 1 秒间隔的定时器</span>
<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> ticker <span class="token punctuation">{</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">//每秒都会执行的任务</span>
time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Second \\<span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">//休眠 5S 执行，注意不能直接传递 5，除了前面这种方式你还可以利用显示强转整数 5 time.Duration(5);</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

执行结果<span class="token punctuation">:</span>
➜ Time <span class="token keyword">go</span> run timeDemo<span class="token punctuation">.</span><span class="token keyword">go</span>
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">03</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">58.640028069</span> <span class="token operator">+</span><span class="token number">0000</span> UTC m<span class="token operator">=</span><span class="token operator">+</span><span class="token number">1.000158842</span>
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">03</span><span class="token punctuation">:</span><span class="token number">35</span><span class="token punctuation">:</span><span class="token number">59.64011495</span> <span class="token operator">+</span><span class="token number">0000</span> UTC m<span class="token operator">=</span><span class="token operator">+</span><span class="token number">2.000245738</span> # 特殊点<span class="token punctuation">(</span>第二执行未经过 5S<span class="token punctuation">)</span>
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">03</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">04.640065081</span> <span class="token operator">+</span><span class="token number">0000</span> UTC m<span class="token operator">=</span><span class="token operator">+</span><span class="token number">7.000195859</span>
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">03</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">09.640302389</span> <span class="token operator">+</span><span class="token number">0000</span> UTC m<span class="token operator">=</span><span class="token operator">+</span><span class="token number">12.000433177</span>
<span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">03</span><span class="token punctuation">:</span><span class="token number">36</span><span class="token punctuation">:</span><span class="token number">14.640070051</span> <span class="token operator">+</span><span class="token number">0000</span> UTC m<span class="token operator">=</span><span class="token operator">+</span><span class="token number">17.000200829</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="时间格式化和解析时间-概述" tabindex="-1"><a class="header-anchor" href="#时间格式化和解析时间-概述" aria-hidden="true">#</a> 时间格式化和解析时间-概述</h3><p>描述: 时间类型有一个自带的方法 Format 进行格式化</p><p>需要注意的是 Go 语言中格式化时间模板不是常见的 Y-m-d H:M:S 而是使用 Go 的诞生时间 2006 年 1 月 2 号 15 点 04 分（记忆口诀为 2006 1 2 3 4）, 也许这就是技术人员的浪漫吧。</p><p>补充：如果想格式化为 12 小时方式，需指定 PM。</p><h3 id="格式化时间" tabindex="-1"><a class="header-anchor" href="#格式化时间" aria-hidden="true">#</a> 格式化时间</h3><p>描述: 格式化时间是把 Go 语言中的时间对象，转换成为字符串类型的时间。</p><p>代码演示:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">demo7</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// 当前 UTC 时间</span>
now <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 设置时区为 Asia/Shanghai</span>
loc<span class="token punctuation">,</span> err <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">LoadLocation</span><span class="token punctuation">(</span><span class="token string">&quot;Asia/Shanghai&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;北京时间 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">In</span><span class="token punctuation">(</span>loc<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;\\n 地点时区 :&quot;</span><span class="token punctuation">,</span> loc<span class="token punctuation">)</span>

    <span class="token comment">// 1.时间格式化</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;格式1 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;2006/01/02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;格式2 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;2006/01/02 15:04&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;格式3 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;15:04 2006/01/02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// 24小时制</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;格式4 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02 15:04:05.000 Mon Jan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// 12小时制</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;格式5 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02 03:04:05.000 PM&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;格式6 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02 03:04:05.000 PM Mon Jan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Kitchen 格式 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Kitchen<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// 时区展示</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;RFC1123 格式 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>RFC1123<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;RFC1123 格式 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>RFC1123Z<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;RFC3339 格式 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>RFC3339<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;RFC3339Nano 格式 :&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>RFC3339Nano<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>北京时间 : 2021-09-27 14:15:42.716506733 +0800 CST
地点时区 : Asia/Shanghai
格式 1 : 2021/09/27
格式 2 : 2021/09/27 14:15
格式 3 : 14:15 2021/09/27
格式 4 : 2021-09-27 14:15:42.716 Mon Sep
格式 5 : 2021-09-27 02:15:42.716 PM
格式 6 : 2021-09-27 02:15:42.716 PM Mon Sep
Kitchen 格式 : 2:15PM
RFC1123 格式 : Mon, 27 Sep 2021 14:15:42 CST
RFC1123 格式 : Mon, 27 Sep 2021 14:15:42 +0800
RFC3339 格式 : 2021-09-27T14:15:42+08:00
RFC3339Nano 格式 : 2021-09-27T14:15:42.716506733+08:00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解析字符串格式时间" tabindex="-1"><a class="header-anchor" href="#解析字符串格式时间" aria-hidden="true">#</a> 解析字符串格式时间</h3><p>描述: 将时间字符串解析为时间对象。</p><p>通过 time.Parse 将时间字符串转化为时间类型对象默认是 UTC 时间, 而通过 time.ParseInLocation 我们可以指定时区得到 CST 时间。</p><p>代码演示:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">demo8</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// 1.时间与时区设置</span>
	now <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	loc<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">LoadLocation</span><span class="token punctuation">(</span><span class="token string">&quot;Asia/Shanghai&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">// 2.按照指定时区和指定格式解析字符串时间</span>
	timeObj1<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02 15:04:05&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2021-09-27 14:15:20&quot;</span><span class="token punctuation">)</span>
	timeObj2<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">ParseInLocation</span><span class="token punctuation">(</span><span class="token string">&quot;2006/01/02 15:04:05&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2021/09/27 14:15:20&quot;</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>Local<span class="token punctuation">)</span> <span class="token comment">// 操作系统本地时区</span>
	timeObj3<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">ParseInLocation</span><span class="token punctuation">(</span><span class="token string">&quot;2006/01/02 15:04:05&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2021/09/27 14:15:20&quot;</span><span class="token punctuation">,</span> loc<span class="token punctuation">)</span> <span class="token comment">// 指定时区</span>

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Now: %v\\ntimeObj1: %v\\ntimeObj2: %v\\ntimeObj3: %v\\n&quot;</span><span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">Local</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> timeObj1<span class="token punctuation">,</span> timeObj2<span class="token punctuation">,</span> timeObj3<span class="token punctuation">)</span>

    <span class="token comment">// 将当地时区转化为UTC时间</span>
    utcLocal <span class="token operator">:=</span> timeObj3<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;将当地时区转化为UTC时间:&quot;</span><span class="token punctuation">,</span> utcLocal<span class="token punctuation">)</span>
    <span class="token comment">// 将UTC时间转化为当地时间(+8)</span>
    localTime <span class="token operator">:=</span> utcLocal<span class="token punctuation">.</span><span class="token function">Local</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;将UTC时间转化为当地时间:&quot;</span><span class="token punctuation">,</span> localTime<span class="token punctuation">)</span>

    <span class="token comment">// 3.相互转换后的时间进行对比.</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;相互转换后的时间进行对比:&quot;</span><span class="token punctuation">,</span> utcLocal<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span>localTime<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// 4.输入的时间字符串与当前时间的相差时间.</span>
    d <span class="token operator">:=</span> timeObj3<span class="token punctuation">.</span><span class="token function">Sub</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span>
    <span class="token comment">// 可以看到timeObj 时间 与 当前时间 相差 33 分钟 55 秒</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;看到timeObj 时间 与 当前时间 相差:&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>Now<span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">49</span><span class="token punctuation">:</span><span class="token number">15.392828987</span> <span class="token operator">+</span><span class="token number">0800</span> CST
timeObj1<span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">20</span> <span class="token operator">+</span><span class="token number">0000</span> UTC
timeObj2<span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">20</span> <span class="token operator">+</span><span class="token number">0800</span> CST
timeObj3<span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">20</span> <span class="token operator">+</span><span class="token number">0800</span> CST
将当地时区转化为 UTC 时间<span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">06</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">20</span> <span class="token operator">+</span><span class="token number">0000</span> UTC
将 UTC 时间转化为当地时间<span class="token punctuation">:</span> <span class="token number">2021</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">27</span> <span class="token number">14</span><span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">20</span> <span class="token operator">+</span><span class="token number">0800</span> CST
相互转换后的时间进行对比<span class="token punctuation">:</span> <span class="token boolean">true</span>
看到 timeObj3 时间 与 当前时间 相差<span class="token punctuation">:</span> <span class="token operator">-</span>33m55<span class="token punctuation">.</span>392828987s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="时间处理常用" tabindex="-1"><a class="header-anchor" href="#时间处理常用" aria-hidden="true">#</a> 时间处理常用</h3><ul><li>按照 str 格式化时间(Go 诞生之日口诀:6-1-2-3-4-5)</li></ul><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">//格式化时间格式</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02 15:04:05&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//调用结果: 2021-04-30 13:15:02</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>UTC 时间互换标准时间</li></ul><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">//UTC 时间转标准时间</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>this \\<span class="token operator">*</span>DataSearch<span class="token punctuation">)</span> <span class="token function">UTCTransLocal</span><span class="token punctuation">(</span>utcTime <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    t<span class="token punctuation">,</span> \\<span class="token boolean">_</span> <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02T15:04:05.000+08:00&quot;</span><span class="token punctuation">,</span> utcTime<span class="token punctuation">)</span>
    <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">Local</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02 15:04:05&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

t1 <span class="token operator">:=</span> <span class="token function">UTCTransLocal</span><span class="token punctuation">(</span><span class="token string">&quot;2021-04-29T14:11:08.000+08:00&quot;</span><span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span>

<span class="token comment">// 调用结果: 2021-04-29 22:11:08</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>标准时间转 UTC 时间</li></ul><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token comment">//标准时间转 UTC 时间</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>this \\<span class="token operator">*</span>DataSearch<span class="token punctuation">)</span> <span class="token function">LocalTransUTC</span><span class="token punctuation">(</span>localTime <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    t<span class="token punctuation">,</span> \\<span class="token boolean">_</span> <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">ParseInLocation</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02 15:04:05&quot;</span><span class="token punctuation">,</span> localTime<span class="token punctuation">,</span> time<span class="token punctuation">.</span>Local<span class="token punctuation">)</span>
    <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">UTC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02T15:04:05.000+08:00&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

t2 <span class="token operator">:=</span> <span class="token function">LocalTransUTC</span><span class="token punctuation">(</span><span class="token string">&quot;2021-04-29 22:11:08&quot;</span><span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span>

<span class="token comment">//调用结果： 2021-04-29T14:11:08.000+08:00</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>str 格式化时间转时间戳</li></ul><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>the_time<span class="token punctuation">,</span> err <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02 15:04:05&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2020-04-29 22:11:08&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    unix_time <span class="token operator">:=</span> the_time<span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>unix_time<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>the_time<span class="token punctuation">)</span>
<span class="token comment">//调用结果： 1588198268</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>时间戳转 str 格式化时间</li></ul><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>str_time <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token number">1588224111</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;2006-01-02 15:04:05&quot;</span><span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>str_time<span class="token punctuation">)</span>
<span class="token comment">//调用结果：2020-04-30 13:21:51</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,77);function m(v,b){const s=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[n("a",k,[a("https://studygolang.com/articles/4158"),t(s)])]),n("p",null,[n("a",r,[a("https://www.cnblogs.com/craneboos/p/9843098.html"),t(s)])]),d])}const q=e(l,[["render",m],["__file","03-IO.html.vue"]]);export{q as default};
