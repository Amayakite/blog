import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e}from"./app-3ab2953d.js";const l="/images/Java/JavaSE/02-开始使用Java/image-20211025174538882.png",o="/images/Java/JavaSE/02-开始使用Java/image-20211025181532560.png",t="/images/Java/JavaSE/02-开始使用Java/image-20211025190340940.png",p={},i=e(`<h1 id="开始使用java" tabindex="-1"><a class="header-anchor" href="#开始使用java" aria-hidden="true">#</a> 开始使用Java</h1><h2 id="第一个程序-helloworld" tabindex="-1"><a class="header-anchor" href="#第一个程序-helloworld" aria-hidden="true">#</a> 第一个程序-HelloWorld</h2><blockquote><p>随便找个文件夹 创建个文件<code>_001helloWorld.java</code>然后使用Sublime打开它</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// _001helloWorld.java</span>
<span class="token comment">// 这是Java的快速入门,演示Java的开发步骤</span>
<span class="token comment">// 对代码的相关说明</span>
<span class="token comment">// 1.public class _001helloWorld 表示_001helloWorld是一个类，一个public公有类</span>
<span class="token comment">// 2.public static void main(String[] args) 表示程序的入口（主方法）</span>
<span class="token comment">// 3.main{} 表示方法的开始和结束</span>
<span class="token comment">// 4. System.out.println(&quot;Hello world&quot;) 表示输出Hello world到屏幕上</span>
<span class="token comment">// 5. Java要求所有语句都得加分号;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> _001helloWorld<span class="token punctuation">{</span>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行：</p><p>​ 首先在sublime中安装好Pluginstall，然后进行以下操作</p><ul><li>按<code>Ctrl+Shift+P</code> 调出控制面板，这之中找到PluginStall 按回车 然后输入<code>ConvertToUTF8</code>安装，就可以在<code>文件</code>-<code>set File Encoding To</code>中找到GKB编码 选中改编码并保存，然后打开cmd或者power shell 或者终端开始操作</li></ul><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>javac <span class="token punctuation">.</span>\\_001helloWorld<span class="token punctuation">.</span>java
java _001helloWorld <span class="token comment"># 注意 这里不能带有后缀或者路径名什么的</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+l+`" alt="image-20211025174538882" tabindex="0" loading="lazy"><figcaption>image-20211025174538882</figcaption></figure><h3 id="刚刚发生了什么" tabindex="-1"><a class="header-anchor" href="#刚刚发生了什么" aria-hidden="true">#</a> 刚刚发生了什么？</h3><ul><li>什么是编译<code>javac .\\_001helloWorld.java</code><ol><li>有了Java文件 可以通过编译器将其编译成JVM可以识别的字节码文件</li><li>在该源文件目录下，通过JavaC编译工具对<code>_001helloWorld.java</code>进行编译</li><li>如果程序没有错误则不会产生任何提示，并且会在当前的目录下生成一个<code>_001helloWorld.java</code>的文件，该文件被称为字节码文件，也是可以执行的Java程序</li><li>也就是说，Java真正执行的是<code>.class</code>文件，跟<code>.java</code>源文件没有任何关系</li><li>如果程序本身有错误则会抛出异常</li></ol></li><li>什么是运行 <ol><li>有了可执行的Java程序(<code>_001helloWorld.class</code>字节码文件)</li><li>通过运行工具<code>java.exe</code>对字节码文件进行执行，本质就是.class装载到JVM去执行</li></ol></li><li>Java开发注意事项 <ul><li>对修改后的HelloWorld.java源文件需要重新编译，生成新的.class文件后，再进行执行才能生效</li></ul></li></ul><blockquote><p>自此 第一个程序HelloWorld运行完毕</p><p>tips:小练：使用Java开发一个带有你名字的控制带程序：例如<code>YouName</code> 开始使用了Java</p></blockquote><h3 id="补充-java开发注意事项和细节说明" tabindex="-1"><a class="header-anchor" href="#补充-java开发注意事项和细节说明" aria-hidden="true">#</a> 补充：Java开发注意事项和细节说明</h3><ol><li><p>Java源文件以<code>.java</code>为扩展名，源文件的基本组成部分是类(Class)，如本类中的<code>_001helloWorld</code>类</p></li><li><p>Java应用程序的执行入口是main方法，他有固定的书写格式<br><code>public static void main(String[] args){...}</code></p></li><li><p>Java语言<strong>严格区分大小写</strong></p></li><li><p>Java方法都有一条条语句构成，每个语句以<code>;</code>结束</p></li><li><p>大括号都是成对出现的，<strong>缺一不可</strong></p></li><li><p>一个源文件中最多包含一个<code>public</code>类，其他的类<strong>个数不限</strong></p></li><li><p>如果源文件中包含一个Public类，<strong>则文件名必须按照该类命名命名</strong></p></li><li><p>一个源文件中最多只能有个Public类，其他类的个数不限，也可以将<code>main</code>方法写在非public类中，然后指定运行非public类，这样入口方法就是非public的<code>main</code>方法，例如</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// _001helloWorld.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> _001helloWorld<span class="token punctuation">{</span>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello This is Person&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后回到控制台，执行<code>javac .\\_001helloWorld.java</code>，就能得到两个文件：<code>_001helloWorld.class</code>与<code>Person.class</code>,如果想要运行Person只需要<code>java Person</code> 即可</p><figure><img src="`+o+`" alt="image-20211025181532560" tabindex="0" loading="lazy"><figcaption>image-20211025181532560</figcaption></figure></li></ol><h3 id="扩展-如何更方便的学习java" tabindex="-1"><a class="header-anchor" href="#扩展-如何更方便的学习java" aria-hidden="true">#</a> 扩展：如何更方便的学习Java</h3><blockquote><p>EMM 这篇文章应该只有我看吧，大概率没有别人看了，所以主要是写给我自己看的</p></blockquote><p>​ 因为我有<strong>需求</strong>：我想跳槽，跳出目前这个技能池能干的事情的鱼潭，我想通过这门技术方便我以后吃饭，睡觉，游玩，并且我也接触电脑这么多年了（玩电脑），想实际变现，毕竟也20岁一个人了，老大不小了</p><p>​ 因为有过JavaScript的经验和Typescript的经验，Java目前来说并没有太大难度</p><p>​ 如果你正巧是跟我一样有过其他语言经验的，那Java对你来说并不会太难</p><p>​ 如果你没有的话，我个人建议你去网上跟着教程从零开始学习，而非看着我这些文章。</p><p>在学习Java时，主要以了解技术的基本原理和基本语法为主，除非必要，不然不要去考虑细节（不要扣细节）</p><p>​ 简单来说，互联网方向的知识点都是网状知识，环环相套，扣细节很容易迷失在网中</p><p>​ 因此需要先做到会用，同时保持思考和疑惑，建立自己的知识网，就自然明白道理了</p><ul><li>首先是入门（基本程序，CRUD）</li><li>然后才是开始研究技术的注意事项，使用细节，使用规范，如何优化，优化是没有止境的(<strong>尤其在多线程，高并发上</strong>)多线程和高并发是决定工资的玩意</li></ul><h2 id="转义符-让文本之间可以高校换行" tabindex="-1"><a class="header-anchor" href="#转义符-让文本之间可以高校换行" aria-hidden="true">#</a> 转义符，让文本之间可以高校换行</h2><blockquote><p>什么是转义字符？</p><p>Java 中 某些东西是不能直接输出来的，</p><p>例如<code>System.out.println(&quot;你好，我是张三你好，我是李四&quot;);</code>我想让这两句话中间换个行，但是又不想多打一遍sout(<code>System.out.println</code>，以下统一简称sout)</p><p>又或者我想在sout中输出<code>&quot;</code>或者<code>&quot;</code>，这些你直接在sout中使用大概率是会报错的~</p><p>所以就需要用到转义符</p></blockquote><p>该如何使用转义符？</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//_002ChangeChar.java</span>
<span class="token comment">// 演示转义字符的使用</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> _002ChangeChar<span class="token punctuation">{</span>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \\t 制表符 可以理解成键盘上的Tab键，实现对其用的</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;北京\\t天津\\t上海&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \\n 换行符，在Linux上是\\r,一般情况下来说两个都用上都行</span>
  <span class="token comment">// Windows智能识别\\n Linux只能识别\\r</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;你好，我是张三\\r\\n你好，我是李四&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 如果想输入一个&quot;\\&quot; 只要\\\\这样即可</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;我想打出一个\\\\\\&quot;\\&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \\&quot;  \\&#39;  同上</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终输出</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>javac .<span class="token punctuation">\\</span>_002ChangeChar.java
<span class="token function">java</span> _002ChangeChar
<span class="token comment"># 输出结果：</span>
北京    天津    上海
你好，我是张三
你好，我是李四
我想打出一个<span class="token punctuation">\\</span>&quot;&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="扩展-初学java容易犯的错误" tabindex="-1"><a class="header-anchor" href="#扩展-初学java容易犯的错误" aria-hidden="true">#</a> 扩展：初学Java容易犯的错误</h3><ol><li><p>找不到文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>D:<span class="token punctuation">\\</span>JavaStudy<span class="token punctuation">\\</span>01-基础知识<span class="token operator">&gt;</span> javac .<span class="token punctuation">\\</span>_002ChangeChar2.java
javac: 找不到文件: .<span class="token punctuation">\\</span>_002ChangeChar2.java
用法: javac <span class="token operator">&lt;</span>options<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>source files<span class="token operator">&gt;</span>
<span class="token parameter variable">-help</span> 用于列出可能的选项
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决：源文件名不存在或者写错，或者当前路径错误</p></li><li><p>主类名和文件名不一致<br> 解决方法，声明的public主类应与文件名一致，否则文件编译失败</p></li><li><p>缺少分号：你觉得呢？</p></li></ol><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h2><blockquote><p>用于注解说明程序的文字就是注释，注释提高了代码的阅读性（可读性）</p><p>注释是一个程序员必须有的良好编程习惯</p><p>将自己的思想通过注释先整理出来，再用代码去体现</p></blockquote><ol><li><p>单行注释：两个<code>//</code>后面跟着的内容就是注释</p></li><li><p>多行注释：<code>/**/</code> 里面包含注释内容</p></li><li><p>文档注释</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//这里就是文档注释 文档注释中@author表示作者名 @version 表示版本号</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> Amayakite
 * <span class="token keyword">@version</span> 0.1.0 
 * 
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> _002ChangeChar<span class="token punctuation">{</span>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token comment">// \\t 制表符 可以理解成键盘上的Tab键，实现对其用的</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;北京\\t天津\\t上海&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \\n 换行符，在Linux上是\\r,一般情况下来说两个都用上都行</span>
  <span class="token comment">// Windows智能识别\\n Linux只能识别\\r</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;你好，我是张三\\r\\n你好，我是李四&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 如果想输入一个&quot;\\&quot; 只要\\\\这样即可</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;我想打出一个\\\\\\&quot; \\&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \\&quot;  \\&#39;  同上</span>
 <span class="token punctuation">}</span>
 <span class="token doc-comment comment">/**
  * 
  * <span class="token keyword">@param</span> <span class="token parameter">a</span> 一个数值
  * <span class="token keyword">@param</span> <span class="token parameter">b</span> 第二个数值
  * <span class="token keyword">@return</span> A+B
  */</span>
 <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有了文档注释的文件可以通过JavaDoc生成注释文件</p><p>例如上面这个文件 就可以通过:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>javadoc <span class="token parameter variable">-d</span> d:<span class="token punctuation">\\</span><span class="token punctuation">\\</span>temp <span class="token parameter variable">-author</span> <span class="token parameter variable">-version</span> _002ChangeChar.java
<span class="token comment">#可以通过这行命令在D:\\\\temp目录下生成注释文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+`" alt="image-20211025190340940" tabindex="0" loading="lazy"><figcaption>image-20211025190340940</figcaption></figure><p>进入该目录，点开index.html即可查看注释中的内容</p></li></ol><h3 id="补充-java代码规范" tabindex="-1"><a class="header-anchor" href="#补充-java代码规范" aria-hidden="true">#</a> 补充：Java代码规范</h3><ol><li>类，方法的注释，要以javadoc的方式来写</li><li>非Java Doc的注释，往往是给代码的维护者来看的，着重告诉维护者为什么要这样写，如何修改，注意什么问题等</li><li>使用tab操作，实现整体缩进，默认整体向右边移动，时候使用<code>shift+tab</code>整体向左移</li><li>使用运算符和 = 两边习惯性的各家一个空格，比如：<code>2 + 4 + * 5 + 345 - 89</code></li><li>源文件使用<code>UTF-8</code>编码(截止至IEDA前这里所写的代码是因为cmd的原因导致设置成GBK)</li><li>行宽度不要超过80个字符</li><li>代码编写次行风格和行尾风格，推荐使用行尾风格</li><li>实际开发过程中建议参照：《阿里巴巴Java开发手册》</li></ol><h2 id="本章作业" tabindex="-1"><a class="header-anchor" href="#本章作业" aria-hidden="true">#</a> 本章作业</h2><ol><li>编写一个Hello World的程序<code>HomeWork.java</code></li><li>将个人的基本信息（姓名，性别，籍贯，地址）打印到控制台上面，各条信息各占一行</li><li>口述一下JDK，JRE，JVM的关系</li></ol><blockquote><p>答案</p></blockquote><ol><li><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> Amyakite
 * <span class="token keyword">@version</span> 0.0.1
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> _003HomeWork<span class="token punctuation">{</span>
 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
   <span class="token string">&quot;姓名：Amayakite\\n&quot;</span><span class="token operator">+</span>
   <span class="token string">&quot;性别：男\\n&quot;</span><span class="token operator">+</span>
   <span class="token string">&quot;籍贯：中国\\n&quot;</span><span class="token operator">+</span>
   <span class="token string">&quot;地址：....&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span> 
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,41),c=[i];function u(d,r){return a(),s("div",null,c)}const m=n(p,[["render",u],["__file","02-开始使用Java.html.vue"]]);export{m as default};
