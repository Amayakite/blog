import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c as l,a,b as n,d as o,e as s}from"./app-3ab2953d.js";const c="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202161214531.png",u="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202161437222.png",r="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202162008344.png",d="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202162231845.png",g="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202162747976.png",v="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202163103074.png",m="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202163705993.png",k="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202163733098.png",b="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202163907316.png",h="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202163937171.png",f="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202164457153.png",x="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202164615204.png",y="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202164738547.png",q="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202164820053.png",_="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202164841675.png",E="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202170123541.png",J="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202170701479.png",M="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202170737182.png",w="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202170831500.png",W="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202171146353.png",j="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202171207069.png",z="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202171218874.png",I="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202171334898.png",T="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202171416767.png",S="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202171505255.png",H="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202171519474.png",A="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202171956804.png",P="/images/Java/JavaEE/02-1-通过空白的Maven模板搭建一个Web项目/image-20211202172009924.png",O={},R=s('<p>我TM真的有点服了某些讲课的...硬生生的看了一下午的视频，不如自己动手折腾两下</p><p>在开始前，必须要明确的点是：</p><p>Maven就一个包管理工具 Maven就一个包管理工具 Maven就一个包管理工具 Maven就一个包管理工具</p><h2 id="创建一个空白项目前需要做的事情" tabindex="-1"><a class="header-anchor" href="#创建一个空白项目前需要做的事情" aria-hidden="true">#</a> 创建一个空白项目前需要做的事情</h2><h3 id="设置下默认的maven版本、配置文件、仓库路径" tabindex="-1"><a class="header-anchor" href="#设置下默认的maven版本、配置文件、仓库路径" aria-hidden="true">#</a> 设置下默认的maven版本、配置文件、仓库路径</h3><p>防止每次都需要自己手动到设置中调</p><p>如果说你已经打开了一个项目，就：</p><p>如果没打开的话应该也是能找到这个配置，反正在这里面能够找到Maven的路径，然后进行修改即可：</p><figure><img src="'+c+'" alt="image-20211202161214531" tabindex="0" loading="lazy"><figcaption>image-20211202161214531</figcaption></figure><p>理论上来说，新版的IDEA，会在你读取Maven的主路径的时候，自动读取<code>本地仓库</code>地址</p><h2 id="创建一个空白项目-并检查相关配置" tabindex="-1"><a class="header-anchor" href="#创建一个空白项目-并检查相关配置" aria-hidden="true">#</a> 创建一个空白项目，并检查相关配置</h2><p>就按照往常的来，新建一个空白的maven项目，然后填写下相关的信息</p><figure><img src="'+u+'" alt="image-20211202161437222" tabindex="0" loading="lazy"><figcaption>image-20211202161437222</figcaption></figure><p>这个工作坐标之类的随意填写，或者就按照默认的来即可，不影响</p><h2 id="准备工作-创建一系列的文件" tabindex="-1"><a class="header-anchor" href="#准备工作-创建一系列的文件" aria-hidden="true">#</a> 准备工作-创建一系列的文件</h2><p>首先，在src-main目录下，创建一个webapp文件夹</p><p>然后打开tomcat的webapps文件夹，把里面的ROOT文件夹中的<code>WEB-INF</code>文件夹整个拷贝过来</p><p>然后在这个<code>WEB-INF</code>文件夹内新建一个<code>index.jsp</code></p><figure><img src="'+r+'" alt="image-20211202162008344" tabindex="0" loading="lazy"><figcaption>image-20211202162008344</figcaption></figure><p>当你放置完这些文件的时候，右下角百分之一千会出现一个：配置web框架</p><figure><img src="'+d+'" alt="image-20211202162231845" tabindex="0" loading="lazy"><figcaption>image-20211202162231845</figcaption></figure><p>如果说没有的话，按下<code>ctrl+alt+shift+s</code>或者点击<code>文件-项目结构</code>调出项目配置，在里面这样配置</p><figure><img src="'+g+`" alt="image-20211202162747976" tabindex="0" loading="lazy"><figcaption>image-20211202162747976</figcaption></figure><p>还有那个<strong>创建工作</strong> 一定要点一下（右下角的）</p><p>然后把那个index.jsp删了，重新创建一个，系统会给你一个模板 不要删 不管他</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>&lt;%--
  Created by IntelliJ IDEA.
  User: Amayakite
  Date: 2021/12/2
  Time: 16:28
  To change this template use File | Settings | File Templates.
--%&gt;
&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建java文件-让我们的java中的内容能在网页上显示" tabindex="-1"><a class="header-anchor" href="#创建java文件-让我们的java中的内容能在网页上显示" aria-hidden="true">#</a> 创建Java文件，让我们的Java中的内容能在网页上显示</h2><p>完成上面的步骤之后，接下来要做的就是：在java中创建一个MyApps文件</p><p>如果你要追求规范，也可以这样创建：<code>com.localhost.www.MyApps.java</code></p><p>这里我选择后者吧，毕竟以后都是要这样做的</p><p>然后你就能得到一个这样的文件：</p><figure><img src="`+v+'" alt="image-20211202163103074" tabindex="0" loading="lazy"><figcaption>image-20211202163103074</figcaption></figure><p>接下来打开tomcat，看下里面的examples中的案例-我们该怎样在Java中来渲染网页</p><p>启动完tomcat后，我们进入到examples目录下，选择第一个</p><figure><img src="'+m+'" alt="image-20211202163705993" tabindex="0" loading="lazy"><figcaption>image-20211202163705993</figcaption></figure><p>然后可以看到各种案例模板，每个案例左边是预览，右边是代码，我们直接点右边（在网页上渲染一个Hello World）</p><figure><img src="'+k+`" alt="image-20211202163733098" tabindex="0" loading="lazy"><figcaption>image-20211202163733098</figcaption></figure><p>得到了如下代码：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import java.io.*;
import jakarta.servlet.*;
import jakarta.servlet.http.*;

public class HelloWorld extends HttpServlet {

    public void doGet(HttpServletRequest request, HttpServletResponse response)
    throws IOException, ServletException
    {
        response.setContentType(&quot;text/html&quot;);
        PrintWriter out = response.getWriter();
        out.println(&quot;&lt;html&gt;&quot;);
        out.println(&quot;&lt;head&gt;&quot;);
        out.println(&quot;&lt;title&gt;Hello World!&lt;/title&gt;&quot;);
        out.println(&quot;&lt;/head&gt;&quot;);
        out.println(&quot;&lt;body&gt;&quot;);
        out.println(&quot;&lt;h1&gt;Hello World!&lt;/h1&gt;&quot;);
        out.println(&quot;&lt;/body&gt;&quot;);
        out.println(&quot;&lt;/html&gt;&quot;);
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们在IEDA中先输入这个<code>HttpServlet</code>，看看当前有没有这个包</p><figure><img src="`+b+'" alt="image-20211202163907316" tabindex="0" loading="lazy"><figcaption>image-20211202163907316</figcaption></figure><p>发现没有，这个时候有个添加Maven依赖项</p><p>点进去，发现啥都没有</p><figure><img src="'+h+`" alt="image-20211202163937171" tabindex="0" loading="lazy"><figcaption>image-20211202163937171</figcaption></figure><p>如果有的话，就直接从这里面选就行了，但是这里没有</p><h3 id="去maven仓库找到对应的包-并加入依赖" tabindex="-1"><a class="header-anchor" href="#去maven仓库找到对应的包-并加入依赖" aria-hidden="true">#</a> 去Maven仓库找到对应的包，并加入依赖</h3><p>首先，我们得到的代码中包含了如下信息</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

    说明这个<span class="token class-name">HttpServlet</span>一定是在jakarta<span class="token punctuation">.</span>servlet或者jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http这个包下的，所以只需要去仓库中搜索
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48),F={href:"https://mvnrepository.com/",target:"_blank",rel:"noopener noreferrer"},B=s('<figure><img src="'+f+'" alt="image-20211202164457153" tabindex="0" loading="lazy"><figcaption>image-20211202164457153</figcaption></figure><p>接下来进去找到对应版本的包：</p><figure><img src="'+x+`" alt="image-20211202164615204" tabindex="0" loading="lazy"><figcaption>image-20211202164615204</figcaption></figure><p>得到了如下安装代码：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-servlet-api --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>tomcat-servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>10.0.13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后再加入到<code>pom.xml</code>中即可</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;
         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

    &lt;groupId&gt;org.example&lt;/groupId&gt;
    &lt;artifactId&gt;16-myJavaWebProjcet&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;

    &lt;properties&gt;
        &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;
        &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;
    &lt;/properties&gt;
    
    &lt;dependencies&gt;
    &lt;!-- 在这里插入--&gt;
        &lt;!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-servlet-api --&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.tomcat&lt;/groupId&gt;
            &lt;artifactId&gt;tomcat-servlet-api&lt;/artifactId&gt;
            &lt;version&gt;10.0.13&lt;/version&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
&lt;/project&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后点击这个加载变更</p><figure><img src="`+y+'" alt="image-20211202164738547" tabindex="0" loading="lazy"><figcaption>image-20211202164738547</figcaption></figure><p>过了几秒后，能看到Maven的依赖库中多了个玩意出来</p><figure><img src="'+q+'" alt="image-20211202164820053" tabindex="0" loading="lazy"><figcaption>image-20211202164820053</figcaption></figure><p>回到代码，尝试写入</p><figure><img src="'+_+`" alt="image-20211202164841675" tabindex="0" loading="lazy"><figcaption>image-20211202164841675</figcaption></figure><p>直接就有个导入类了，看来是没错的</p><p>然后继续把剩下的代码粘贴上去，哪里红了导哪里</p><p>我这里额外加了一句设置编码的，防止乱码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>localhost<span class="token punctuation">.</span>www</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">PrintWriter</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> Amayakite
 * <span class="token keyword">@version</span> 1.0.0
 * @BelongsProject 16-myJavaWebProjcet
 * @BelongsPackage com.localhost.www
 * <span class="token keyword">@date</span> 2021/12/2 16:30
 * <span class="token keyword">@description</span> 项目描述
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApps</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">//设置UTF-8编码</span>
        response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PrintWriter</span> out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;html&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;head&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;title&gt;Hello World!&lt;/title&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/head&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;body&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;Hello World!&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;Hello World!22222&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;Hello World!22222&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;Hello World!3333&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;Hello World!44444&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/body&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/html&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，Java代码部分就完成了</p><h2 id="配置web-xml文件-添加路由" tabindex="-1"><a class="header-anchor" href="#配置web-xml文件-添加路由" aria-hidden="true">#</a> 配置web.xml文件-添加路由</h2><p>md大部分鸟人这里讲的云里雾里的，我这里先放最终文件吧</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token comment">&lt;!--这里是我们直接拷贝的tomcat的配置文件头--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://jakarta.ee/xml/ns/jakartaee<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://jakarta.ee/xml/ns/jakartaee
                      https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5.0<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">metadata-complete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--    注册一个Servlet 这个就相当于注册一个路由一样--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--        这里是这个路由的名字--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>MyApps<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--        这里是这个路由的实际文件位置(class文件)--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>com.localhost.www.MyApps<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--    然后将这个路由绑定到指定的路由地址中  就相当于这里创建了一个真正的Router 然后绑定一个个的route--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!--        这里是绑定的路由--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>MyApps<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--  这个是请求路径--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--这两个可以省略--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>display-name</span><span class="token punctuation">&gt;</span></span>Welcome to Tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>display-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>
        Welcome to Tomcat
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来一点一点的分析：实际上我们就添加了两端代码</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--    注册一个Servlet 这个就相当于注册一个路由一样--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--        这里是这个路由的名字--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>MyApps<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--        这里是这个路由的实际文件位置(class文件)--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>com.localhost.www.MyApps<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里就相当于是申明了一个route，就像在Vue Router中声明了一个字路由（没有path的那种）一样：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>route<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;Myapps&quot;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">component</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;com/local/www/Myapps&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后是：这里就相当于是一个总<strong>Router</strong>，里面可以给各个子路由配置相关的路径</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--    然后将这个路由绑定到指定的路由地址中  就相当于这里创建了一个真正的Router 然后绑定一个个的route--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--        这里是绑定的路由--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>MyApps<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--  这个是请求路径--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果放在Vue router中 大概长这样：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>router <span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span>router<span class="token punctuation">.</span>component<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span>router<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span><span class="token string">&quot;/hello&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果说你没有学过其他的语言的话就当没看到这个js吧。</p><h2 id="配置tomcat" tabindex="-1"><a class="header-anchor" href="#配置tomcat" aria-hidden="true">#</a> 配置tomcat</h2><p>在左上角或者右上角找到这个添加配置</p><figure><img src="`+E+'" alt="image-20211202170123541" tabindex="0" loading="lazy"><figcaption>image-20211202170123541</figcaption></figure><p>然后Tomcat的路径之类的这里就不说明了，在部署这里选择刚刚创建的工作</p><figure><img src="'+J+'" alt="image-20211202170701479" tabindex="0" loading="lazy"><figcaption>image-20211202170701479</figcaption></figure><p>如果说你点击这个加号没有显示工作的话</p><figure><img src="'+M+'" alt="image-20211202170737182" tabindex="0" loading="lazy"><figcaption>image-20211202170737182</figcaption></figure><p>那就先回到这一步<code>打开项目结构</code>：<code>ctrl+alt+shift+s</code></p><p>检查右下角这个是不是像这样提示，如果是的话，点击创建工作，然后返回tomcat继续配置即可</p><figure><img src="'+w+'" alt="image-20211202170831500" tabindex="0" loading="lazy"><figcaption>image-20211202170831500</figcaption></figure><p>然后我们再把上下文该个好记的</p><figure><img src="'+W+'" alt="image-20211202171146353" tabindex="0" loading="lazy"><figcaption>image-20211202171146353</figcaption></figure><p>然后运行tomcat：</p><p>你就能得到一个啥都没有的页面：</p><figure><img src="'+j+'" alt="image-20211202171207069" tabindex="0" loading="lazy"><figcaption>image-20211202171207069</figcaption></figure><p>为啥呢？</p><p>你还记得之前配置的Servlet(Router)吗</p><p>我们的router是绑定了一个在该目录下的<code>hello</code></p><p>我们接下来进入<code>/hello</code>试试</p><figure><img src="'+z+'" alt="image-20211202171218874" tabindex="0" loading="lazy"><figcaption>image-20211202171218874</figcaption></figure><p>是不是有一丢丢小激动</p><p>TMD，这玩意坑倒是不多，讲课的SB多。</p><h2 id="补充-更新页面" tabindex="-1"><a class="header-anchor" href="#补充-更新页面" aria-hidden="true">#</a> 补充-更新页面</h2><p>比方说，我在Java程序中添加了一些其他的话：</p><figure><img src="'+I+'" alt="image-20211202171334898" tabindex="0" loading="lazy"><figcaption>image-20211202171334898</figcaption></figure><p>这个时候刷新页面是不管用的，点一下这里</p><figure><img src="'+T+'" alt="image-20211202171416767" tabindex="0" loading="lazy"><figcaption>image-20211202171416767</figcaption></figure><p>选择这个</p><figure><img src="'+S+'" alt="image-20211202171505255" tabindex="0" loading="lazy"><figcaption>image-20211202171505255</figcaption></figure><p>然后刷新网页，你就能看到更新后的内容了</p><figure><img src="'+H+`" alt="image-20211202171519474" tabindex="0" loading="lazy"><figcaption>image-20211202171519474</figcaption></figure><p>当然如果没有动java文件，只需要点那个<strong>更新类和资源即</strong>可</p><p>如果说你要在这个网站中添加一些其他的页面，比如a.html</p><p>那么添加完毕后直接访问相对应的资源即可</p><p>我这里创建一个my.html演示</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myapps<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    My Apps

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">.myapps</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> #4160d7<span class="token punctuation">;</span>
        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
        <span class="token property">padding-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
        <span class="token property">color</span><span class="token punctuation">:</span> aliceblue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点击更新类和资源</p><figure><img src="`+A+'" alt="image-20211202171956804" tabindex="0" loading="lazy"><figcaption>image-20211202171956804</figcaption></figure><p>进入这个页面</p><figure><img src="'+P+'" alt="image-20211202172009924" tabindex="0" loading="lazy"><figcaption>image-20211202172009924</figcaption></figure><p>好了，项目配置完毕，接下来去学些更令人舒畅的玩意吧</p>',71);function V(N,C){const t=p("ExternalLinkIcon");return i(),l("div",null,[R,a("p",null,[n("在"),a("a",F,[n("Maven仓库"),o(t)]),n("中搜索，得到了如下结果")]),B])}const U=e(O,[["render",V],["__file","02-1-通过空白的Maven模板搭建一个Web项目.html.vue"]]);export{U as default};
