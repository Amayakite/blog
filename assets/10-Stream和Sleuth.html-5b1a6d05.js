import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c as l,a as n,b as s,d as a,e}from"./app-2d4b26c1.js";const u="/images/SpringCloud/10-Stream和Sleuth/image-20220109140330177.png",r="/images/SpringCloud/10-Stream和Sleuth/image-20220109140643747.png",k="/images/SpringCloud/10-Stream和Sleuth/image-20220109140745998.png",d="/images/SpringCloud/10-Stream和Sleuth/image-20220109141303911.png",g="/images/SpringCloud/10-Stream和Sleuth/image-20220109141813218.png",m="/images/SpringCloud/10-Stream和Sleuth/image-20220109142534796.png",v="/images/SpringCloud/10-Stream和Sleuth/image-20220109142713155.png",b="/images/SpringCloud/10-Stream和Sleuth/image-20220109143441630.png",y="/images/SpringCloud/10-Stream和Sleuth/image-20220109143837115.png",f="/images/SpringCloud/10-Stream和Sleuth/image-20220109224245363.png",h="/images/SpringCloud/10-Stream和Sleuth/image-20220109224316143.png",S="/images/SpringCloud/10-Stream和Sleuth/image-20220109224322502.png",_="/images/SpringCloud/10-Stream和Sleuth/image-20220109224746502.png",w="/images/SpringCloud/10-Stream和Sleuth/image-20220109224800118.png",I="/images/SpringCloud/10-Stream和Sleuth/image-20220109224817273.png",x="/images/SpringCloud/10-Stream和Sleuth/image-20220109224955560.png",C="/images/SpringCloud/10-Stream和Sleuth/image-20220109225220313.png",z="/images/SpringCloud/10-Stream和Sleuth/image-20220109225229257.png",j="/images/SpringCloud/10-Stream和Sleuth/image-20220109225235701.png",q="/images/SpringCloud/10-Stream和Sleuth/image-20220109225621484.png",M="/images/SpringCloud/10-Stream和Sleuth/image-20220109230045602.png",A="/images/SpringCloud/10-Stream和Sleuth/image-20220109230354495.png",E="/images/SpringCloud/10-Stream和Sleuth/image-20220109230434710.png",P="/images/SpringCloud/10-Stream和Sleuth/image-20220109233316343.png",R="/images/SpringCloud/10-Stream和Sleuth/image-20220109230849427.png",B="/images/SpringCloud/10-Stream和Sleuth/image-20220109231958614.png",D="/images/SpringCloud/10-Stream和Sleuth/image-20220109232052994.png",T="/images/SpringCloud/10-Stream和Sleuth/image-20220109232105966.png",V="/images/SpringCloud/10-Stream和Sleuth/image-20220109232114255.png",L="/images/SpringCloud/10-Stream和Sleuth/image-20220109232315977.png",Q="/images/SpringCloud/10-Stream和Sleuth/image-20220109233627796.png",N="/images/SpringCloud/10-Stream和Sleuth/image-20220109234105854.png",U="/images/SpringCloud/10-Stream和Sleuth/image-20220109234153250.png",G="/images/SpringCloud/10-Stream和Sleuth/image-20220109234245937.png",K="/images/SpringCloud/10-Stream和Sleuth/image-20220109235502207.png",O="/images/SpringCloud/10-Stream和Sleuth/image-20220109235724812.png",Z="/images/SpringCloud/10-Stream和Sleuth/image-20220110000020503.png",$="/images/SpringCloud/10-Stream和Sleuth/image-20220110000118979.png",J="/images/SpringCloud/10-Stream和Sleuth/image-20220110010849986.png",F="/images/SpringCloud/10-Stream和Sleuth/image-20220110010905803.png",X="/images/SpringCloud/10-Stream和Sleuth/image-20220110010928603.png",W="/images/SpringCloud/10-Stream和Sleuth/image-20220110011010344.png",Y="/images/SpringCloud/10-Stream和Sleuth/image-20220110011113813.png",H="/images/SpringCloud/10-Stream和Sleuth/image-20220110011133863.png",nn="/images/SpringCloud/10-Stream和Sleuth/image-20220110011150515.png",sn={},an=n("h2",{id:"stream概述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#stream概述","aria-hidden":"true"},"#"),s(" Stream概述")],-1),tn=n("p",null,"先说说为啥要有这玩意",-1),en=n("p",null,"消息中间件不止有RabbitMQ一个，还有ActiveMQ、RocketMQ、Kafka等",-1),pn=n("p",null,"实际开发中，有概率存在两种中间件，例如RabbitMQ和Kafka，众所周知，中间件想搞明白并不简单（Kafka也不是那么简单滴）但是又不能追求统一而始终使用相同的中间件，导致我们在技术切换、技术使用的过程中遇到了一堆麻烦",-1),cn=n("p",null,"所以这时候 Spring Cloud Stream来了，它可以让我们不再关注具体MQ的细节，我们只需要用一种适配绑定的方式自动的给我们在各种的MQ内切换，就类似于JDbc的理念，我们只需要一个Spring Jdbc并配合上相关的数据库配置，即可使用，无须在意底层细节",-1),on=n("figure",null,[n("img",{src:u,alt:"image-20220109140330177",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20220109140330177")],-1),ln=n("p",null,"它的作用就是屏蔽底层消息中间件的差异，降低切换成本，统一消息的编程模型",-1),un={href:"https://spring.io/projects/spring-cloud-stream#overview",target:"_blank",rel:"noopener noreferrer"},rn=e('<p>它就是靠这个绑定器对象来屏蔽了底层的消息模型</p><figure><img src="'+r+'" alt="image-20220109140643747" tabindex="0" loading="lazy"><figcaption>image-20220109140643747</figcaption></figure><figure><img src="'+k+'" alt="image-20220109140745998" tabindex="0" loading="lazy"><figcaption>image-20220109140745998</figcaption></figure><p>截止至今，已经支持如下</p><figure><img src="'+d+'" alt="image-20220109141303911" tabindex="0" loading="lazy"><figcaption>image-20220109141303911</figcaption></figure><h3 id="为什么用cloud-stream" tabindex="-1"><a class="header-anchor" href="#为什么用cloud-stream" aria-hidden="true">#</a> 为什么用Cloud Stream</h3><figure><img src="'+g+'" alt="image-20220109141813218" tabindex="0" loading="lazy"><figcaption>image-20220109141813218</figcaption></figure><p>这些中间件的差异性导致我们实际项目开发给我们造成了一定的困扰，如果用了两个消息队列的其中一种，后面的业务需求，我们想往另一种消息队列进行迁移，这时候无疑就是一个灾难性的，一大堆东西都需要推倒重新做，因为他跟我们的系统耦合了，这时候Spring Cloud Stream给我们提供了一种解耦合的方式</p><p>PS：Kafka是Java大数据用的（一般用来推送广告）</p><h3 id="binder" tabindex="-1"><a class="header-anchor" href="#binder" aria-hidden="true">#</a> Binder</h3><p>主要就是两点</p><ul><li>input：消费者</li><li>output：生产者</li></ul><p>下面图右边写反了，右边的坐上是消费者，右上是生产者</p><figure><img src="'+m+'" alt="image-20220109142534796" tabindex="0" loading="lazy"><figcaption>image-20220109142534796</figcaption></figure><p>然后这玩意遵循了消费者订阅模式，统一使用Topic主题进行广播</p><figure><img src="'+v+'" alt="image-20220109142713155" tabindex="0" loading="lazy"><figcaption>image-20220109142713155</figcaption></figure><p>它的流程为</p><figure><img src="'+b+'" alt="image-20220109143441630" tabindex="0" loading="lazy"><figcaption>image-20220109143441630</figcaption></figure><p>这三个东西简单来说就是：</p><ul><li>Binder：很方便的连接中间件，屏蔽差异</li><li>Channel：通道，是队列queue的一种抽象，在消息通讯系统内就是实现存储和转发的媒介，通过Channel对队列进行配置</li><li>Source和Sink：简单的可以理解为参照对象就是Spring Cloud Stream自身，从Stream发布消息就是输出，接收消息就是输入</li></ul><h3 id="编码和常见注解" tabindex="-1"><a class="header-anchor" href="#编码和常见注解" aria-hidden="true">#</a> 编码和常见注解</h3><figure><img src="'+y+'" alt="image-20220109143837115" tabindex="0" loading="lazy"><figcaption>image-20220109143837115</figcaption></figure><h2 id="简单使用" tabindex="-1"><a class="header-anchor" href="#简单使用" aria-hidden="true">#</a> 简单使用</h2><h3 id="生产者构建" tabindex="-1"><a class="header-anchor" href="#生产者构建" aria-hidden="true">#</a> 生产者构建</h3><p>我们先准备三个模块</p><ul><li>cloud-stream-rabbitmq-provider-8801，作为生产者进行发消息模块</li><li>cloud-stream-rabbitmq-consumer-8802，作为消息接收模块</li><li>cloud-stream-rabbitmq-consumer-8803，作为消息接收模块</li></ul><p>以及RabbitMQ</p><p>然后<code>cloud-stream-rabbitmq-provider-8801</code>为生产者，先配置</p><p>依赖如下：</p><p>主要是<code>spring-cloud-starter-stream-rabbit</code>，如果你用的是卡夫卡，则可以将rabbit换成kafka</p>',30),kn=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{xml:"",class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependencies")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.springframework.cloud"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("spring-cloud-starter-stream-rabbit"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.springframework.cloud"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("spring-cloud-starter-consul-discovery"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.springframework.boot"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("spring-boot-starter-web"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.springframework.boot"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("spring-boot-starter-actuator"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.projectlombok"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("lombok"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependencies")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),dn=n("p",null,"接着写下配置文件",-1),gn=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{yaml:"",class:"language-yaml"},[n("code",null,[n("span",{class:"token key atrule"},"server"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"8801"),s(`
`),n("span",{class:"token key atrule"},"spring"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"application"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"name"),n("span",{class:"token punctuation"},":"),s(` provider
  `),n("span",{class:"token key atrule"},"cloud"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token comment"},"# Consul相关配置"),s(`
    `),n("span",{class:"token key atrule"},"consul"),n("span",{class:"token punctuation"},":"),s(`
      `),n("span",{class:"token key atrule"},"host"),n("span",{class:"token punctuation"},":"),s(` localhost
      `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"8500"),s(`
      `),n("span",{class:"token key atrule"},"discovery"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token key atrule"},"service-name"),n("span",{class:"token punctuation"},":"),s(" $"),n("span",{class:"token punctuation"},"{"),s("spring.application.name"),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token key atrule"},"instance-id"),n("span",{class:"token punctuation"},":"),s(` 服务提供者
    `),n("span",{class:"token key atrule"},"stream"),n("span",{class:"token punctuation"},":"),s(`
      `),n("span",{class:"token comment"},"# 配置要绑定的rabbitmq的服务信息"),s(`
      `),n("span",{class:"token key atrule"},"binders"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# 表示定义的名称，用于bindings整合"),s(`
        `),n("span",{class:"token key atrule"},"defaultRabbit"),n("span",{class:"token punctuation"},":"),s(`
          `),n("span",{class:"token comment"},"# 消息组件类型"),s(`
          `),n("span",{class:"token key atrule"},"type"),n("span",{class:"token punctuation"},":"),s(` rabbit
      `),n("span",{class:"token comment"},"# 服务的整合处理"),s(`
      `),n("span",{class:"token key atrule"},"bindings"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# 这个名字是一个通道的名称 指定是发送者还是接受者 这里output表示发送者"),s(`
        `),n("span",{class:"token key atrule"},"output"),n("span",{class:"token punctuation"},":"),s(`
          `),n("span",{class:"token comment"},"# 表示要使用Exchange名称定义 也就是要使用的通道"),s(`
          `),n("span",{class:"token key atrule"},"destination"),n("span",{class:"token punctuation"},":"),s(` studyExchange
          `),n("span",{class:"token comment"},"# 设置消息类型，如果需要设置纯文本类型，则：text/plain"),s(`
          `),n("span",{class:"token key atrule"},"content-type"),n("span",{class:"token punctuation"},":"),s(` application/json
          `),n("span",{class:"token comment"},"# 设置要绑定的消息服务的具体配置 这里就是填写上面配置的，会爆红，但是不用管"),s(`
          `),n("span",{class:"token key atrule"},"binder"),n("span",{class:"token punctuation"},":"),s(` defaultRabbit
  `),n("span",{class:"token key atrule"},"rabbitmq"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"5672"),s(`
    `),n("span",{class:"token key atrule"},"host"),n("span",{class:"token punctuation"},":"),s(` 你的服务器
    `),n("span",{class:"token key atrule"},"username"),n("span",{class:"token punctuation"},":"),s(` admin
    `),n("span",{class:"token key atrule"},"password"),n("span",{class:"token punctuation"},":"),s(` aaaabbbbcccceeeddfj1113433
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),mn=e(`<p>接着我们准备main</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamMq8801Application</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">StreamMq8801Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后准备一个service，用来发送消息</p><p>接口：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IMessageProvider</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IMessageProvider</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">EnableBinding</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span></span><span class="token class-name">Source</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span></span><span class="token class-name">MessageChannel</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span><span class="token class-name">MessageBuilder</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">UUID</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 定义消息的推送管道（OutputStream） SOURCE表示发送消息
 */</span>
<span class="token annotation punctuation">@EnableBinding</span><span class="token punctuation">(</span><span class="token class-name">Source</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IMessageProviderImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IMessageProvider</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 消息发送管道 注意 取名必须为output，MessageChannel有很多歌实例Bean
     */</span>
    <span class="token annotation punctuation">@Resource</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;output&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">MessageChannel</span> output<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> serial <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 接着通过output来发送消息</span>
        output<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">MessageBuilder</span><span class="token punctuation">.</span><span class="token function">withPayload</span><span class="token punctuation">(</span>serial<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;serial: {}&quot;</span><span class="token punctuation">,</span> serial<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> serial<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着，我们启动并尝试发送一条消息</p><figure><img src="`+f+'" alt="image-20220109224245363" tabindex="0" loading="lazy"><figcaption>image-20220109224245363</figcaption></figure><p>显示发送成功，RabbitMQ内也有峰值和对应的队列</p><figure><img src="'+h+'" alt="image-20220109224316143" tabindex="0" loading="lazy"><figcaption>image-20220109224316143</figcaption></figure><figure><img src="'+S+'" alt="image-20220109224322502" tabindex="0" loading="lazy"><figcaption>image-20220109224322502</figcaption></figure><p>这个队列就是我们在配置文件中配置的队列</p><p>但是我们并没有配置消息接受者，所以queue中并没有任何内容，所以接下来要配置消费者</p><h3 id="服务消费者" tabindex="-1"><a class="header-anchor" href="#服务消费者" aria-hidden="true">#</a> 服务消费者</h3><p>这里创建下8802/8803，配置和代码都是一样的</p>',16),vn=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{xml:"",class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependencies")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.springframework.cloud"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("spring-cloud-starter-stream-rabbit"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.springframework.cloud"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("spring-cloud-starter-consul-discovery"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.springframework.boot"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("spring-boot-starter-web"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.springframework.boot"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("spring-boot-starter-actuator"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`

    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("org.projectlombok"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
        `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("lombok"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`

`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependencies")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),bn=n("p",null,"application",-1),yn=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{yaml:"",class:"language-yaml"},[n("code",null,[n("span",{class:"token key atrule"},"server"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"8802"),s(`
`),n("span",{class:"token key atrule"},"spring"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"application"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"name"),n("span",{class:"token punctuation"},":"),s(` consumer
  `),n("span",{class:"token key atrule"},"cloud"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token comment"},"# Consul相关配置"),s(`
    `),n("span",{class:"token key atrule"},"consul"),n("span",{class:"token punctuation"},":"),s(`
      `),n("span",{class:"token key atrule"},"host"),n("span",{class:"token punctuation"},":"),s(` localhost
      `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"8500"),s(`
      `),n("span",{class:"token key atrule"},"discovery"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token key atrule"},"service-name"),n("span",{class:"token punctuation"},":"),s(" $"),n("span",{class:"token punctuation"},"{"),s("spring.application.name"),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token key atrule"},"instance-id"),n("span",{class:"token punctuation"},":"),s(` 消费者
    `),n("span",{class:"token key atrule"},"stream"),n("span",{class:"token punctuation"},":"),s(`
      `),n("span",{class:"token comment"},"# 配置要绑定的rabbitmq的服务信息"),s(`
      `),n("span",{class:"token key atrule"},"binders"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# 表示定义的名称，用于bindings整合"),s(`
        `),n("span",{class:"token key atrule"},"defaultRabbit"),n("span",{class:"token punctuation"},":"),s(`
          `),n("span",{class:"token comment"},"# 消息组件类型"),s(`
          `),n("span",{class:"token key atrule"},"type"),n("span",{class:"token punctuation"},":"),s(` rabbit
      `),n("span",{class:"token comment"},"# 服务的整合处理"),s(`
      `),n("span",{class:"token key atrule"},"bindings"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# 这个名字是一个通道的名称  注意 这里使用的是input，表示接收消息"),s(`
        `),n("span",{class:"token key atrule"},"input"),n("span",{class:"token punctuation"},":"),s(`
          `),n("span",{class:"token comment"},"# 表示要使用Exchange名称定义 也就是要使用的通道"),s(`
          `),n("span",{class:"token key atrule"},"destination"),n("span",{class:"token punctuation"},":"),s(` studyExchange
          `),n("span",{class:"token comment"},"# 设置消息类型，如果需要设置纯文本类型，则：text/plain"),s(`
          `),n("span",{class:"token key atrule"},"content-type"),n("span",{class:"token punctuation"},":"),s(` application/json
          `),n("span",{class:"token comment"},"# 设置要绑定的消息服务的具体配置  这里就是填写上面配置的，会爆红，但是不用管"),s(`
          `),n("span",{class:"token key atrule"},"binder"),n("span",{class:"token punctuation"},":"),s(` defaultRabbit
  `),n("span",{class:"token key atrule"},"rabbitmq"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"5672"),s(`
    `),n("span",{class:"token key atrule"},"host"),n("span",{class:"token punctuation"},":"),s(` 你的服务器名称
    `),n("span",{class:"token key atrule"},"username"),n("span",{class:"token punctuation"},":"),s(` admin
    `),n("span",{class:"token key atrule"},"password"),n("span",{class:"token punctuation"},":"),s(` aaaabbbbcccceeeddfj1113433
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),fn=e(`<p>接着，我们写下mian和一个监听的类</p><p>main</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamMq8802Application</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">StreamMq8802Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监听的类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span></span><span class="token class-name">Project</span><span class="token punctuation">.</span>controller<span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">EnableBinding</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">StreamListener</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>stream<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span></span><span class="token class-name">Sink</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>messaging<span class="token punctuation">.</span></span><span class="token class-name">Message</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Component</span>
<span class="token comment">// Sink表示接收消息</span>
<span class="token annotation punctuation">@EnableBinding</span><span class="token punctuation">(</span><span class="token class-name">Sink</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReceiveMessageListenerController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${server.port}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> serverPort<span class="token punctuation">;</span>
    
	<span class="token comment">// 通过注解指定接收消息的方法</span>
    <span class="token annotation punctuation">@StreamListener</span><span class="token punctuation">(</span><span class="token class-name">Sink</span><span class="token punctuation">.</span><span class="token constant">INPUT</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token class-name">Message</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消费者1号，接收到的消息：&quot;</span> <span class="token operator">+</span> message<span class="token punctuation">.</span><span class="token function">getPayload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span> serverPort<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着 先启动8801/8802看看</p><figure><img src="`+_+'" alt="image-20220109224746502" tabindex="0" loading="lazy"><figcaption>image-20220109224746502</figcaption></figure><p>发送消息成功，看看消费者</p><figure><img src="'+w+'" alt="image-20220109224800118" tabindex="0" loading="lazy"><figcaption>image-20220109224800118</figcaption></figure><p>也成功接收到了消息</p><p>再看看RabbitMQ</p><figure><img src="'+I+'" alt="image-20220109224817273" tabindex="0" loading="lazy"><figcaption>image-20220109224817273</figcaption></figure><p>有一个自动生成的队列了</p><p>并且和交换机自动绑定上</p><figure><img src="'+x+'" alt="image-20220109224955560" tabindex="0" loading="lazy"><figcaption>image-20220109224955560</figcaption></figure><p>接下来再开一个8803试试</p><p>发送</p><figure><img src="'+C+'" alt="image-20220109225220313" tabindex="0" loading="lazy"><figcaption>image-20220109225220313</figcaption></figure><p>接收</p><figure><img src="'+z+'" alt="image-20220109225229257" tabindex="0" loading="lazy"><figcaption>image-20220109225229257</figcaption></figure><figure><img src="'+j+'" alt="image-20220109225235701" tabindex="0" loading="lazy"><figcaption>image-20220109225235701</figcaption></figure><p>貌似没问题</p><p>但其实是有问题的，我们上面就是重复消费</p><figure><img src="'+q+'" alt="image-20220109225621484" tabindex="0" loading="lazy"><figcaption>image-20220109225621484</figcaption></figure><p>队列变成了两个，并且都是临时队列，消息不能持久化</p><h3 id="防止重复消费和持久化" tabindex="-1"><a class="header-anchor" href="#防止重复消费和持久化" aria-hidden="true">#</a> 防止重复消费和持久化</h3><figure><img src="'+M+'" alt="image-20220109230045602" tabindex="0" loading="lazy"><figcaption>image-20220109230045602</figcaption></figure><p>结论：不同的组是可以重复消费的，同一个组内会产生竞争关系，只有其中一个可以消费</p><p>这个我们之前在RabbitMQ的学习中也知道，解决方法无疑就<strong>我们把所有的队列的名称都设置为同一样的</strong>，这样可以防止重复消费</p><figure><img src="'+A+'" alt="image-20220109230354495" tabindex="0" loading="lazy"><figcaption>image-20220109230354495</figcaption></figure><p>我们首先看看队列名</p><figure><img src="'+E+'" alt="image-20220109230434710" tabindex="0" loading="lazy"><figcaption>image-20220109230434710</figcaption></figure><p>首先要确定的是我们的队列名，<strong>实际开发过程中百分之八十是通过队列名来区分不同的事务的</strong></p><p>貌似不是我们定义的只有中间的anoymous 这也叫组名</p><p>所以我们自定义组就是通过他来下手的</p><p>只需要添加一个配置即可解决，在<strong>消费者</strong>端</p>',36),hn=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{yaml:"",class:"language-yaml"},[n("code",null,[n("span",{class:"token key atrule"},"server"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"8803"),s(`
`),n("span",{class:"token key atrule"},"spring"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"application"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"name"),n("span",{class:"token punctuation"},":"),s(` consumer
  `),n("span",{class:"token key atrule"},"cloud"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token comment"},"# Consul相关配置"),s(`
    `),n("span",{class:"token key atrule"},"consul"),n("span",{class:"token punctuation"},":"),s(`
      `),n("span",{class:"token key atrule"},"host"),n("span",{class:"token punctuation"},":"),s(` localhost
      `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"8500"),s(`
      `),n("span",{class:"token key atrule"},"discovery"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token key atrule"},"service-name"),n("span",{class:"token punctuation"},":"),s(" $"),n("span",{class:"token punctuation"},"{"),s("spring.application.name"),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token key atrule"},"instance-id"),n("span",{class:"token punctuation"},":"),s(` 消费者
    `),n("span",{class:"token key atrule"},"stream"),n("span",{class:"token punctuation"},":"),s(`
      `),n("span",{class:"token comment"},"# 配置要绑定的rabbitmq的服务信息"),s(`
      `),n("span",{class:"token key atrule"},"binders"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# 表示定义的名称，用于bindings整合"),s(`
        `),n("span",{class:"token key atrule"},"defaultRabbit"),n("span",{class:"token punctuation"},":"),s(`
      `),n("span",{class:"token comment"},"# 服务的整合处理"),s(`
      `),n("span",{class:"token key atrule"},"bindings"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token comment"},"# 这个名字是一个通道的名称"),s(`
        `),n("span",{class:"token key atrule"},"input"),n("span",{class:"token punctuation"},":"),s(`
          `),n("span",{class:"token comment"},"# 表示要使用Exchange名称定义 也就是要使用的通道"),s(`
          `),n("span",{class:"token key atrule"},"destination"),n("span",{class:"token punctuation"},":"),s(` studyExchange
          `),n("span",{class:"token comment"},"# 设置消息类型，如果需要设置纯文本类型，则：text/plain"),s(`
          `),n("span",{class:"token key atrule"},"content-type"),n("span",{class:"token punctuation"},":"),s(` application/json
          `),n("span",{class:"token comment"},"# 设置要绑定的消息服务的具体配置"),s(`
          `),n("span",{class:"token key atrule"},"binder"),n("span",{class:"token punctuation"},":"),s(` defaultRabbit
          `),n("span",{class:"token comment"},"# 设置组名"),s(`
          `),n("span",{class:"token key atrule"},"group"),n("span",{class:"token punctuation"},":"),s(` MyGroup1
  `),n("span",{class:"token key atrule"},"rabbitmq"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"5672"),s(`
    `),n("span",{class:"token key atrule"},"host"),n("span",{class:"token punctuation"},":"),s(` 你的服务器
    `),n("span",{class:"token key atrule"},"username"),n("span",{class:"token punctuation"},":"),s(` admin
    `),n("span",{class:"token key atrule"},"password"),n("span",{class:"token punctuation"},":"),s(` aaaabbbbcccceeeddfj1113433

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Sn=e('<p>另外一个8802同理</p><p>可以看到这样解决了持久化的问题</p><figure><img src="'+P+'" alt="image-20220109233316343" tabindex="0" loading="lazy"><figcaption>image-20220109233316343</figcaption></figure><p>变成了D</p><p>当然<strong>这样并不能解决重复消费的问题</strong>，因为我们的发送者依旧是绑定了他们两个，只不过我们区分了他们的名字而已</p><figure><img src="'+R+'" alt="image-20220109230849427" tabindex="0" loading="lazy"><figcaption>image-20220109230849427</figcaption></figure><p>所以说<strong>我们只需要将他们两个的group属性改成一样</strong>的<code>group: MyGroupConsumer</code></p><p>就可以解决问题了</p><figure><img src="'+B+'" alt="image-20220109231958614" tabindex="0" loading="lazy"><figcaption>image-20220109231958614</figcaption></figure><p>接下来发送</p><figure><img src="'+D+'" alt="image-20220109232052994" tabindex="0" loading="lazy"><figcaption>image-20220109232052994</figcaption></figure><p>看看接收情况</p><p>8002没有</p><figure><img src="'+T+'" alt="image-20220109232105966" tabindex="0" loading="lazy"><figcaption>image-20220109232105966</figcaption></figure><p>8003有</p><figure><img src="'+V+'" alt="image-20220109232114255" tabindex="0" loading="lazy"><figcaption>image-20220109232114255</figcaption></figure><p>再次尝试发送几次之后，发现是轮循的，这个你可以自己测试</p><p>并且我们的队列是持久化的</p><figure><img src="'+L+'" alt="image-20220109232315977" tabindex="0" loading="lazy"><figcaption>image-20220109232315977</figcaption></figure>',19),_n={href:"https://docs.spring.io/spring-cloud-stream-binder-rabbit/docs/3.2.1/reference/html/spring-cloud-stream-binder-rabbit.html#_configuration_options",target:"_blank",rel:"noopener noreferrer"},wn=n("h2",{id:"sleuth链路跟踪",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sleuth链路跟踪","aria-hidden":"true"},"#"),s(" Sleuth链路跟踪")],-1),In=n("blockquote",null,[n("p",null,"在微服务框架中，一个由客户端发起的请求在后端系统中会经过多个不同的服务节点调用来协同产生最后的请求结果，每一个前端请求都会行程一个复杂的分布式服务调用链路，链路中的任何一环出现高延迟或错误都会引起整个请求最后的失败")],-1),xn=n("figure",null,[n("img",{src:Q,alt:"image-20220109233627796",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20220109233627796")],-1),Cn=n("p",null,"是不是看起来很简单的一个链路，但如果多了呢？",-1),zn=n("p",null,"例如：",-1),jn=n("p",null,"或者说",-1),qn=n("figure",null,[n("img",{src:N,alt:"image-20220109234105854",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20220109234105854")],-1),Mn=n("p",null,"所以Spring cloud也考虑到了这个问题",-1),An=n("figure",null,[n("img",{src:U,alt:"image-20220109234153250",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20220109234153250")],-1),En={href:"https://docs.spring.io/spring-cloud-sleuth/docs/current/reference/html/",target:"_blank",rel:"noopener noreferrer"},Pn=n("figure",null,[n("img",{src:G,alt:"image-20220109234245937",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20220109234245937")],-1),Rn=n("h3",{id:"安装zipkin",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装zipkin","aria-hidden":"true"},"#"),s(" 安装Zipkin")],-1),Bn=n("p",null,"非常简单，先说下 Sleuth可以将链路放到Zipkin图形界面展示",-1),Dn=n("p",null,"所以我们需要先下载ZIPKIN",-1),Tn={href:"https://zipkin.io/pages/quickstart",target:"_blank",rel:"noopener noreferrer"},Vn=n("p",null,"Windows下载最新的jar包并运行即可",-1),Ln={href:"https://repo1.maven.org/maven2/io/zipkin/java/zipkin-server/",target:"_blank",rel:"noopener noreferrer"},Qn={href:"https://repo1.maven.org/maven2/io/zipkin/zipkin-server/",target:"_blank",rel:"noopener noreferrer"},Nn=e(`<p>Linux：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># docker</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9411</span>:9411 openzipkin/zipkin

<span class="token comment"># 常规linux</span>
<span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://zipkin.io/quickstart.sh <span class="token operator">|</span> <span class="token function">bash</span> <span class="token parameter variable">-s</span>
<span class="token function">java</span> <span class="token parameter variable">-jar</span> zipkin.jar

<span class="token comment"># 傻子才会用的方法</span>
<span class="token function">git</span> clone https://github.com/openzipkin/zipkin
<span class="token builtin class-name">cd</span> zipkin
./mvnw <span class="token parameter variable">-DskipTests</span> --also-make <span class="token parameter variable">-pl</span> zipkin-server clean <span class="token function">install</span>
<span class="token comment"># Run the server</span>
<span class="token function">java</span> <span class="token parameter variable">-jar</span> ./zipkin-server/target/zipkin-server-*exec.jar

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里我是windows 所以 下载最新的jar包 我目前是2.23.9</p><figure><img src="`+K+'" alt="image-20220109235502207" tabindex="0" loading="lazy"><figcaption>image-20220109235502207</figcaption></figure><p>下载会比较慢，建议使用IDM开8+的线程或者挂梯子下载</p>',5),Un={href:"https://blog.csdn.net/weixin_43232955/article/details/114751545",target:"_blank",rel:"noopener noreferrer"},Gn=n("figure",null,[n("img",{src:O,alt:"image-20220109235724812",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20220109235724812")],-1),Kn={href:"http://localhost:9411",target:"_blank",rel:"noopener noreferrer"},On=e('<p>即可看到如下内容</p><figure><img src="'+Z+'" alt="image-20220110000020503" tabindex="0" loading="lazy"><figcaption>image-20220110000020503</figcaption></figure><p>它的链路是</p><figure><img src="'+$+`" alt="image-20220110000118979" tabindex="0" loading="lazy"><figcaption>image-20220110000118979</figcaption></figure><p>一句话解释，就是一个请求，在每个地方所用时间，没了，，就这么简单</p><h3 id="客户端的准备和配置" tabindex="-1"><a class="header-anchor" href="#客户端的准备和配置" aria-hidden="true">#</a> 客户端的准备和配置</h3><p>这里我是准备这样的，消费者80，然后一个服务端8001，然后平台是Consul（一键启动还是方便）</p><p>接下来开始配置</p><p>cloud-provicer-consul-payment-8001</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--        包含了sleuth和Zipkin 这里版本用maven仓库上最新的即可
        https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-zipkin
        --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-zipkin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.8.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--        数据库的相关配置--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>druid-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-consul-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来配置</p>`,11),Zn=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{yaml:"",class:"language-yaml"},[n("code",null,[n("span",{class:"token key atrule"},"server"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"8001"),s(`
`),n("span",{class:"token key atrule"},"spring"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"application"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"name"),n("span",{class:"token punctuation"},":"),s(" cloud"),n("span",{class:"token punctuation"},"-"),s("payment"),n("span",{class:"token punctuation"},"-"),s(`service
  `),n("span",{class:"token key atrule"},"cloud"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token comment"},"# Consul相关配置"),s(`
    `),n("span",{class:"token key atrule"},"consul"),n("span",{class:"token punctuation"},":"),s(`
      `),n("span",{class:"token key atrule"},"host"),n("span",{class:"token punctuation"},":"),s(` localhost
      `),n("span",{class:"token key atrule"},"port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"8500"),s(`
      `),n("span",{class:"token key atrule"},"discovery"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token key atrule"},"service-name"),n("span",{class:"token punctuation"},":"),s(" $"),n("span",{class:"token punctuation"},"{"),s("spring.application.name"),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token key atrule"},"instance-id"),n("span",{class:"token punctuation"},":"),s(` 服务提供者
  `),n("span",{class:"token key atrule"},"zipkin"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"base-url"),n("span",{class:"token punctuation"},":"),s(" http"),n("span",{class:"token punctuation"},":"),s("//localhost"),n("span",{class:"token punctuation"},":"),n("span",{class:"token number"},"9411"),s(`
  `),n("span",{class:"token key atrule"},"sleuth"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"sampler"),n("span",{class:"token punctuation"},":"),s(`
      `),n("span",{class:"token comment"},"# 采样值介于0~1之间，1表示全部采样，0表示不采样"),s(`
      `),n("span",{class:"token key atrule"},"probability"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"1"),s(`
  `),n("span",{class:"token key atrule"},"datasource"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token key atrule"},"type"),n("span",{class:"token punctuation"},":"),s(` com.alibaba.druid.pool.DruidDataSource
    `),n("span",{class:"token key atrule"},"driver-class-name"),n("span",{class:"token punctuation"},":"),s(` com.mysql.cj.jdbc.Driver
    `),n("span",{class:"token key atrule"},"url"),n("span",{class:"token punctuation"},":"),s(" jdbc"),n("span",{class:"token punctuation"},":"),s("mysql"),n("span",{class:"token punctuation"},":"),s("//localhost"),n("span",{class:"token punctuation"},":"),s(`3306/cloud
    `),n("span",{class:"token key atrule"},"username"),n("span",{class:"token punctuation"},":"),s(` root
    `),n("span",{class:"token key atrule"},"password"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"123456"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),$n=e(`<p>接下来创建一个简单表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> testPayment
<span class="token punctuation">(</span>
    id       <span class="token keyword">int</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span> <span class="token string">&#39;ID&#39;</span><span class="token punctuation">,</span>
    name     <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&#39;&#39;</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    password <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span>                <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span>
    <span class="token keyword">constraint</span> testPayment_pk <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后其余的用mybatisx生成</p><p>启动类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.Project.mapper&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application8001</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application8001</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>controller</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">TestpaymentService</span> testpaymentService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/create/{username}/{password}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Testpayment</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//        验证是用户名和密码是否不为空、</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>username <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> username<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> password <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> password<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">Testpayment</span> testpayment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Testpayment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        testpayment<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        testpayment<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> save <span class="token operator">=</span> testpaymentService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>testpayment<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>save<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> testpayment<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着80</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--        包含了sleuth和Zipkin 这里版本用maven仓库上最新的即可
        https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-zipkin
        --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-zipkin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.8.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-consul-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token annotation punctuation">@EnableFeignClients</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Consumer80Application</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Consumer80Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>domain</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Testpayment</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>


    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>


    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>service</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span><span class="token string">&quot;cloud-payment-service&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TestService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/create/{username}/{password}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Testpayment</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>controller</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">TestService</span> testService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/create/{username}/{password}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Testpayment</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> testService<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后发送下请求</p><figure><img src="`+J+'" alt="image-20220110010849986" tabindex="0" loading="lazy"><figcaption>image-20220110010849986</figcaption></figure><p>接着返回网页，点击</p><figure><img src="'+F+'" alt="image-20220110010905803" tabindex="0" loading="lazy"><figcaption>image-20220110010905803</figcaption></figure><p>就能看到如上内容，点击show</p><figure><img src="'+X+'" alt="image-20220110010928603" tabindex="0" loading="lazy"><figcaption>image-20220110010928603</figcaption></figure><p>就可以看到对应的信息</p><p>然后你点显示全部 还能看到更详细的</p><figure><img src="'+W+'" alt="image-20220110011010344" tabindex="0" loading="lazy"><figcaption>image-20220110011010344</figcaption></figure><p>当然 你还可以指定其他的相关信息</p><figure><img src="'+Y+'" alt="image-20220110011113813" tabindex="0" loading="lazy"><figcaption>image-20220110011113813</figcaption></figure><p>例如这样</p><figure><img src="'+H+'" alt="image-20220110011133863" tabindex="0" loading="lazy"><figcaption>image-20220110011133863</figcaption></figure><figure><img src="'+nn+'" alt="image-20220110011150515" tabindex="0" loading="lazy"><figcaption>image-20220110011150515</figcaption></figure><p>当然 这些之后应该都用不上了</p>',32);function Jn(Fn,Xn){const t=p("ExternalLinkIcon"),c=p("Mermaid");return i(),l("div",null,[an,tn,en,pn,cn,on,ln,n("p",null,[s("官网"),n("a",un,[s("https://spring.io/projects/spring-cloud-stream#overview"),a(t)])]),rn,kn,dn,gn,mn,vn,bn,yn,fn,hn,Sn,n("p",null,[s("要修改服务端或者消费端的相关属性，例如是否持久化或服务端指定队列发送等，可以参照"),n("a",_n,[s("官方文档"),a(t)]),s("或者说去看看这个类BindingProperties")]),wn,In,xn,Cn,zn,a(c,{id:"mermaid-385",code:"eJxLL0osyFDwCeKyMNDVtbO0BBKGhgaGXCACyDYyMjCGsU1MDEyB1LO5TS8X7gQpBumwAAKoHph+CwMukDYg60X30qc7NyGkgTIAK6gc+g=="}),jn,qn,Mn,An,n("p",null,[s("官方文档："),n("a",En,[s("https://docs.spring.io/spring-cloud-sleuth/docs/current/reference/html/"),a(t)])]),Pn,Rn,Bn,Dn,n("p",null,[s("官网"),n("a",Tn,[s("https://zipkin.io/pages/quickstart"),a(t)])]),Vn,n("p",null,[s("老版本"),n("a",Ln,[s("https://repo1.maven.org/maven2/io/zipkin/java/zipkin-server/"),a(t)])]),n("p",null,[s("新版本"),n("a",Qn,[s("https://repo1.maven.org/maven2/io/zipkin/zipkin-server/"),a(t)]),s(" 建议用新版本的")]),Nn,n("p",null,[s("看到有图标 只要有图标显示就算成功（PS：Windows Terminal优化可以看"),n("a",Un,[s("这篇文章"),a(t)]),s("，要安装下PowerShellCore，然后安装下Oh-My-Posh即可 非常简单）")]),Gn,n("p",null,[s("接下来我们访问"),n("a",Kn,[s("http://localhost:9411"),a(t)])]),On,Zn,$n])}const Hn=o(sn,[["render",Jn],["__file","10-Stream和Sleuth.html.vue"]]);export{Hn as default};
