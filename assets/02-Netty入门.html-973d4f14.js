const e=JSON.parse('{"key":"v-466715ae","path":"/JavaLang/Netty/02-Netty%E5%85%A5%E9%97%A8.html","title":"02-Netty入门","lang":"zh-CN","frontmatter":{"title":"02-Netty入门","date":"2022-05-11T14:17:07.000Z","category":"Netty","tag":["Netty"],"description":"概述 首先来看看原生NIO中存在的一些问题 NIO的类库和API比较复杂（虽然说Netty也差不多），使用麻烦，需要数量掌握Selector、ServerSocketChannel、ByteBuffer等 需要具备其他的额外技能：Java多线程、因为NIO编程涉及到Reactor模式，必须得对多线程和网络编程非常熟悉，才能写出高质量的NIO程序 开发工作量和难度都非常大，例如客户端面临断连重连，网络闪断，半包读写，失败缓存，网络拥堵和异常流的处理等等 JAVA在NIO还是有一些BUG的，例如著名的JDK1.7中的Epoll BUG，会导致Selector空轮循","head":[["meta",{"property":"og:url","content":"http://www.amayakite.github.io/JavaLang/Netty/02-Netty%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:site_name","content":"Amayakite Blogs"}],["meta",{"property":"og:title","content":"02-Netty入门"}],["meta",{"property":"og:description","content":"概述 首先来看看原生NIO中存在的一些问题 NIO的类库和API比较复杂（虽然说Netty也差不多），使用麻烦，需要数量掌握Selector、ServerSocketChannel、ByteBuffer等 需要具备其他的额外技能：Java多线程、因为NIO编程涉及到Reactor模式，必须得对多线程和网络编程非常熟悉，才能写出高质量的NIO程序 开发工作量和难度都非常大，例如客户端面临断连重连，网络闪断，半包读写，失败缓存，网络拥堵和异常流的处理等等 JAVA在NIO还是有一些BUG的，例如著名的JDK1.7中的Epoll BUG，会导致Selector空轮循"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-17T12:51:48.000Z"}],["meta",{"property":"article:author","content":"Amayakite"}],["meta",{"property":"article:tag","content":"Netty"}],["meta",{"property":"article:published_time","content":"2022-05-11T14:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-17T12:51:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"02-Netty入门\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-11T14:17:07.000Z\\",\\"dateModified\\":\\"2023-06-17T12:51:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Amayakite\\",\\"url\\":\\"https://github.com/Amayakite\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"Reactor模型说明","slug":"reactor模型说明","link":"#reactor模型说明","children":[]},{"level":2,"title":"Netty模型说明","slug":"netty模型说明","link":"#netty模型说明","children":[]},{"level":2,"title":"Netty快速入门案例-TCP服务","slug":"netty快速入门案例-tcp服务","link":"#netty快速入门案例-tcp服务","children":[]},{"level":2,"title":"TaskQueue自定义任务","slug":"taskqueue自定义任务","link":"#taskqueue自定义任务","children":[{"level":3,"title":"自定义普通任务","slug":"自定义普通任务","link":"#自定义普通任务","children":[]},{"level":3,"title":"自定义定时任务","slug":"自定义定时任务","link":"#自定义定时任务","children":[]},{"level":3,"title":"非当前Reactor线程调用Channel方法","slug":"非当前reactor线程调用channel方法","link":"#非当前reactor线程调用channel方法","children":[]}]},{"level":2,"title":"异步模型-Futrue-Listener机制","slug":"异步模型-futrue-listener机制","link":"#异步模型-futrue-listener机制","children":[]},{"level":2,"title":"Netty实例-Http服务","slug":"netty实例-http服务","link":"#netty实例-http服务","children":[]},{"level":2,"title":"Netty实例-群聊私聊TCP带心跳","slug":"netty实例-群聊私聊tcp带心跳","link":"#netty实例-群聊私聊tcp带心跳","children":[{"level":3,"title":"ServerMain","slug":"servermain","link":"#servermain","children":[]},{"level":3,"title":"ServerIdleStatusHandle","slug":"serveridlestatushandle","link":"#serveridlestatushandle","children":[]},{"level":3,"title":"ServerHandler","slug":"serverhandler","link":"#serverhandler","children":[]},{"level":3,"title":"ClientMain","slug":"clientmain","link":"#clientmain","children":[]},{"level":3,"title":"ClientHandler","slug":"clienthandler","link":"#clienthandler","children":[]}]},{"level":2,"title":"自定义编解码器","slug":"自定义编解码器","link":"#自定义编解码器","children":[]},{"level":2,"title":"自定义编码器-编码解码在同一个类中","slug":"自定义编码器-编码解码在同一个类中","link":"#自定义编码器-编码解码在同一个类中","children":[]},{"level":2,"title":"TCP的粘包","slug":"tcp的粘包","link":"#tcp的粘包","children":[]},{"level":2,"title":"粘包的解决方案","slug":"粘包的解决方案","link":"#粘包的解决方案","children":[]}],"git":{"createdTime":1687006308000,"updatedTime":1687006308000,"contributors":[{"name":"Amayakite","email":"amayakite@qq.com","commits":1}]},"readingTime":{"minutes":24.39,"words":7318},"filePathRelative":"JavaLang/Netty/02-Netty入门.md","localizedDate":"2022年5月11日","excerpt":"<h2> 概述</h2>\\n<p>首先来看看原生NIO中存在的一些问题</p>\\n<blockquote>\\n<ol>\\n<li>NIO的类库和API比较复杂（虽然说Netty也差不多），使用麻烦，需要数量掌握Selector、ServerSocketChannel、ByteBuffer等</li>\\n<li>需要具备其他的额外技能：Java多线程、因为NIO编程涉及到Reactor模式，必须得对多线程和网络编程非常熟悉，才能写出高质量的NIO程序</li>\\n<li>开发工作量和难度都非常大，例如客户端面临断连重连，网络闪断，半包读写，失败缓存，网络拥堵和异常流的处理等等</li>\\n<li>JAVA在NIO还是有一些BUG的，例如著名的JDK1.7中的Epoll BUG，会导致Selector空轮循</li>\\n</ol>\\n</blockquote>","autoDesc":true}');export{e as data};
