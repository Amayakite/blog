const e=JSON.parse('{"key":"v-23c3c992","path":"/JavaLang/JavaEE/03-Servlet.html","title":"03-Servle","lang":"zh-CN","frontmatter":{"title":"03-Servle","date":"2021-12-02T17:26:20.000Z","category":"JavaWeb","tag":["Java","JavaWeb"],"description":"Servlet简介 Servlet是Sun公司开发动态web的一门技术 Sun在这些API中提供了一个接口，接口名为：Servlet 也就是说，这玩意是一个接口，所以我们实际使用过程中可以知道 可以自己实现这个接口 编写一个类，实现Servlet接口 把编写好的Java类部署到服务器中 所用的现成的API都是实现了这个接口 有点绕的一句话：实现了Servlet接口的Java程序，叫做Servlet","head":[["meta",{"property":"og:url","content":"http://www.amayakite.github.io/JavaLang/JavaEE/03-Servlet.html"}],["meta",{"property":"og:site_name","content":"Amayakite Blogs"}],["meta",{"property":"og:title","content":"03-Servle"}],["meta",{"property":"og:description","content":"Servlet简介 Servlet是Sun公司开发动态web的一门技术 Sun在这些API中提供了一个接口，接口名为：Servlet 也就是说，这玩意是一个接口，所以我们实际使用过程中可以知道 可以自己实现这个接口 编写一个类，实现Servlet接口 把编写好的Java类部署到服务器中 所用的现成的API都是实现了这个接口 有点绕的一句话：实现了Servlet接口的Java程序，叫做Servlet"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-17T15:14:40.000Z"}],["meta",{"property":"article:author","content":"Amayakite"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JavaWeb"}],["meta",{"property":"article:published_time","content":"2021-12-02T17:26:20.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-17T15:14:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"03-Servle\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-12-02T17:26:20.000Z\\",\\"dateModified\\":\\"2023-06-17T15:14:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Amayakite\\",\\"url\\":\\"https://github.com/Amayakite\\"}]}"]]},"headers":[{"level":2,"title":"Servlet简介","slug":"servlet简介","link":"#servlet简介","children":[{"level":3,"title":"开始学习前的准备工作","slug":"开始学习前的准备工作","link":"#开始学习前的准备工作","children":[]},{"level":3,"title":"扩展-Maven父子工程的理解","slug":"扩展-maven父子工程的理解","link":"#扩展-maven父子工程的理解","children":[]}]},{"level":2,"title":"HttpServlet源码分析","slug":"httpservlet源码分析","link":"#httpservlet源码分析","children":[{"level":3,"title":"配置Servlet的映射(Router)","slug":"配置servlet的映射-router","link":"#配置servlet的映射-router","children":[]}]},{"level":2,"title":"Servlet访问流程详解（未涉及tomcat底层）","slug":"servlet访问流程详解-未涉及tomcat底层","link":"#servlet访问流程详解-未涉及tomcat底层","children":[]},{"level":2,"title":"web.xml中Servlet-mapping配置项可以兼容的地方","slug":"web-xml中servlet-mapping配置项可以兼容的地方","link":"#web-xml中servlet-mapping配置项可以兼容的地方","children":[{"level":3,"title":"单个Servlet绑定单个Servlet-mapping","slug":"单个servlet绑定单个servlet-mapping","link":"#单个servlet绑定单个servlet-mapping","children":[]},{"level":3,"title":"单个Servlet绑定多个Servlet-mapping","slug":"单个servlet绑定多个servlet-mapping","link":"#单个servlet绑定多个servlet-mapping","children":[]},{"level":3,"title":"单个Servlet绑定某个字段下的所有路径","slug":"单个servlet绑定某个字段下的所有路径","link":"#单个servlet绑定某个字段下的所有路径","children":[]},{"level":3,"title":"覆盖所有页面","slug":"覆盖所有页面","link":"#覆盖所有页面","children":[]},{"level":3,"title":"自定义后缀","slug":"自定义后缀","link":"#自定义后缀","children":[]},{"level":3,"title":"Mapping的优先级问题","slug":"mapping的优先级问题","link":"#mapping的优先级问题","children":[]}]},{"level":2,"title":"Servlet的生命周期","slug":"servlet的生命周期","link":"#servlet的生命周期","children":[]},{"level":2,"title":"正式开始Servlet","slug":"正式开始servlet","link":"#正式开始servlet","children":[]},{"level":2,"title":"ServletContext","slug":"servletcontext","link":"#servletcontext","children":[{"level":3,"title":"域对象介绍","slug":"域对象介绍","link":"#域对象介绍","children":[]}]},{"level":2,"title":"ServletContext中常用的方法","slug":"servletcontext中常用的方法","link":"#servletcontext中常用的方法","children":[{"level":3,"title":"读写共享参数","slug":"读写共享参数","link":"#读写共享参数","children":[]},{"level":3,"title":"读取全局配置参数（web.xml中的内容）","slug":"读取全局配置参数-web-xml中的内容","link":"#读取全局配置参数-web-xml中的内容","children":[]},{"level":3,"title":"使用ServletContext完成请求转发（不是重定向）","slug":"使用servletcontext完成请求转发-不是重定向","link":"#使用servletcontext完成请求转发-不是重定向","children":[]},{"level":3,"title":"使用ServletContext搜索当前工程目录下面的资源文件(XML/Properties)","slug":"使用servletcontext搜索当前工程目录下面的资源文件-xml-properties","link":"#使用servletcontext搜索当前工程目录下面的资源文件-xml-properties","children":[]}]},{"level":2,"title":"使用注解的方式绕重复在xml中写内容来注册Servlet","slug":"使用注解的方式绕重复在xml中写内容来注册servlet","link":"#使用注解的方式绕重复在xml中写内容来注册servlet","children":[{"level":3,"title":"@WebServlet注解","slug":"webservlet注解","link":"#webservlet注解","children":[]},{"level":3,"title":"urlPatterns","slug":"urlpatterns","link":"#urlpatterns","children":[]},{"level":3,"title":"缺省-关于静态文件和404 Not Found界面的处理方式","slug":"缺省-关于静态文件和404-not-found界面的处理方式","link":"#缺省-关于静态文件和404-not-found界面的处理方式","children":[]}]}],"git":{"createdTime":1687006308000,"updatedTime":1687014880000,"contributors":[{"name":"Amayakite","email":"amayakite@qq.com","commits":2}]},"readingTime":{"minutes":34.78,"words":10435},"filePathRelative":"JavaLang/JavaEE/03-Servlet.md","localizedDate":"2021年12月2日","excerpt":"<h2> Servlet简介</h2>\\n<ul>\\n<li>Servlet是Sun公司开发动态web的一门技术</li>\\n<li>Sun在这些API中提供了一个接口，接口名为：<code>Servlet</code></li>\\n</ul>\\n<p>也就是说，这玩意是一个接口，所以我们实际使用过程中可以知道</p>\\n<ul>\\n<li>可以自己实现这个接口\\n<ul>\\n<li>编写一个类，实现Servlet接口</li>\\n<li>把编写好的Java类部署到服务器中</li>\\n</ul>\\n</li>\\n<li><strong>所用的现成的API都是实现了这个接口</strong></li>\\n</ul>\\n<p>有点绕的一句话：<code>实现了Servlet接口的Java程序，叫做Servlet</code></p>","autoDesc":true}');export{e as data};
