import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as e,e as t}from"./app-2d4b26c1.js";const l="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220104135247204.png",u="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220104135849226.png",r="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220104135935543.png",d="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220104140125703.png",k="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220104140651563.png",v="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220104140957112.png",m="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220104141127106.png",g="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220104141254358.png",b="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220104141347479.png",h="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220104141451985.png",f="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105172000909.png",y="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105172204690.png",x="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105172455341.png",w="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105173504806.png",q="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105173841671.png",z="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105174336750.png",_="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105175039734.png",S="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105175532838.png",I="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105175919012.png",C="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105180142406.png",Z="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105182319121.png",E="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105182628957.png",j="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105181725562.png",T="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105205311046.png",L="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105210326254.png",O="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105210333567.png",K="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105211008352.png",N="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105211450928.png",P="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220105221305440.png",A="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220106135112076.png",D="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220106151516438.png",M="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220106151611757.png",R="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220106142132003.png",V="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220106144121169.png",B="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220106153010252.png",U="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220106153129196.png",F="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220106155808653.png",W="/images/SpringCloud/03-Zookeeper服务注册与发现/image-20220106155820991.png",J={},Y=t('<h2 id="关于eureka停止更新" tabindex="-1"><a class="header-anchor" href="#关于eureka停止更新" aria-hidden="true">#</a> 关于Eureka停止更新</h2><p>我们之前的1.x是一个长期维护的版本，但非常遗憾的是Eureka的2.x已经是停止更新了</p><p>所以这玩意目前来说不推荐使用</p><p>所以SpringCloud整合了Zookeeper来替换Eureka</p><p>要用这个玩意，我们得先去学下Zookeeper</p><figure><img src="'+l+'" alt="image-20220104135247204" tabindex="0" loading="lazy"><figcaption>image-20220104135247204</figcaption></figure><p>好！又一个中间件</p><h2 id="zookeeper概述" tabindex="-1"><a class="header-anchor" href="#zookeeper概述" aria-hidden="true">#</a> Zookeeper概述</h2><p>开源的分布式的，为分布式框架提供协调服务的Apache项目</p><p>Zookeeper从设计模式角度来理解：是一个基于观察者模式设计的分布式服务管理框架，它负责存储和管理大家都关心的数据，然后接受观察者的注册</p><p>一旦这些数据的状态发生变化，Zookeeper就将负责通知已经在Zookeeper上注册的哪些观察者作出相应的反应</p><figure><img src="'+u+'" alt="image-20220104135849226" tabindex="0" loading="lazy"><figcaption>image-20220104135849226</figcaption></figure><h3 id="zookeeper的特点" tabindex="-1"><a class="header-anchor" href="#zookeeper的特点" aria-hidden="true">#</a> Zookeeper的特点</h3><figure><img src="'+r+'" alt="image-20220104135935543" tabindex="0" loading="lazy"><figcaption>image-20220104135935543</figcaption></figure><ol><li>Zookeeper是一个领导者（Leader），多个跟随者（Follower）组成的集群</li><li>集群之中只要有<strong>半数以上</strong>的节点存活，Zookeeper集群就能正常服务，所以Zookeeper适合安装<strong>奇数</strong>台服务器<br><img src="'+d+'" alt="image-20220104140125703" loading="lazy"></li><li>全局数据一致：每个server保存一份相同的数据副本，Client无论连接到哪个Server，数据都是一致的</li><li>更新请求执行顺序：来自同一个Client的更新请求按其发送顺序依次执行</li><li>数据更新原子性：一次数据更新要么成功，要么失败</li><li>实时性：在一定的时间范围内，Client能读取到最新数据</li></ol><h3 id="zookeeper的数据结构" tabindex="-1"><a class="header-anchor" href="#zookeeper的数据结构" aria-hidden="true">#</a> Zookeeper的数据结构</h3><p>它的数据结构和<strong>Unix文件系统很类似</strong>，整体上可以看做是一棵树，每个节点成称作一个ZNode，每一个ZNode默认能够存储<strong>1MB</strong>的数据，每个ZNode都可以通过其路径唯一标识</p><figure><img src="'+k+'" alt="image-20220104140651563" tabindex="0" loading="lazy"><figcaption>image-20220104140651563</figcaption></figure><h3 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景" aria-hidden="true">#</a> 应用场景</h3><blockquote><p>提供的服务：统一命名服务，统一配置管理，统一集群管理，服务器节点动态上下线，软负载均衡等</p></blockquote><ul><li>统一命名服务，就类似于Nginx</li></ul><figure><img src="'+v+'" alt="image-20220104140957112" tabindex="0" loading="lazy"><figcaption>image-20220104140957112</figcaption></figure><ul><li>统一配置管理</li></ul><figure><img src="'+m+'" alt="image-20220104141127106" tabindex="0" loading="lazy"><figcaption>image-20220104141127106</figcaption></figure><ul><li>统一集群管理</li></ul><figure><img src="'+g+'" alt="image-20220104141254358" tabindex="0" loading="lazy"><figcaption>image-20220104141254358</figcaption></figure><ul><li>服务器的动态上下线</li></ul><figure><img src="'+b+'" alt="image-20220104141347479" tabindex="0" loading="lazy"><figcaption>image-20220104141347479</figcaption></figure><ul><li>软负载均衡</li></ul><figure><img src="'+h+'" alt="image-20220104141451985" tabindex="0" loading="lazy"><figcaption>image-20220104141451985</figcaption></figure><h2 id="zookeeper的下载和安装" tabindex="-1"><a class="header-anchor" href="#zookeeper的下载和安装" aria-hidden="true">#</a> Zookeeper的下载和安装</h2>',31),H={href:"https://zookeeper.apache.org/releases.html",target:"_blank",rel:"noopener noreferrer"},Q=n("p",null,"一般来说不会用最新的…",-1),X=n("p",null,"比较多人用的是3.5.7（企业当中）",-1),G=n("p",null,"但是我懒，所以选择目前能看得到3.5.x内最新的3.5.9了，应该效果是一样的",-1),$=n("h3",{id:"基本的linux下载安装操作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#基本的linux下载安装操作","aria-hidden":"true"},"#"),s(" 基本的Linux下载安装操作")],-1),nn={href:"https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.5.9/apache-zookeeper-3.5.9-bin.tar.gz",target:"_blank",rel:"noopener noreferrer"},sn=t(`<p>linux</p><p>PS：下载速度百分之九十会比较慢 建议是现在windows上面下载好了COPY过去</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://dlcdn.apache.org/zookeeper/zookeeper-3.5.9/apache-zookeeper-3.5.9-bin.tar.gz <span class="token parameter variable">-O</span> <span class="token string">&quot;zookeeper.tar.gz&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后安装前需要确保服务器上有JDK（自行安装）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zvxf</span> zookeeper.tar.gz
<span class="token comment"># 如果要指定解压目录的话 加一个 -C /xxx/xxx</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后自行mv重名名下解压后的目录名称</p><p>之后可以看到熟悉的结构</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>.
├── bin
├── conf
├── docs
│   ├── apidocs
│   │   ├── zookeeper-jute
│   │   │   └── org
│   │   │       └── apache
│   │   │           ├── jute
│   │   │           │   ├── class-use
│   │   │           │   └── compiler
│   │   │           │       ├── class-use
│   │   │           │       └── generated
│   │   │           │           └── class-use
│   │   │           └── zookeeper
│   │   │               ├── data
│   │   │               │   └── class-use
│   │   │               ├── proto
│   │   │               │   └── class-use
│   │   │               ├── server
│   │   │               │   ├── persistence
│   │   │               │   │   └── class-use
│   │   │               │   └── quorum
│   │   │               │       └── class-use
│   │   │               └── txn
│   │   │                   └── class-use
│   │   └── zookeeper-server
│   │       └── org
│   │           └── apache
│   │               └── zookeeper
│   │                   ├── admin
│   │                   │   └── class-use
│   │                   ├── class-use
│   │                   ├── cli
│   │                   │   └── class-use
│   │                   ├── client
│   │                   │   └── class-use
│   │                   ├── common
│   │                   │   └── class-use
│   │                   ├── jmx
│   │                   │   └── class-use
│   │                   ├── server
│   │                   │   ├── admin
│   │                   │   │   └── class-use
│   │                   │   ├── auth
│   │                   │   │   └── class-use
│   │                   │   ├── class-use
│   │                   │   ├── command
│   │                   │   │   └── class-use
│   │                   │   ├── persistence
│   │                   │   │   └── class-use
│   │                   │   ├── quorum
│   │                   │   │   ├── auth
│   │                   │   │   │   └── class-use
│   │                   │   │   ├── class-use
│   │                   │   │   └── flexible
│   │                   │   │       └── class-use
│   │                   │   └── util
│   │                   │       └── class-use
│   │                   ├── util
│   │                   │   └── class-use
│   │                   └── version
│   │                       ├── class-use
│   │                       └── util
│   │                           └── class-use
│   ├── images
│   └── skin
└── lib
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>貌似都是常规操作</p><p>按照常理 我们要先去看下conf</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>conf
├── configuration.xsl
├── log4j.properties
└── zoo_sample.cfg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到有三个文件</p><p>最下面的那个，sample一看就是要去掉的字眼 所以我们重命名<code>mv zoo_sample.cfg zoo.cfg</code></p><p>接下来看看这玩意有什么配置项</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment"># The number of milliseconds of each tick</span>
<span class="token key attr-name">tickTime</span><span class="token punctuation">=</span><span class="token value attr-value">2000</span>
<span class="token comment"># The number of ticks that the initial</span>
<span class="token comment"># synchronization phase can take</span>
<span class="token key attr-name">initLimit</span><span class="token punctuation">=</span><span class="token value attr-value">10</span>
<span class="token comment"># The number of ticks that can pass between</span>
<span class="token comment"># sending a request and getting an acknowledgement</span>
<span class="token key attr-name">syncLimit</span><span class="token punctuation">=</span><span class="token value attr-value">5</span>
<span class="token comment"># the directory where the snapshot is stored.</span>
<span class="token comment"># do not use /tmp for storage, /tmp here is just</span>
<span class="token comment"># example sakes. 这里是不推荐在/tmp目录下存放数据  因为这个文件夹每隔半个月一个月会自动清空一次</span>
<span class="token key attr-name">dataDir</span><span class="token punctuation">=</span><span class="token value attr-value">/tmp/zookeeper</span>
<span class="token comment"># the port at which the clients will connect</span>
<span class="token key attr-name">clientPort</span><span class="token punctuation">=</span><span class="token value attr-value">2181</span>
<span class="token comment"># the maximum number of client connections.</span>
<span class="token comment"># increase this if you need to handle more clients</span>
<span class="token comment">#maxClientCnxns=60</span>
<span class="token comment">#</span>
<span class="token comment"># Be sure to read the maintenance section of the</span>
<span class="token comment"># administrator guide before turning on autopurge.</span>
<span class="token comment">#</span>
<span class="token comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span>
<span class="token comment">#</span>
<span class="token comment"># The number of snapshots to retain in dataDir</span>
<span class="token comment">#autopurge.snapRetainCount=3</span>
<span class="token comment"># Purge task interval in hours</span>
<span class="token comment"># Set to &quot;0&quot; to disable auto purge feature</span>
<span class="token comment">#autopurge.purgeInterval=1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以我们找个顺眼的地方 门 mkdir一个文件夹 然后路径放进去即可</p><p>接着我们看看bin目录下的内容</p>`,19),an=n("div",{class:"language-markdown line-numbers-mode","data-ext":"md"},[n("pre",{md:"",class:"language-markdown"},[n("code",null,`.
├── README.txt
├── zkCleanup.sh
├── zkCli.cmd
├── zkCli.sh
├── zkEnv.cmd
├── zkEnv.sh
├── zkServer.cmd
├── zkServer-initialize.sh
├── zkServer.sh
├── zkTxnLogToolkit.cmd
└── zkTxnLogToolkit.sh
`)]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),en=t(`<p>一看就是这个server来启动</p><p>启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./zkServer.sh start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意 这一步之前需要安装下jps</p><p>ubuntu：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt</span> <span class="token function">install</span> openjdk-11-jdk-headless  <span class="token comment"># version 11.0.13+8-0ubuntu1~20.04, or</span>
<span class="token function">apt</span> <span class="token function">install</span> openjdk-13-jdk-headless  <span class="token comment"># version 13.0.7+5-0ubuntu1~20.04</span>
<span class="token function">apt</span> <span class="token function">install</span> openjdk-16-jdk-headless  <span class="token comment"># version 16.0.1+9-1~20.04</span>
<span class="token function">apt</span> <span class="token function">install</span> openjdk-17-jdk-headless  <span class="token comment"># version 17.0.1+12-1~20.04</span>
<span class="token function">apt</span> <span class="token function">install</span> openjdk-8-jdk-headless   <span class="token comment"># version 8u312-b07-0ubuntu1~20.04</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按照自己在服务器上的jdk版本来安装即可</p><p>接着输入jps就能看到这个服务了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">915962</span> QuorumPeerMain
<span class="token number">916193</span> Jps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>接着启动客户端</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> ./zkCli.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果这里启动失败了的话 看下是不是有进程占用了8080端口 这玩意要8080端口才能执行</p><p>反正之后能进一个console即可 就像是mysql那样，然后可以输入quit退出</p><p>然后还可以通过</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> ./zkServer.sh status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>来查看当前Zookeeper的状态，里面的MODE表示当前的Zookeeper是什么性质 由于我们啥都没做 所以默认是standalone，也就是单一的，非集群的</p><p>然后停止Zookeeper的server也非产简单</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> ./zkServer.sh stop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="zookeeper的相关参数解读" tabindex="-1"><a class="header-anchor" href="#zookeeper的相关参数解读" aria-hidden="true">#</a> Zookeeper的相关参数解读</h3><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment"># Zookeeper和客户端通信的心跳时间，单位毫秒  然后服务端和服务端的心跳时间也是在这配置 </span>
<span class="token key attr-name">tickTime</span><span class="token punctuation">=</span><span class="token value attr-value">2000</span>
<span class="token comment"># 这个是初始化的通讯时限，需要传入int 相当于Zookeeper在启动的时候，initLimit*tickTime毫秒内 对应的为服务端必须与其建立连接 否则Zookeeper就开始了傲娇了 一般这个会调高一点 </span>
<span class="token key attr-name">initLimit</span><span class="token punctuation">=</span><span class="token value attr-value">10</span>
<span class="token comment"># 这个是建立好了通讯之后，Server和我们的微服务之间的通讯时间如果超过syncLimit*tickTime毫秒，server就会认为我们的服务挂了，然后从服务列表中删掉它</span>
<span class="token key attr-name">syncLimit</span><span class="token punctuation">=</span><span class="token value attr-value">5</span>
<span class="token comment"># 保存Zookeeper中的数据的路径，注意 千万不要用/tmp目录 那个目录会被系统定期的删除</span>
<span class="token key attr-name">dataDir</span><span class="token punctuation">=</span><span class="token value attr-value">/www/data</span>
<span class="token comment"># 客户端链接Server的端口，通常情况下不动</span>
<span class="token key attr-name">clientPort</span><span class="token punctuation">=</span><span class="token value attr-value">2181</span>

<span class="token comment"># 下面这些暂时都用不上 不管</span>
<span class="token comment"># the maximum number of client connections.</span>
<span class="token comment"># increase this if you need to handle more clients</span>
<span class="token comment">#maxClientCnxns=60</span>
<span class="token comment">#</span>
<span class="token comment"># Be sure to read the maintenance section of the</span>
<span class="token comment"># administrator guide before turning on autopurge.</span>
<span class="token comment">#</span>
<span class="token comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span>
<span class="token comment">#</span>
<span class="token comment"># The number of snapshots to retain in dataDir</span>
<span class="token comment">#autopurge.snapRetainCount=3</span>
<span class="token comment"># Purge task interval in hours</span>
<span class="token comment"># Set to &quot;0&quot; to disable auto purge feature</span>
<span class="token comment">#autopurge.purgeInterval=1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="集群的安装" tabindex="-1"><a class="header-anchor" href="#集群的安装" aria-hidden="true">#</a> 集群的安装</h2><p>emm由于我既没有学习Hadoop，也没有多台服务器，所以用docker来整了..</p><p>首先你准备好三台服务器 都整上Zookeeper，然后端口啥的自己配置好</p><p>如果你是docker</p>`,24),tn={href:"https://hub.docker.com/_/zookeeper?tab=description",target:"_blank",rel:"noopener noreferrer"},pn=t(`<p>拉包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull zookeeper:3.5.9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置<code>stack.yml</code></p><p>这里说下<code>ZOO_MY_ID</code>:如果是常规部署的话 这玩意应该在指定的<code>data</code>目录下创建一个<code>zkData</code>文件，这个文件里面包含着对应的服务编号，填个数字即可</p><figure><img src="`+f+'" alt="image-20220105172000909" tabindex="0" loading="lazy"><figcaption>image-20220105172000909</figcaption></figure><p>然后ZOO_SERVERS等同于这个</p><figure><img src="'+y+'" alt="image-20220105172204690" tabindex="0" loading="lazy"><figcaption>image-20220105172204690</figcaption></figure><figure><img src="'+x+`" alt="image-20220105172455341" tabindex="0" loading="lazy"><figcaption>image-20220105172455341</figcaption></figure><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.1&#39;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">zoo1</span><span class="token punctuation">:</span>	
    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> zoo1
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 2181<span class="token punctuation">:</span><span class="token number">2181</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">ZOO_MY_ID</span><span class="token punctuation">:</span> <span class="token number">1</span>
      <span class="token key atrule">ZOO_SERVERS</span><span class="token punctuation">:</span> server.1=zoo1<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.2=zoo2<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.3=zoo3<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181

  <span class="token key atrule">zoo2</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> zoo2
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 2182<span class="token punctuation">:</span><span class="token number">2181</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">ZOO_MY_ID</span><span class="token punctuation">:</span> <span class="token number">2</span>
      <span class="token key atrule">ZOO_SERVERS</span><span class="token punctuation">:</span> server.1=zoo1<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.2=zoo2<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.3=zoo3<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181

  <span class="token key atrule">zoo3</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">hostname</span><span class="token punctuation">:</span> zoo3
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> 2183<span class="token punctuation">:</span><span class="token number">2181</span>
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">ZOO_MY_ID</span><span class="token punctuation">:</span> <span class="token number">3</span>
      <span class="token key atrule">ZOO_SERVERS</span><span class="token punctuation">:</span> server.1=zoo1<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.2=zoo2<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181 server.3=zoo3<span class="token punctuation">:</span>2888<span class="token punctuation">:</span>3888;2181
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后运行即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> <span class="token parameter variable">-f</span> stack.yml up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接下来我们可以通过</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./zkServer.sh status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>看看2181的状态</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>/usr/bin/java
ZooKeeper JMX enabled by default
Using config: /home/root/javatest/zookeeper/bin/../conf/zoo.cfg
Client port found: 2181. Client address: localhost. Client SSL: false.
Mode: follower ====&gt; 选举的结果 follower 跟随者
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="zookeeper的选举机制" tabindex="-1"><a class="header-anchor" href="#zookeeper的选举机制" aria-hidden="true">#</a> Zookeeper的选举机制</h2><h3 id="服务器刚刚启动的时候" tabindex="-1"><a class="header-anchor" href="#服务器刚刚启动的时候" aria-hidden="true">#</a> 服务器刚刚启动的时候</h3><p>两句话概括：</p><ul><li>当leader还没有被选举出来的时候，都会依次给自己进行投票直到有半数以上的人通过，权重的话是按照我们之前在myid设定的id为准，id越大，权重越大，将会选举出第一个老大</li><li>当老大选举完成之后，后来的都自动变为小弟</li></ul><figure><img src="`+w+'" alt="image-20220105173504806" tabindex="0" loading="lazy"><figcaption>image-20220105173504806</figcaption></figure><figure><img src="'+q+'" alt="image-20220105173841671" tabindex="0" loading="lazy"><figcaption>image-20220105173841671</figcaption></figure><h3 id="非第一次启动" tabindex="-1"><a class="header-anchor" href="#非第一次启动" aria-hidden="true">#</a> 非第一次启动</h3><p>概括：</p><ul><li>挂掉的时候，任期数量最大的优先，如果一致，则变更为处理用户请求最多服务端优先，如果说相同的话，则在进行服务器的myid判断，最大的胜出</li></ul><figure><img src="'+z+`" alt="image-20220105174336750" tabindex="0" loading="lazy"><figcaption>image-20220105174336750</figcaption></figure><h2 id="客户端命令行操作" tabindex="-1"><a class="header-anchor" href="#客户端命令行操作" aria-hidden="true">#</a> 客户端命令行操作</h2><h3 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法" aria-hidden="true">#</a> 基本语法</h3><p>如果要在启动的时候指定某个服务端，可以：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./zkCli.sh <span class="token parameter variable">-server</span> ip：端口
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+_+`" alt="image-20220105175039734" tabindex="0" loading="lazy"><figcaption>image-20220105175039734</figcaption></figure><p>首先 来看下znode节点数据信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-s</span> /
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zookeeper<span class="token punctuation">]</span>cZxid <span class="token operator">=</span> 0x0
ctime <span class="token operator">=</span> Thu Jan 01 08:00:00 CST <span class="token number">1970</span>
mZxid <span class="token operator">=</span> 0x0
mtime <span class="token operator">=</span> Thu Jan 01 08:00:00 CST <span class="token number">1970</span>
pZxid <span class="token operator">=</span> 0x0
cversion <span class="token operator">=</span> <span class="token parameter variable">-1</span>
dataVersion <span class="token operator">=</span> <span class="token number">0</span>
aclVersion <span class="token operator">=</span> <span class="token number">0</span>
ephemeralOwner <span class="token operator">=</span> 0x0
dataLength <span class="token operator">=</span> <span class="token number">0</span>
numChildren <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+S+'" alt="image-20220105175532838" tabindex="0" loading="lazy"><figcaption>image-20220105175532838</figcaption></figure><figure><img src="'+I+`" alt="image-20220105175919012" tabindex="0" loading="lazy"><figcaption>image-20220105175919012</figcaption></figure><h3 id="节点的基本操作和节点类型" tabindex="-1"><a class="header-anchor" href="#节点的基本操作和节点类型" aria-hidden="true">#</a> 节点的基本操作和节点类型</h3><p>要创建一个节点非常简单</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建永久节点</span>
create /mydoc <span class="token string">&quot;张飞&quot;</span>
create /mydoc/shuguo <span class="token string">&quot;刘备&quot;</span>
<span class="token comment"># 然后查看节点</span>
<span class="token function">ls</span> /
<span class="token comment"># 结果：[mydoc, zookeeper]</span>
<span class="token function">ls</span> /mydoc
<span class="token comment"># 结果：</span>
<span class="token punctuation">[</span>shuguo<span class="token punctuation">]</span>
<span class="token comment">#--------</span>
<span class="token comment"># 获取指定的值</span>
get <span class="token parameter variable">-s</span> /mydoc
<span class="token comment"># 结果：</span>
张飞
cZxid <span class="token operator">=</span> 0x200000008
ctime <span class="token operator">=</span> Wed Jan 05 <span class="token number">18</span>:02:19 CST <span class="token number">2022</span>
mZxid <span class="token operator">=</span> 0x200000008
mtime <span class="token operator">=</span> Wed Jan 05 <span class="token number">18</span>:02:19 CST <span class="token number">2022</span>
pZxid <span class="token operator">=</span> 0x200000009
cversion <span class="token operator">=</span> <span class="token number">1</span>
dataVersion <span class="token operator">=</span> <span class="token number">0</span>
aclVersion <span class="token operator">=</span> <span class="token number">0</span>
ephemeralOwner <span class="token operator">=</span> 0x0
dataLength <span class="token operator">=</span> <span class="token number">6</span>
numChildren <span class="token operator">=</span> <span class="token number">1</span>

<span class="token comment"># 接下来看看shuguo 的信息</span>
get <span class="token parameter variable">-s</span> /mydoc/shuguo
<span class="token comment"># 结果：</span>
刘备
cZxid <span class="token operator">=</span> 0x200000009
ctime <span class="token operator">=</span> Wed Jan 05 <span class="token number">18</span>:03:06 CST <span class="token number">2022</span>
mZxid <span class="token operator">=</span> 0x200000009
mtime <span class="token operator">=</span> Wed Jan 05 <span class="token number">18</span>:03:06 CST <span class="token number">2022</span>
pZxid <span class="token operator">=</span> 0x200000009
cversion <span class="token operator">=</span> <span class="token number">0</span>
dataVersion <span class="token operator">=</span> <span class="token number">0</span>
aclVersion <span class="token operator">=</span> <span class="token number">0</span>
ephemeralOwner <span class="token operator">=</span> 0x0
dataLength <span class="token operator">=</span> <span class="token number">6</span>
numChildren <span class="token operator">=</span> <span class="token number">0</span>

<span class="token comment">#---------------</span>
<span class="token comment"># 创建临时节点：</span>
create <span class="token parameter variable">-s</span> /mydoc/weiguo <span class="token string">&quot;曹操&quot;</span>
<span class="token comment"># 结果：Created /mydoc/weiguo0000000001</span>
<span class="token comment"># 这时候如果退出客户端  然后再连接上的话  get -s /mydoc/weiguo 将获取不到任何信息</span>
<span class="token comment"># 临时节点就相当于JavaEE的session会话域一样 一旦结束会话 就莫得了</span>

<span class="token comment"># 修改节点的值</span>
<span class="token builtin class-name">set</span> /mydoc/shuguo <span class="token string">&quot;胡桃&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+C+`" alt="image-20220105180142406" tabindex="0" loading="lazy"><figcaption>image-20220105180142406</figcaption></figure><h3 id="监听器" tabindex="-1"><a class="header-anchor" href="#监听器" aria-hidden="true">#</a> 监听器</h3><p>例如我们想要实时监听一个节点的变化</p><p>客户端1</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>get <span class="token parameter variable">-w</span> /mydoc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>客户端2</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> /mydoc <span class="token string">&quot;杨贵妃&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+Z+`" alt="image-20220105182319121" tabindex="0" loading="lazy"><figcaption>image-20220105182319121</figcaption></figure><p>如果想要监听节点node值的变化</p><p>客户端1</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span> <span class="token parameter variable">-w</span> /mydoc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>客户端2 创建节点</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>create /mydoc/abc <span class="token string">&quot;aaa&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+E+'" alt="image-20220105182628957" tabindex="0" loading="lazy"><figcaption>image-20220105182628957</figcaption></figure><figure><img src="'+j+`" alt="image-20220105181725562" tabindex="0" loading="lazy"><figcaption>image-20220105181725562</figcaption></figure><h3 id="节点的删除以及查看" tabindex="-1"><a class="header-anchor" href="#节点的删除以及查看" aria-hidden="true">#</a> 节点的删除以及查看</h3><p>删除一个节点</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>delete /mydoc/aaa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>递归删除节点(删除本身以及所有子节点)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>deleteall /mydoc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看某个节点的状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">stat</span> /mydo
 <span class="token comment"># 结果：</span>
cZxid <span class="token operator">=</span> 0x200000008
ctime <span class="token operator">=</span> Wed Jan 05 <span class="token number">18</span>:02:19 CST <span class="token number">2022</span>
mZxid <span class="token operator">=</span> 0x200000013
mtime <span class="token operator">=</span> Wed Jan 05 <span class="token number">18</span>:23:43 CST <span class="token number">2022</span>
pZxid <span class="token operator">=</span> 0x200000014
cversion <span class="token operator">=</span> <span class="token number">4</span>
dataVersion <span class="token operator">=</span> <span class="token number">1</span>
aclVersion <span class="token operator">=</span> <span class="token number">0</span>
ephemeralOwner <span class="token operator">=</span> 0x0
dataLength <span class="token operator">=</span> <span class="token number">2</span>
numChildren <span class="token operator">=</span> <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="java-基本api操作" tabindex="-1"><a class="header-anchor" href="#java-基本api操作" aria-hidden="true">#</a> Java-基本Api操作</h2><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.zookeeper/zookeeper --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建数据" tabindex="-1"><a class="header-anchor" href="#创建数据" aria-hidden="true">#</a> 创建数据</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> zkClient <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ZooKeeper</span> zooKeeper<span class="token punctuation">;</span>

<span class="token comment">//    static {</span>
<span class="token comment">//        try {</span>
<span class="token comment">//            zooKeeper = new ZooKeeper(&quot;aaa.com:2181,aaa.com:2182,aaa.com:2183&quot;, 2000, new Watcher() {</span>
<span class="token comment">//                @Override</span>
<span class="token comment">//                public void process(WatchedEvent watchedEvent) {</span>
<span class="token comment">//                }</span>
<span class="token comment">//            });</span>
<span class="token comment">//        } catch (IOException e) {</span>
<span class="token comment">//            throw new RuntimeException(e);</span>
<span class="token comment">//        }</span>
<span class="token comment">//    }</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>
<span class="token comment">//        这里是连接 也可以丢到上面静态代码块执行</span>
        zooKeeper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZooKeeper</span><span class="token punctuation">(</span><span class="token string">&quot;aaa.com:2181,aaa.com:2182,aaa.com:2183&quot;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">WatchedEvent</span> watchedEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>zooKeeper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 这里如果创建失败会抛出异常</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> zooKeeper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
            <span class="token string">&quot;/myapp&quot;</span><span class="token punctuation">,</span> 
            <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 作用域：谁可以获取这个数据 这里是所有人</span>
            <span class="token class-name">ZooDefs<span class="token punctuation">.</span>Ids</span><span class="token punctuation">.</span><span class="token constant">OPEN_ACL_UNSAFE</span><span class="token punctuation">,</span>
            <span class="token comment">// 是否持久化 这里是持久化存储</span>
            <span class="token class-name">CreateMode</span><span class="token punctuation">.</span><span class="token constant">PERSISTENT</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果：</p><figure><img src="`+T+`" alt="image-20220105205311046" tabindex="0" loading="lazy"><figcaption>image-20220105205311046</figcaption></figure><p>成功存储</p><h3 id="监听节点变化" tabindex="-1"><a class="header-anchor" href="#监听节点变化" aria-hidden="true">#</a> 监听节点变化</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>    
    zooKeeper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZooKeeper</span><span class="token punctuation">(</span><span class="token string">&quot;你的ip和端口&quot;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">WatchedEvent</span> watchedEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 这里相当于起了一个那啥守护线程来监听</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> children<span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// 这里是获取节点的数据，第二个参数是是否监听 等价于getxxx</span>
                <span class="token comment">// 删除之类的api 见名知意 delete等就是</span>
                children <span class="token operator">=</span> zooKeeper<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">KeeperException</span> <span class="token operator">|</span> <span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 让主线程挂着</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后创建一个</p><figure><img src="`+L+'" alt="image-20220105210326254" tabindex="0" loading="lazy"><figcaption>image-20220105210326254</figcaption></figure><p>结果：</p><figure><img src="'+O+`" alt="image-20220105210333567" tabindex="0" loading="lazy"><figcaption>image-20220105210333567</figcaption></figure><h3 id="判断节点是否存在" tabindex="-1"><a class="header-anchor" href="#判断节点是否存在" aria-hidden="true">#</a> 判断节点是否存在</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>public static void main<span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> throws IOException, InterruptedException, KeeperException <span class="token punctuation">{</span>
Stat exists <span class="token operator">=</span> zooKeeper.exists<span class="token punctuation">(</span><span class="token string">&quot;/adadad&quot;</span>, <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System.out.println<span class="token punctuation">(</span>exists <span class="token operator">==</span> null ? <span class="token string">&quot;不存在&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;存在&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="写入原理" tabindex="-1"><a class="header-anchor" href="#写入原理" aria-hidden="true">#</a> 写入原理</h3><figure><img src="`+K+'" alt="image-20220105211008352" tabindex="0" loading="lazy"><figcaption>image-20220105211008352</figcaption></figure><p>非常简单，或者说和那啥elasticsearch差不多</p><ol><li>发送写操作给服务端</li><li>服务端（从机）接收到数据之后，转发给主机</li><li>主机（Leader）写入完毕之后通知从一半机写入</li><li>从机写入完毕后，通知主机，一旦通知的从机写入完毕了，就反馈给客户端</li><li>反馈给客户端写入完毕之后，再通知剩余的从机</li><li>就跟elasticsearch基本差不多</li></ol><h2 id="服务动态上下线" tabindex="-1"><a class="header-anchor" href="#服务动态上下线" aria-hidden="true">#</a> 服务动态上下线</h2><figure><img src="'+N+`" alt="image-20220105211450928" tabindex="0" loading="lazy"><figcaption>image-20220105211450928</figcaption></figure><p>也就是监听业务功能上下线</p><p>这不就非常简单了嘛</p><p><strong>我们启动一个服务的时候，自动和Zookeeper建立一个连接，然后注册一个临时的节点</strong></p><p><strong>然后我们的服务挂了，那个节点就会自动删除</strong></p><p>也就是上面那个服务端并非是Zookeeper的服务器，而是我们的服务的服务器（例如订单查询等）</p><p>然后所有进程，都监听我们制定的一个节点即可。。</p><p>假设这个是服务端：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>
    <span class="token comment">//      1.  获取zk连接</span>
    zooKeeper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZooKeeper</span><span class="token punctuation">(</span>connectString<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">WatchedEvent</span> watchedEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Stat</span> exists <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                exists <span class="token operator">=</span> zooKeeper<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token string">&quot;/server&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">KeeperException</span> <span class="token operator">|</span> <span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>exists <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//            如果没有server节点，则创建</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    zooKeeper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;/server&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;service&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ZooDefs<span class="token punctuation">.</span>Ids</span><span class="token punctuation">.</span><span class="token constant">OPEN_ACL_UNSAFE</span><span class="token punctuation">,</span> <span class="token class-name">CreateMode</span><span class="token punctuation">.</span><span class="token constant">PERSISTENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">KeeperException</span> <span class="token operator">|</span> <span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//        2. 注册服务器到zk集群</span>
    <span class="token comment">//        通过逗号分隔 成数组 这里我加装我是一个服务</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> connectString<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> s <span class="token operator">:</span> split<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//            										注册临时节点</span>
        zooKeeper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;/server/&quot;</span> <span class="token operator">+</span> s<span class="token punctuation">,</span> s<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ZooDefs<span class="token punctuation">.</span>Ids</span><span class="token punctuation">.</span><span class="token constant">OPEN_ACL_UNSAFE</span><span class="token punctuation">,</span> <span class="token class-name">CreateMode</span><span class="token punctuation">.</span><span class="token constant">EPHEMERAL_SEQUENTIAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">//        延迟</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另一个监听端我就不写了，代码大概如下，放在process方法内即可</p><p>监听端：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//                轮循的获取到节点并打印</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> strings <span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    strings <span class="token operator">=</span> zooKeeper<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token string">&quot;/server&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>strings<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">KeeperException</span> <span class="token operator">|</span> <span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们开下第二个监听端 再开第一个服务端，然后把服务端踢掉，你就能在这个监听端内看到 变动了。。</p><p>草，难怪这玩意的源代码就9mb，原来是干这功能的</p><h2 id="zookeeper分布式锁" tabindex="-1"><a class="header-anchor" href="#zookeeper分布式锁" aria-hidden="true">#</a> Zookeeper分布式锁</h2><p>比如说进程1在使用某项资源的时候，会先去获得锁，进程1获得锁后会对该资源保持独占，这样其他进程就无法访问该资源，进程1用完之后就会释放锁，让其他进程来获取锁，那么通过这个锁机制，我们就完成了分布式系统中多个进程能够有序的访问该临界资源，我们把这个分布式环境下的锁叫分布式锁</p><figure><img src="`+P+`" alt="image-20220105221305440" tabindex="0" loading="lazy"><figcaption>image-20220105221305440</figcaption></figure><p>实现用到了juc的锁。。这个之后再了解了，反正 它的await就相当于等待锁释放</p><p>然后他的countDown相当于释放锁</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookpeerLock</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> connectString <span class="token operator">=</span> <span class="token string">&quot;你的Zookeeper的ip和端口&quot;</span><span class="token punctuation">;</span>

    <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CountDownLatch</span> waitLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ZooKeeper</span> zooKeeper<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> waitPath<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> myNode<span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token class-name">ZookpeerLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>
        zooKeeper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZooKeeper</span><span class="token punctuation">(</span>connectString<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">WatchedEvent</span> watchedEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//                watchedEvent 会监听说有事件</span>
<span class="token comment">//                如果连接上 释放连接锁</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>watchedEvent<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Event<span class="token punctuation">.</span>KeeperState<span class="token punctuation">.</span>SyncConnected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
<span class="token comment">//                wait锁释放 这里是获取事件类型 如果是NodeChildrenChanged 删除事件 并且 删除的内容为我们指定的内容的话</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>watchedEvent<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Event<span class="token punctuation">.</span>EventType<span class="token punctuation">.</span>NodeDeleted</span> <span class="token operator">&amp;&amp;</span> watchedEvent<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>waitPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    waitLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        等待zk正常连接后，往下走程序</span>
        countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        判断根节点是否存在  实际开发中这一步应该交给静态代码块来完成</span>
<span class="token comment">//        Stat exists = zooKeeper.exists(&quot;/locks&quot;, false);</span>
<span class="token comment">//        if (exists == null) {</span>
<span class="token comment">//            zooKeeper.create(&quot;/locks&quot;, &quot;&quot;.getBytes(), ZooDefs.Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);</span>
<span class="token comment">//        }</span>


    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 加锁
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">zkLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>
<span class="token comment">//        1 创建临时带序号的节点</span>
        myNode <span class="token operator">=</span> zooKeeper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&quot;/locks/seq-&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">ZooDefs<span class="token punctuation">.</span>Ids</span><span class="token punctuation">.</span><span class="token constant">OPEN_ACL_UNSAFE</span><span class="token punctuation">,</span> <span class="token class-name">CreateMode</span><span class="token punctuation">.</span><span class="token constant">EPHEMERAL_SEQUENTIAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        2 判断当前的节点是不是最小序号的节点，如果是获取到锁，如果不是，监听序号前一个节点</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> zooKeeper<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token string">&quot;/locks&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;的锁名&quot;</span> <span class="token operator">+</span> myNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        如果只有一个，就直接获取锁，如果有多个节点，需要判断谁最小</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>children<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取到锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token comment">//            排序</span>
            <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            获取节点名称 seq-0000000000001</span>
            <span class="token class-name">String</span> substring <span class="token operator">=</span> myNode<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token string">&quot;/locks/&quot;</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//            通过节点名称获取到该节点在children集合的位置</span>
            <span class="token keyword">int</span> index <span class="token operator">=</span> children<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>substring<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;锁列表&quot;</span> <span class="token operator">+</span> children <span class="token operator">+</span> <span class="token string">&quot;锁的index&quot;</span> <span class="token operator">+</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//           判断</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;数据异常&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取到锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token comment">//                需要监听前一个节点的变化</span>
                waitPath <span class="token operator">=</span> <span class="token string">&quot;/locks/&quot;</span> <span class="token operator">+</span> children<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;前一个节点的变化&quot;</span> <span class="token operator">+</span> waitPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> zooKeeper<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>waitPath<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//                等待监听</span>
                waitLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 解锁
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">zkUnLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>
<span class="token comment">//        删除节点</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>myNode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;释放的锁名&quot;</span> <span class="token operator">+</span> myNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
            zooKeeper<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>myNode<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            myNode <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ZookeeperLockTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">,</span> <span class="token class-name">KeeperException</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ZookpeerLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZookpeerLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    lock<span class="token punctuation">.</span><span class="token function">zkLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;获取到锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;释放锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    lock<span class="token punctuation">.</span><span class="token function">zkUnLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> <span class="token operator">|</span> <span class="token class-name">KeeperException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="curator框架实现分布式锁案例" tabindex="-1"><a class="header-anchor" href="#curator框架实现分布式锁案例" aria-hidden="true">#</a> Curator框架实现分布式锁案例</h3><p>原生的Java Api开发存在问题</p><ol><li>会话连接时异步的，需要自己去处理，比如使用我们刚刚的CountDownLatch</li><li>Watch需要重复注册，不然就不能生效</li><li>开发的复杂性还是比较高的</li><li>不支持多借点的删除和创建，需要自己去递归</li></ol><p>所以就得用上Curator，这是一个专门解决分布式锁的框架</p>`,108),on={href:"https://curator.apache.org",target:"_blank",rel:"noopener noreferrer"},cn=t(`<p>依赖安装</p><p>要三个</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.curator/curator-framework --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>curator-framework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.curator/curator-recipes --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>curator-recipes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.curator/curator-client --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.curator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>curator-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用起来也非常简单</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CuratorLockTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">InterProcessMutex</span> lock1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InterProcessMutex</span><span class="token punctuation">(</span><span class="token function">getCuratorFramework</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/locks&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">InterProcessMutex</span> lock2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InterProcessMutex</span><span class="token punctuation">(</span><span class="token function">getCuratorFramework</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/locks&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                lock1<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot;获取到锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lock1<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot;再次获取到锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lock1<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot;释放锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lock1<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot;再次释放锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                lock2<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot;获取到锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lock2<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot;再次获取到锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lock2<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot;释放锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                lock2<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot;再次释放锁&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">CuratorFramework</span> <span class="token function">getCuratorFramework</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CuratorFramework</span> curatorFramework <span class="token operator">=</span> <span class="token class-name">CuratorFrameworkFactory</span>
                <span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">connectString</span><span class="token punctuation">(</span><span class="token string">&quot;你的Zookeeper的连接池的ip地址，逗号分隔&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">connectionTimeoutMs</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">sessionTimeoutMs</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">retryPolicy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ExponentialBackoffRetry</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        启动客户端</span>
        curatorFramework<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;客户端启动成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> curatorFramework<span class="token punctuation">;</span>


    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><figure><img src="`+A+`" alt="image-20220106135112076" tabindex="0" loading="lazy"><figcaption>image-20220106135112076</figcaption></figure><h2 id="zookeeper应用到我们当前的分布式项目内" tabindex="-1"><a class="header-anchor" href="#zookeeper应用到我们当前的分布式项目内" aria-hidden="true">#</a> Zookeeper应用到我们当前的分布式项目内</h2><h3 id="构建项目-服务提供者" tabindex="-1"><a class="header-anchor" href="#构建项目-服务提供者" aria-hidden="true">#</a> 构建项目-服务提供者</h3><p>我们创建一个项目:<code>cloud-provider-payment8003</code></p><p>接着添加如下依赖 我们这里就省略DAO了</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-zookeeper-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>


    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!--        注意这个玩意 后面非常重要 通常和web一块出现--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写配置文件" tabindex="-1"><a class="header-anchor" href="#编写配置文件" aria-hidden="true">#</a> 编写配置文件</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 更该端口</span>
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8003</span>
<span class="token comment"># 开个debug</span>
<span class="token key atrule">logging.level.com.Project</span><span class="token punctuation">:</span> debug
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token comment">#  应用名称</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>provider<span class="token punctuation">-</span>payment

  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">zookeeper</span><span class="token punctuation">:</span>
      <span class="token comment"># 服务器ip，多个之间用逗号隔开</span>
      <span class="token key atrule">connect-string</span><span class="token punctuation">:</span> zoo1<span class="token punctuation">:</span><span class="token number">2181</span><span class="token punctuation">,</span>zoo2<span class="token punctuation">:</span><span class="token number">2182</span><span class="token punctuation">,</span>zoo3<span class="token punctuation">:</span><span class="token number">2183</span>

<span class="token key atrule">springfox</span><span class="token punctuation">:</span>
  <span class="token key atrule">documentation</span><span class="token punctuation">:</span>
    <span class="token key atrule">swagger-ui</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编写main和controller" tabindex="-1"><a class="header-anchor" href="#编写main和controller" aria-hidden="true">#</a> 编写main和controller</h3><p>main:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CloudProvider8003Application</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">CloudProvider8003Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>controller</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/payment&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PaymentController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${server.port}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> serverPort<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/zk&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">paymentZk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;springcloud with zookeeper: &quot;</span> <span class="token operator">+</span> serverPort <span class="token operator">+</span> <span class="token string">&quot;\\t&quot;</span> <span class="token operator">+</span><span class="token string">&quot;OK!&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行" tabindex="-1"><a class="header-anchor" href="#运行" aria-hidden="true">#</a> 运行</h3><p>启动的时候会出现一个id</p><figure><img src="`+D+`" alt="image-20220106151516438" tabindex="0" loading="lazy"><figcaption>image-20220106151516438</figcaption></figure><p>记住它</p><p>然后我们进入Zookeeper的客户端</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./zkCli.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后看下节点列表，可以发现三个节点</p><figure><img src="`+M+`" alt="image-20220106151611757" tabindex="0" loading="lazy"><figcaption>image-20220106151611757</figcaption></figure><p>services下的节点，就是我们这个服务的服务名</p><p>接着我们get一下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>get <span class="token parameter variable">-s</span> /services/cloud-provider-payment/ea8d6c0d-21c8-4fe6-a1c8-509d33b77ac6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果：</p><p>可以发现，存储的就是我们服务的信息</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cloud-provider-payment&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ea8d6c0d-21c8-4fe6-a1c8-509d33b77ac6&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;DESKTOP-USEHA9I&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">8003</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sslPort&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;payload&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;@class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;org.springframework.cloud.zookeeper.discovery.ZookeeperInstance&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cloud-provider-payment&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cloud-provider-payment&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;metadata&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;instance_status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;UP&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;registrationTimeUTC&quot;</span><span class="token operator">:</span> <span class="token number">1641452934251</span><span class="token punctuation">,</span>
  <span class="token property">&quot;serviceType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;DYNAMIC&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;uriSpec&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;parts&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;scheme&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;variable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;://&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;variable&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;variable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;variable&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;port&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;variable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后你访问之前定义的controller正常的话，表示程序是没有问题的</p><h3 id="可能遇到的问题" tabindex="-1"><a class="header-anchor" href="#可能遇到的问题" aria-hidden="true">#</a> 可能遇到的问题</h3><p>注意 每个版本的这啥依赖都可能不一样 默认会自带一个Zookeeper的依赖</p><figure><img src="`+R+`" alt="image-20220106142132003" tabindex="0" loading="lazy"><figcaption>image-20220106142132003</figcaption></figure><p>这里是3.6.0 发现和我们的版本不符合（我的是…3.7.0，不过没有中断的异常就是了）</p><p>不过原则是<strong>只要不是让程序终端的异常 就不管</strong></p><p>如果你执意要替换的话 一定要将自己导入进来的Zookeeper内的slf4j-log4j12排除</p><p>不然铁定会报错，并且这不是 少日志，这是日志门面Slf4j的日志实现冲突了，springboot已经是默认logback实现了，需要将新导进来的zookeeper依赖中所带的slf4j-log4j12实现给排除掉。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-zookeeper-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--                排除自带的Zookeeper--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!--        添加自己的Zookeeper 注意 这里要把自己的Zookeeper的log4j2剔除，不然会爆冲突
	在新导入的zookeeper的版本jar包里面排除slf4j-log4j12
日志依赖冲突的朋友，mvn dependency:tree检查冲突，排除
--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>zookeeper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.xxxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果说抛出这样的异常</p><figure><img src="`+V+`" alt="image-20220106144121169" tabindex="0" loading="lazy"><figcaption>image-20220106144121169</figcaption></figure><p>修改下host即可</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code>127.0.0.1 zoo1 zoo2 zoo3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code>- 127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183
+ zoo1:2181,zoo2:2182,zoo3:2183
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="它是临时节点还是持久节点" tabindex="-1"><a class="header-anchor" href="#它是临时节点还是持久节点" aria-hidden="true">#</a> 它是临时节点还是持久节点？</h3><p>Zookeeper的节点分为四种</p><ul><li>普通临时节点</li><li>普通持久节点</li><li>带序号的临时节点</li><li>带序号的持久节点</li></ul><p>这里我们的节点并没有带序号，所以两个序号的可以排除</p><p>那么它是临时节点还是持久节点呢？</p><p>所以我们把服务停了再去看看</p><figure><img src="`+B+'" alt="image-20220106153010252" tabindex="0" loading="lazy"><figcaption>image-20220106153010252</figcaption></figure><p>好，是<strong>临时的普通节点</strong></p><p>并且全都是临时节点</p><figure><img src="'+U+`" alt="image-20220106153129196" tabindex="0" loading="lazy"><figcaption>image-20220106153129196</figcaption></figure><p><strong>zookeeper是高端女猎人 ATM没钱了立马就踢了</strong></p><p><strong>zookeeper保证cp，eureka保证ap</strong></p><h3 id="构建服务-消费者" tabindex="-1"><a class="header-anchor" href="#构建服务-消费者" aria-hidden="true">#</a> 构建服务-消费者</h3><p>依赖和8003一样</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-zookeeper-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!--        注意这个玩意 后面非常重要 通常和web一块出现--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>io.springfox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springfox-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h3><p>和8003一样 就是改了个端口和名称</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 更该端口</span>
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8003</span>
<span class="token comment"># 开个debug</span>
<span class="token key atrule">logging.level.com.Project</span><span class="token punctuation">:</span> debug
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token comment">#  应用名称</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> cloud<span class="token punctuation">-</span>provider<span class="token punctuation">-</span>payment

  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">zookeeper</span><span class="token punctuation">:</span>
      <span class="token comment"># 服务器ip，多个之间用逗号隔开</span>
      <span class="token key atrule">connect-string</span><span class="token punctuation">:</span> zoo1<span class="token punctuation">:</span><span class="token number">2181</span><span class="token punctuation">,</span>zoo2<span class="token punctuation">:</span><span class="token number">2182</span><span class="token punctuation">,</span>zoo3<span class="token punctuation">:</span><span class="token number">2183</span>

<span class="token key atrule">springfox</span><span class="token punctuation">:</span>
  <span class="token key atrule">documentation</span><span class="token punctuation">:</span>
    <span class="token key atrule">swagger-ui</span><span class="token punctuation">:</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="main和resttemplate" tabindex="-1"><a class="header-anchor" href="#main和resttemplate" aria-hidden="true">#</a> main和restTemplate</h3><p>main</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CloudConsumerZk80Application</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">CloudConsumerZk80Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>rest:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApplicationContextConfig</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * LoadBalanced这个注解千万不能忘了，这个就是负载均衡的注解
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@ConditionalOnMissingBean</span>
    <span class="token annotation punctuation">@LoadBalanced</span>
    <span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">getRestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="controller" tabindex="-1"><a class="header-anchor" href="#controller" aria-hidden="true">#</a> controller</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderZkController</span> <span class="token punctuation">{</span>
	
    <span class="token comment">// 这里直接写服务名即可</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">INVOKE_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://cloud-provider-payment&quot;</span><span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@Resource</span>
    <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/consumer/payment/zk&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">paymentInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token constant">INVOKE_URL</span> <span class="token operator">+</span> <span class="token string">&quot;/payment/zk&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="启动并测试" tabindex="-1"><a class="header-anchor" href="#启动并测试" aria-hidden="true">#</a> 启动并测试</h3><figure><img src="`+F+'" alt="image-20220106155808653" tabindex="0" loading="lazy"><figcaption>image-20220106155808653</figcaption></figure><p>两个服务都启动</p><p>get 80 zk</p><figure><img src="'+W+'" alt="image-20220106155820991" tabindex="0" loading="lazy"><figcaption>image-20220106155820991</figcaption></figure><h2 id="zookeeper的结束语" tabindex="-1"><a class="header-anchor" href="#zookeeper的结束语" aria-hidden="true">#</a> Zookeeper的结束语</h2><p>这个玩意非常简单</p><p>但是面试官可不这么认为。。。</p>',80),ln={href:"https://www.bilibili.com/video/BV1to4y1C7gw?p=29",target:"_blank",rel:"noopener noreferrer"},un=n("p",null,"不然难搞 md 代码简简单单，原理相当复杂",-1);function rn(dn,kn){const a=o("ExternalLinkIcon");return c(),i("div",null,[Y,n("p",null,[s("官方网站"),n("a",H,[s("https://zookeeper.apache.org/releases.html"),e(a)])]),Q,X,G,$,n("p",null,[n("a",nn,[s("下载链接"),e(a)])]),sn,an,en,n("p",null,[s("看看"),n("a",tn,[s("Dokcer Hub"),e(a)]),s("的操作即可")]),pn,n("p",null,[s("官方文档："),n("a",on,[s("https://curator.apache.org"),e(a)])]),cn,n("p",null,[s("以后有空了要把这个视频"),n("a",ln,[s("https://www.bilibili.com/video/BV1to4y1C7gw?p=29"),e(a)]),s("也看完去")]),un])}const gn=p(J,[["render",rn],["__file","03-Zookeeper服务注册与发现.html.vue"]]);export{gn as default};
