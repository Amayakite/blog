import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as e,e as a}from"./app-2d4b26c1.js";const i="/images/SpringBoot/08-Elasticsearch/1920px-Elasticsearch_logo.svg.png",u="/images/SpringBoot/08-Elasticsearch/image-20211230232211141.png",r="/images/SpringBoot/08-Elasticsearch/image-20211230234912737.png",k="/images/SpringBoot/08-Elasticsearch/image-20211230235657678.png",d="/images/SpringBoot/08-Elasticsearch/image-20211231002653452.png",m="/images/SpringBoot/08-Elasticsearch/image-20211231003023722.png",v="/images/SpringBoot/08-Elasticsearch/image-20211231003232284.png",b="/images/SpringBoot/08-Elasticsearch/image-20211231004006598.png",g="/images/SpringBoot/08-Elasticsearch/image-20211231122351161.png",q="/images/SpringBoot/08-Elasticsearch/image-20211231122952292.png",h="/images/SpringBoot/08-Elasticsearch/image-20211231123149960.png",y="/images/SpringBoot/08-Elasticsearch/image-20211231123432021.png",_="/images/SpringBoot/08-Elasticsearch/image-20211231124522970.png",f="/images/SpringBoot/08-Elasticsearch/image-20211231125217350.png",x="/images/SpringBoot/08-Elasticsearch/image-20211231130714479.png",w="/images/SpringBoot/08-Elasticsearch/image-20211231142505742.png",S="/images/SpringBoot/08-Elasticsearch/image-20211231144725551.png",j="/images/SpringBoot/08-Elasticsearch/image-20211231185118642.png",E="/images/SpringBoot/08-Elasticsearch/image-20211231202525037.png",R="/images/SpringBoot/08-Elasticsearch/image-20220101144013286.png",B="/images/SpringBoot/08-Elasticsearch/image-20220101155626598.png",T="/images/SpringBoot/08-Elasticsearch/image-20220101172832461.png",A="/images/SpringBoot/08-Elasticsearch/image-20220101173306779.png",C="/images/SpringBoot/08-Elasticsearch/image-20220101173401682.png",U="/images/SpringBoot/08-Elasticsearch/image-20220101173930464.png",z="/images/SpringBoot/08-Elasticsearch/image-20220101174438104.png",D="/images/SpringBoot/08-Elasticsearch/image-20220101174510432.png",O="/images/SpringBoot/08-Elasticsearch/image-20220101175259556.png",I="/images/SpringBoot/08-Elasticsearch/image-20220101182737565.png",M="/images/SpringBoot/08-Elasticsearch/image-20220101183040589.png",L="/images/SpringBoot/08-Elasticsearch/image-20220101183155747.png",P="/images/SpringBoot/08-Elasticsearch/image-20220101183350793.png",H="/images/SpringBoot/08-Elasticsearch/image-20220101201724622.png",G="/images/SpringBoot/08-Elasticsearch/image-20220101202100665.png",F="/images/SpringBoot/08-Elasticsearch/image-20220101202645937.png",N="/images/SpringBoot/08-Elasticsearch/image-20220101204729315.png",V="/images/SpringBoot/08-Elasticsearch/image-20220101204831947.png",Q="/images/SpringBoot/08-Elasticsearch/image-20220101205733691.png",J="/images/SpringBoot/08-Elasticsearch/874963-20190127173241683-1331385372.png",K="/images/SpringBoot/08-Elasticsearch/874963-20190127175423615-230290274.png",X="/images/SpringBoot/08-Elasticsearch/874963-20190127175627644-1013476663.png",W="/images/SpringBoot/08-Elasticsearch/874963-20190127175809626-1224287371.png",Y="/images/SpringBoot/08-Elasticsearch/874963-20190127180053644-1305820142.png",Z="/images/SpringBoot/08-Elasticsearch/874963-20190127183530633-1940483075.png",$="/images/SpringBoot/08-Elasticsearch/874963-20190127184959667-1135956344.png",nn="/images/SpringBoot/08-Elasticsearch/874963-20190127185725607-2022920549.png",sn="/images/SpringBoot/08-Elasticsearch/9ee1adbb2d55e710257e01b812a6d8cf.png",an="/images/SpringBoot/08-Elasticsearch/9d499fde966ee9825fa5a424d8357489.png",tn="/images/SpringBoot/08-Elasticsearch/f74828ff58cc4635a97e88706a221e50.png",en="/images/SpringBoot/08-Elasticsearch/image-20220101222326958.png",pn="/images/SpringBoot/08-Elasticsearch/image-20220101222642674.png",on="/images/SpringBoot/08-Elasticsearch/image-20220101223433557.png",cn="/images/SpringBoot/08-Elasticsearch/image-20220101223558096.png",ln="/images/SpringBoot/08-Elasticsearch/image-20220101223843621.png",un="/images/SpringBoot/08-Elasticsearch/image-20220101230107465.png",rn="/images/SpringBoot/08-Elasticsearch/image-20220102003021879.png",kn="/images/SpringBoot/08-Elasticsearch/image-20220102122714859.png",dn="/images/SpringBoot/08-Elasticsearch/image-20220102122739215.png",mn="/images/SpringBoot/08-Elasticsearch/image-20220102123221639.png",vn="/images/SpringBoot/08-Elasticsearch/image-20220102124727964.png",bn="/images/SpringBoot/08-Elasticsearch/image-20220102125416311.png",gn="/images/SpringBoot/08-Elasticsearch/image-20220102160902051.png",qn="/images/SpringBoot/08-Elasticsearch/image-20220102164058988.png",hn="/images/SpringBoot/08-Elasticsearch/image-20220102173605929.png",yn="/images/SpringBoot/08-Elasticsearch/image-20220102174345075.png",_n="/images/SpringBoot/08-Elasticsearch/image-20220102174409304.png",fn="/images/SpringBoot/08-Elasticsearch/image-20220102174458115.png",xn="/images/SpringBoot/08-Elasticsearch/image-20220102174628693.png",wn="/images/SpringBoot/08-Elasticsearch/image-20220102174747109.png",Sn="/images/SpringBoot/08-Elasticsearch/image-20220102174809106.png",jn="/images/SpringBoot/08-Elasticsearch/image-20220102174828216.png",En="/images/SpringBoot/08-Elasticsearch/image-20220102174853617.png",Rn="/images/SpringBoot/08-Elasticsearch/image-20220102174913428.png",Bn="/images/SpringBoot/08-Elasticsearch/image-20220102175012177.png",Tn="/images/SpringBoot/08-Elasticsearch/image-20220102175110536.png",An="/images/SpringBoot/08-Elasticsearch/image-20220102175127313.png",Cn="/images/SpringBoot/08-Elasticsearch/image-20220102175140594.png",Un={},zn=a('<h1 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h1><p>我们在实际开发过程中可能会遇到三种数据类型</p><ul><li>结构化数据 <ul><li>例如用户的账号、密码、年龄等</li><li>这些信息是有关系的，所以我们可以保存到关系型数据库内</li><li>但是这玩意也有缺点 <ul><li>结构是固定死了的，我们已经有了固定结构之后在想添加新的字段扩展不方便</li></ul></li></ul></li><li>非结构化数据 <ul><li>人话：我们无法用二维表表示的东西</li><li>比方说服务器日志、我们的通信记录、我们的工作文档、报表、视频、图片等内容</li><li>这些玩意的维度广度都比较大，所以数据存储和查询的成本都是非常大的</li><li>一般会将这样的数据保存到nosql数据库内，比如redis，使用k-v结构进行保存</li><li>通过key查询数据 相对来说比较快</li></ul></li><li>半结构化数据 <ul><li>就是将内容和结构混合在一起的数据</li><li>比如XML、HTML、Markdown</li><li>这样的数据一般也是保存在NoSQL数据库内</li><li>但是这玩意的话 查询起来不是很容易</li></ul></li></ul><p>我们的实际生产环境中，并非都是关系形结构化的信息，我们无法向数据库模糊查询那样模糊匹配，更不可能遍历所有的内容做匹配</p><p>毕竟查询的目的是为了让我们更快速的找到自己想要的信息</p><p>所以这ElasticSearch这类的<strong>中间件</strong>诞生了</p><p>好！中间件又喜加一</p><h2 id="elasticsearch概述" tabindex="-1"><a class="header-anchor" href="#elasticsearch概述" aria-hidden="true">#</a> ElasticSearch概述</h2><figure><img src="'+i+'" alt="Elasticsearch logo.svg" tabindex="0" loading="lazy"><figcaption>Elasticsearch logo.svg</figcaption></figure><p>The Elastic Static，包括ElasticSearch、Kibana、Beats和Logstash(也称为TLK Stack)</p><p>能够安全可靠的获取任何来源、任何风格、任何格式的数据，然后实时对数据进行搜索、分析和可视化</p><p>ElaticSearch，简称为ES，ES是一个<strong>开源的高扩展的分布式全文搜索引擎</strong>，是整个Elastic Static的核心</p><p>它可以近乎实时的存储、搜索数据</p><p>本身扩展性非常好，可以扩展到上百台服务器，处理PB级别的数据</p><h3 id="全文搜索引擎" tabindex="-1"><a class="header-anchor" href="#全文搜索引擎" aria-hidden="true">#</a> 全文搜索引擎</h3><p>Google、百度类的网站搜索，他们都是根据网页内的关键字生成索引，我们在搜索的时候输入关键字，他们会将该关键字即索引匹配到的所有网页返回，还有常见的项目中的应用日志等</p><p>对于这些非结构化的数据文本，关系型数据库搜索不是能很好的支持</p><p>一般传统的数据库，全文搜索实现的都非常鸡肋，因为一般也没人用数据库存放文本字段</p><p>进行全文搜索需要扫描整个表，如果数据量打的话即使对SQL的语法优化，也收效甚微，即使建立了索引，维护起来也非常麻烦，而且insert和update都会重新构建索引</p><p>基于以上原因可以分析出，在一些生产环境中，使用常规的搜索方式，性能是非常差的</p><ul><li>搜索的数据对象是大量的非结构化的文本数据</li><li>文件记录量能达到数十万个、百万个，甚至更多</li><li>支持大量基于交互式文本的查询</li><li>需求非常灵活的全文查询</li><li>对高度相关的搜索结果的有特殊需求，但是没有可用的关系型数据库可以满足</li><li>对不同记录类型，非文本数据操作或安全事务处理的需求相对较少的情况</li></ul><p>为了解决结构化数据搜索和非结构化数据搜索性能的问题，我们就需要专业、健全、强大的全文搜索引擎</p><p>这里说到的全文搜索引擎指的是目前广泛应用的主流搜索引擎</p><p>它的原理是计算机的索引程序通过扫描文章中的每一个词，对每一个词建立一个索引，指明该词在文章中出现的次数和位置</p><p>当用户查询时，检索程序就根据事先建立的搜索引擎进行查找，并将查找的结果反馈给用户的检索方式</p><p>这个过程类似于通过字典中的检索字查字表的过程</p><h3 id="elasticsearch-and-solr" tabindex="-1"><a class="header-anchor" href="#elasticsearch-and-solr" aria-hidden="true">#</a> ElasticSearch And Solr</h3><p>Lucene是Apache软件基金会Jakarta项目组的一个子项目（草 tomcat10同一个项目组的）</p><p>提供了一个非常强大的应用程式接口，能够做到全文索引和搜寻</p><p>在Java开发环境内Lucene是一个成熟的免费开源工具，就其本身而言，Lucene是当前及近几年最受欢迎的免费Java信息检索程序库</p><p>但Lucene只是一个提供全文搜索功能类库的核心工具包，真正的使用他还需要一个完善的服务框架搭建起来进行应用</p><p>在使用过程中，一般都会将ElasticSearch和Solr这两个软件进行对比，然后进行选型，这两个搜索引擎都是流行的，先进的开源式搜索引擎</p><p>他们都是围绕着底层的核心库-Lucene构建的---但他们又是不同的，像是所有的东西一样，每个都有其有点和缺点</p><figure><img src="'+u+'" alt="image-20211230232211141" tabindex="0" loading="lazy"><figcaption>image-20211230232211141</figcaption></figure><p>那么我们该如何选择呢？</p><ul><li><p>Google搜索趋势表名，和Solr相比，ElasticSearch具有更大的吸引力，但这并不意味着Apache Solr已经死亡，它目前依旧是最受欢迎的搜索引擎之一，有着强大的社区和开源的支持</p></li><li><p>和Solr相比，ElasticSearch易于安装且非常轻巧，此外，我们可以在几分钟内安装并运行ElasticSearch，但如果ElasticSearch管理不当，这种易于部署可能会成为一个问题。基于Json的配置很简单，但如果要为文件中的每个配置指定注释，那么这玩意不太适合。总的来说，如果应用使用的是Json，那么ElasticSearch是一个更好的选择，否则最好使用Solr，它的<code>schema.xml</code>和<code>solconfig.xml</code>都有很好的文档记录</p></li><li><p>Solr拥有更强大、更成熟的用户，开发者和贡献社区，ES虽然拥有的规模较小但活跃的用户社区以及不断增长的贡献者社区</p></li><li><p>Solr的贡献者和提交者来自许多不同的组织，而ElasticSearch提交者来自单个公司</p></li><li><p>Solr更成熟，但ES增长迅速，更稳定</p></li><li><p>Solr是一个非常有据可查的产品，具有更清晰的示例和API应用场景，ElasticSearch的文档组织良好，但它缺乏好的示例和清晰的配置说明</p></li></ul><p><strong>那么，到底是Solr还是ES呢？</strong></p><p>有时很那找到明确的答案，但是我们可以更具特征来归纳</p><ul><li><p>由于易于使用，ElasticSearch在新开发者中更受欢迎，一个下载和一个命令就可以启动一切</p></li><li><p>如果除了文本搜索之外还需要它来处理分析查询，ElasticSearch是更好的选择</p></li><li><p>如果需要分布式搜索，则需要ElasticSearch，对于良好可伸缩性和及性能分布式环境，它是更好的选择</p></li><li><p>ElasticSearch在开源日志管理用例中占主导地位，许多组织在ElasticSearch中搜索他们的日志以使其可搜索</p></li><li><p>如果喜欢指标和监控，那么请使用ElasticSearch，因为相较于Solr，ElasticSearch暴露了更多的关键指标</p></li></ul><p>ES的数据用例：</p><ul><li><p><strong>Github</strong>：在2013年初，抛弃了Solr，采取ES，才做PB级别的搜索，Github才用ES搜索20TB的数据，包含13亿文件的1300亿代码</p></li><li><p><strong>维基百科</strong>：启用以ES为基础的核心搜索架构</p></li><li><p><strong>SoundCloud</strong>：使用ES为1.8E用户提供及时而精准的音乐搜索服务</p></li><li><p><strong>百度</strong>：目前广泛使用ES作为文本数据分析，才用百度服务器上的各类指标及用户自定义数据，通过对各种数据进行多维分析展示，辅助定位分析实例异常或业务层面异常。目前覆盖百度内部超多的业务，单集群最大一百台机器，200个ES节点，每天导入30TB+的数据</p></li><li><p><strong>新浪</strong>：使用ES分析处理32亿条实时日志</p></li><li><p><strong>阿里</strong>：使用ES构建日志采集和分析体系</p></li><li><p><strong>Stack Overflow</strong>：也是才用了ES来记录问题和答案</p></li></ul><h1 id="elasticsearch入门" tabindex="-1"><a class="header-anchor" href="#elasticsearch入门" aria-hidden="true">#</a> ElasticSearch入门</h1><h2 id="下载及安装" tabindex="-1"><a class="header-anchor" href="#下载及安装" aria-hidden="true">#</a> 下载及安装</h2>',43),Dn={href:"https://www.elastic.co/cn",target:"_blank",rel:"noopener noreferrer"},On={href:"https://www.elastic.co/cn/downloads/elasticsearch",target:"_blank",rel:"noopener noreferrer"},In=a('<p>下载后，你能得到一个压缩包，解压可以得到这些文件</p><figure><img src="'+r+`" alt="image-20211230234912737" tabindex="0" loading="lazy"><figcaption>image-20211230234912737</figcaption></figure><ul><li>bin：二进制可执行文件</li><li>config：配置项</li><li>jdk：内置了一个Java</li><li>lib：java的jar包之类的依赖</li><li>logs：日志</li><li>modules：模块</li><li>plugins：插件</li></ul><p>接着我们启动bin下的文件（建议在powershell内启动 不建议双击运行）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token number">2021</span>-12-30T23:52:21,291<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO <span class="token punctuation">]</span>
<span class="token punctuation">[</span>o.e.x.d.l.DeprecationIndexingComponent<span class="token punctuation">]</span> <span class="token punctuation">[</span>DESKTOP-USEHA9I<span class="token punctuation">]</span>
deprecation component started<span class="token punctuation">[</span><span class="token number">2021</span>-12-30T23:52:21,594<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO <span class="token punctuation">]</span>
<span class="token punctuation">[</span>o.e.t.TransportService   <span class="token punctuation">]</span> 
<span class="token punctuation">[</span>DESKTOP-USEHA9I<span class="token punctuation">]</span> 
publish_address <span class="token punctuation">{</span><span class="token number">127.0</span>.0.1:9300<span class="token punctuation">}</span>,
bound_addresses <span class="token punctuation">{</span><span class="token number">127.0</span>.0.1:9300<span class="token punctuation">}</span>, <span class="token punctuation">{</span><span class="token punctuation">[</span>::1<span class="token punctuation">]</span>:9300<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动后会有一个端口号要注意一下</p><p>9300为ElasticSearch集群间组件的通讯端口，9200为浏览器访问的HTTP协议RestFul端口</p><p>接着我们访问localhost:9200</p><figure><img src="`+k+'" alt="image-20211230235657678" tabindex="0" loading="lazy"><figcaption>image-20211230235657678</figcaption></figure><p>看到了这个就说明成功了</p><p>这玩意是依赖Java开发的，需要JDK8+默认安装包内带有JDK环境，如果系统设置了<code>JAVA_HOME</code>环境变量，则用系统的，否则用自带的，一般情况下，建议自己设置下 用系统的</p><h2 id="数据格式" tabindex="-1"><a class="header-anchor" href="#数据格式" aria-hidden="true">#</a> 数据格式</h2><p>ES是面向文档型数据库，一条数据在这里就是一个文档</p><p>大概就是</p><figure><img src="'+d+'" alt="image-20211231002653452" tabindex="0" loading="lazy"><figcaption>image-20211231002653452</figcaption></figure><p>ES里的index可以看做成一个库，而Types相当于表，Document相当于行</p><p>这里Types的概念已经被逐渐弱化了，在ES6.x版本中，一个index只能包含一个type，在ES7.x中，Type的概念已经被删除了</p><p>并且在ES内，数据是倒排索引的</p><p>正排：通过key找value，倒排，通过value找key</p><figure><img src="'+m+'" alt="image-20211231003023722" tabindex="0" loading="lazy"><figcaption>image-20211231003023722</figcaption></figure><p>正排索引就是通过id找context，但是倒排不一样 有了一个额外的东西</p><figure><img src="'+v+'" alt="image-20211231003232284" tabindex="0" loading="lazy"><figcaption>image-20211231003232284</figcaption></figure><h1 id="索引操作" tabindex="-1"><a class="header-anchor" href="#索引操作" aria-hidden="true">#</a> 索引操作</h1><h3 id="创建索引-put" tabindex="-1"><a class="header-anchor" href="#创建索引-put" aria-hidden="true">#</a> 创建索引-PUT</h3><p>这玩意是基于RestFul风格来进行数据传输的，所我们只要进行如下操作就可以创建一个数据库</p><p>我们只需要像ES服务器发送put请求，即可创建数据库</p><ul><li>PUT-<code>http://localhost:9200/shopping</code><ul><li>创建一个shopping的数据库</li></ul></li></ul><p>这里开始用postman来代替我们进行测试</p><figure><img src="'+b+`" alt="image-20211231004006598" tabindex="0" loading="lazy"><figcaption>image-20211231004006598</figcaption></figure><p>会返回一个json格式的返回结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token comment">// 表示创建是否成功 true成功</span>
    <span class="token property">&quot;acknowledged&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;shards_acknowledged&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果说你再次发送相同的请求 会发现</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;error&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;root_cause&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;resource_already_exists_exception&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index [shopping/7y1dV5_6Tw2JTVyli7RKrg] already exists&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index_uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7y1dV5_6Tw2JTVyli7RKrg&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;resource_already_exists_exception&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index [shopping/7y1dV5_6Tw2JTVyli7RKrg] already exists&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;index_uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7y1dV5_6Tw2JTVyli7RKrg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">400</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回了一个异常， 并且是400 code 这里说明这个玩意已经存在了</p><p>PS：索引只支持GET/PUT/Delete/HEAD请求 分别对应 获取 创建 删除 head和get差不多，区别在于消息通过请求头返回</p><h3 id="索引的查询、删除-get-delete" tabindex="-1"><a class="header-anchor" href="#索引的查询、删除-get-delete" aria-hidden="true">#</a> 索引的查询、删除-GET/DELETE</h3><ul><li>查询-GET请求<code>http://localhost:9200/shopping</code></li><li>删除-DELETE请求<code>http://localhost:9200/shopping</code></li></ul><p>查询的结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;shopping&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;aliases&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;routing&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;allocation&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                            <span class="token property">&quot;_tier_preference&quot;</span><span class="token operator">:</span> <span class="token string">&quot;data_content&quot;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;number_of_shards&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;provided_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;creation_date&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1640882386116&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;number_of_replicas&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7y1dV5_6Tw2JTVyli7RKrg&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;created&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7160299&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然 如果要获取一个索引的所有信息 这里以ES自带的<code>_cat</code>索引为例</p><p>只需要GET这个地址<code>http://localhost:9200/_cat/indices?v</code></p><p>你就能获取到如下信息</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>health status index            uuid                   pri rep docs.count docs.deleted store.size pri.store.size
green  open   .geoip_databases aOJVvE_FT2aG2Y9BKprCRQ   1   0         44           44     43.8mb         43.8mb
yellow open   shopping         7y1dV5_6Tw2JTVyli7RKrg   1   1          0            0       226b           226b

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>他这里棉的一些数据之后会说到</p><p>删除索引：DELETE请求<code>http://localhost:9200/shopping</code></p><p>如果删除成功会返回如下内容</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;acknowledged&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除失败会返回如下内容</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;error&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;root_cause&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index_not_found_exception&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;no such index [shopping]&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;resource.type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index_or_alias&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;resource.id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index_uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_na_&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index_not_found_exception&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;no such index [shopping]&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;resource.type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index_or_alias&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;resource.id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;index_uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_na_&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">404</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果说一个索引删除后再试图查询，会返回如下内容</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;error&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;root_cause&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index_not_found_exception&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;no such index [shopping]&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;resource.type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index_or_alias&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;resource.id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index_uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_na_&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index_not_found_exception&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;no such index [shopping]&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;resource.type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;index_or_alias&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;resource.id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;index_uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_na_&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">404</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="文档操作" tabindex="-1"><a class="header-anchor" href="#文档操作" aria-hidden="true">#</a> 文档操作</h1><h2 id="创建文档-post" tabindex="-1"><a class="header-anchor" href="#创建文档-post" aria-hidden="true">#</a> 创建文档-POST</h2><p>索引已经创建好了，接下来我们来创建文档，并添加数据</p><p>这里的文档可以比作数据库内的表数据，添加的数据格式为json格式</p><p>在postman中，向ES服务器发<strong>POST</strong>请求</p><p><code>http://localhost:9200/shopping/_doc</code></p><p>然后请求体(raw)内容为</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span><span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">4699.00</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请求成功后，会返回如下内容</p><figure><img src="`+g+`" alt="image-20211231122351161" tabindex="0" loading="lazy"><figcaption>image-20211231122351161</figcaption></figure><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 数据的唯一性标识 类似于UUID 由ES随机生成</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p4i6Dn4BV-gGdE5MAcvG&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;created&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样的请求多次发送 返回的id是不同的（也就是数据内容可以重复，但是这个id就像是主键一样不能重复也不可能重复）</p><p>第二次发送：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;qIi9Dn4BV-gGdE5MjMud&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;created&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当让我们也可以在请求uri中添加下额外的信息来自定义ID</p><p><code>http://localhost:9200/shopping/_doc/1001</code></p><p>此时发送，返回的唯一性ID就是我们指定的ID</p><figure><img src="`+q+`" alt="image-20211231122952292" tabindex="0" loading="lazy"><figcaption>image-20211231122952292</figcaption></figure><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;created&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不过特别不推荐这样做，因为自定义id，每次插入es会去校验是否重复，数据量大的情况下根本无法接受</p><p>我们还可以通过另一种方式来创建</p><p><code>http://localhost:9200/shopping/_create/1002</code></p><figure><img src="`+h+'" alt="image-20211231123149960" tabindex="0" loading="lazy"><figcaption>image-20211231123149960</figcaption></figure><p>效果都是一样的，都成功添加了数据</p><h2 id="查询文档-主键查询" tabindex="-1"><a class="header-anchor" href="#查询文档-主键查询" aria-hidden="true">#</a> 查询文档-主键查询</h2><p>如果是通过ID查找的话 和我们之前创建文档一样的方式</p><p><code>http://localhost:9200/shopping/_doc/1001</code></p><p>GET请求即可</p><figure><img src="'+y+`" alt="image-20211231123432021" tabindex="0" loading="lazy"><figcaption>image-20211231123432021</figcaption></figure><p>返回值</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;found&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果试图查询一个不存在的ID</p>`,83),Mn={href:"http://localhost:9200/shopping/_doc/100",target:"_blank",rel:"noopener noreferrer"},Ln=a(`<p>会返回</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;found&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询文档-全查询" tabindex="-1"><a class="header-anchor" href="#查询文档-全查询" aria-hidden="true">#</a> 查询文档-全查询</h2><p>如果想要查询所有数据</p><p>则可以：</p>`,5),Pn={href:"http://localhost:9200/shopping/_search",target:"_blank",rel:"noopener noreferrer"},Hn=a(`<p>将会返回我们的所有数据</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;skipped&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
            <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p4i6Dn4BV-gGdE5MAcvG&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;qIi9Dn4BV-gGdE5MjMud&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1002&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改文档-全量修改" tabindex="-1"><a class="header-anchor" href="#修改文档-全量修改" aria-hidden="true">#</a> 修改文档-全量修改</h2><p>比如说我想把1001的数据修改下</p>`,4),Gn={href:"http://localhost:9200/shopping/_doc/1001",target:"_blank",rel:"noopener noreferrer"},Fn=a(`<p>然后请求体内容写上我们修改后的内容</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米12&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span><span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">8888.00</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就能得到如下内容</p><figure><img src="`+_+`" alt="image-20211231124522970" tabindex="0" loading="lazy"><figcaption>image-20211231124522970</figcaption></figure><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;updated&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着我们查询一下，内容也是同步变动的</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;found&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米12&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">8888.00</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是这种update是全量的数据更新， 也就是说有内容都会被修改为我们传入的</p><p>实际过程中，我们往往只需要修改指定的一处，所以就需要用到局部修改了</p><h2 id="修改文档-局部修改" tabindex="-1"><a class="header-anchor" href="#修改文档-局部修改" aria-hidden="true">#</a> 修改文档-局部修改</h2><p>局部修改的话 就得用<code>POST</code>请求</p><p>请求格式如下</p>`,12),Nn={href:"http://localhost:9200/shopping/_update/1001",target:"_blank",rel:"noopener noreferrer"},Vn=a(`<p>注意 这个<code>_update</code> 如果还是<code>_doc</code>的话是修改不了的</p><p>然后请求体格式如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;doc&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token comment">// 这里填写你要修改的属性和对应的值</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span><span class="token string">&quot;苹果手机&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果如下</p><figure><img src="`+f+`" alt="image-20211231125217350" tabindex="0" loading="lazy"><figcaption>image-20211231125217350</figcaption></figure><p>JSON：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;updated&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除文档" tabindex="-1"><a class="header-anchor" href="#删除文档" aria-hidden="true">#</a> 删除文档</h2><p>使用<code>DELETE</code>请求</p>`,9),Qn={href:"http://localhost:9200/shopping/_doc/1001",target:"_blank",rel:"noopener noreferrer"},Jn=n("p",null,"删除成功返回",-1),Kn=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"_index"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"shopping"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_type"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"_doc"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"1001"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"result"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"deleted"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_shards"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token property"},'"total"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token property"},'"successful"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token property"},'"failed"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_seq_no"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_primary_term"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Xn=n("p",null,"删除不存在的返回",-1),Wn=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"_index"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"shopping"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_type"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"_doc"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"1001"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"result"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"not_found"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_shards"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token property"},'"total"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token property"},'"successful"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token property"},'"failed"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_seq_no"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"9"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_primary_term"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Yn=a(`<h2 id="查询文档-条件查询" tabindex="-1"><a class="header-anchor" href="#查询文档-条件查询" aria-hidden="true">#</a> 查询文档-条件查询</h2><p><strong>GET请求</strong></p><p>方式一 ：params</p><p><code>http://localhost:9200/shopping/_search?q=category:小米</code></p><ul><li><code>q=xxx:xx</code>这种格式是 指定某个字段等于啥 就像是 where category = &quot;小米&quot; 这样</li><li>可以指定多个<code>q=xxx:qq</code> 等同mysql内的<code>where .... and ... and ..</code></li></ul><p>查询结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;skipped&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token number">0.12907705</span><span class="token punctuation">,</span>
        <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p4i6Dn4BV-gGdE5MAcvG&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">0.12907705</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1002&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">0.12907705</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">3366.0</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然 也可以通过请求体的方式来指定查询条件</p>`,8),Zn={href:"http://localhost:9200/shopping/_search",target:"_blank",rel:"noopener noreferrer"},$n=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果</p><figure><img src="`+x+'" alt="image-20211231130714479" tabindex="0" loading="lazy"><figcaption>image-20211231130714479</figcaption></figure><h2 id="查询文档-分页查询" tabindex="-1"><a class="header-anchor" href="#查询文档-分页查询" aria-hidden="true">#</a> 查询文档-分页查询</h2><p>GET 请求</p>',5),ns={href:"http://localhost:9200/shopping/_search",target:"_blank",rel:"noopener noreferrer"},ss=a(`<p>body：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token comment">//match_all 代表查询所有 也可以根据自己的需求替换成指定的查询规则</span>
        <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
           
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// 索引的位置</span>
    <span class="token property">&quot;from&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token comment">// 查询的数量</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上方等同于sql内的<code>select * from xxx limit 0,2</code></p><p>注意 最大返回20000条</p><p>结果：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;skipped&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p4i6Dn4BV-gGdE5MAcvG&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;qIi9Dn4BV-gGdE5MjMud&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但实际上我们可能不需要这些文档的全部数据 有可能只需要一个title</p><h2 id="查询文档-指定返回字段" tabindex="-1"><a class="header-anchor" href="#查询文档-指定返回字段" aria-hidden="true">#</a> 查询文档-指定返回字段</h2><p>这个时候就可以通过<code>_source</code>指定字段</p>`,9),as={href:"http://localhost:9200/shopping/_search",target:"_blank",rel:"noopener noreferrer"},ts=a(`<p>body:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
           
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;from&quot;</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token comment">// source接受一个数组 指定要返回哪些值 等同于sql中的 select xxx,xxx from xxx;</span>
    <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;skipped&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p4i6Dn4BV-gGdE5MAcvG&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;qIi9Dn4BV-gGdE5MjMud&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询文档-结果排序" tabindex="-1"><a class="header-anchor" href="#查询文档-结果排序" aria-hidden="true">#</a> 查询文档-结果排序</h2><p>依旧是GET</p>`,6),es={href:"http://localhost:9200/shopping/_search",target:"_blank",rel:"noopener noreferrer"},ps=a(`<p>body：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match_all&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
           
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token comment">// 指定排序字段</span>
        <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token comment">// asc 小到大 desc 大到小</span>
            <span class="token property">&quot;order&quot;</span><span class="token operator">:</span><span class="token string">&quot;asc&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;skipped&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1002&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">3366.0</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token number">3366.0</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p4i6Dn4BV-gGdE5MAcvG&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token number">4699.0</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;qIi9Dn4BV-gGdE5MjMud&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;sort&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                    <span class="token number">4699.0</span>
                <span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询文档-多条件查询、范围查询" tabindex="-1"><a class="header-anchor" href="#查询文档-多条件查询、范围查询" aria-hidden="true">#</a> 查询文档-多条件查询、范围查询</h2><p>GET请求</p>`,6),os={href:"http://localhost:9200/shopping/_search",target:"_blank",rel:"noopener noreferrer"},cs=a(`<ol><li>固定值查询</li></ol><p>body：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token comment">// 声明是一个多条件查询</span>
        <span class="token property">&quot;bool&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token comment">// must 相当于 mysql内的 and Java的 &amp;&amp;</span>
            <span class="token comment">// 可以换成should 相当于mysql 内的 or</span>
            <span class="token property">&quot;must&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                        <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米&quot;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
                    <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                        <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token number">3366</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>范围查询</li></ol><p>body:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;bool&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token comment">// must 相当于 mysql内的 and Java的 &amp;&amp;</span>
            <span class="token comment">//  // 可以换成should 相当于mysql 内的 or</span>
            <span class="token property">&quot;must&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                        <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;小米&quot;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;filter&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token property">&quot;range&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                    <span class="token property">&quot;price&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                        <span class="token comment">// 范围查询  gt达标大于</span>
                        <span class="token comment">// 还有eq、ne、gt、lt、ge、le 具体的用法百度</span>
                        <span class="token property">&quot;gt&quot;</span><span class="token operator">:</span><span class="token number">3000</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文档查询-完全匹配查询" tabindex="-1"><a class="header-anchor" href="#文档查询-完全匹配查询" aria-hidden="true">#</a> 文档查询-完全匹配查询</h2><p>正常查询中</p><p>我的几条数据的category都是小米 那么用米也可以匹配上</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;米&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+w+`" alt="image-20211231142505742" tabindex="0" loading="lazy"><figcaption>image-20211231142505742</figcaption></figure><p>因为我们用的是match--分词查询-这就有点类似于sql中的正则匹配</p><p>ES会将文章的内容进行分词 在倒排索引中给我们去进行匹配</p><p>举个例子</p><p>我们现在有三条数据</p><ul><li>小米</li><li>华为</li><li>小红米</li></ul><p>那么我们这样进行查询的话：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;小华&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果的话是三条数据都能匹配上</p><p>因为它会自动将我们的 小 和 华分成两个词</p><p>然后逐一对词库进行匹配</p><ul><li>小米：小，米</li><li>华为：华，为</li><li>小红米：小，红，米</li></ul><p>所以就能匹配的上..</p><p>如果我们不想分词匹配而是完全匹配</p><p>例如 我输入小米只匹配category内的内容只为小米的 而并非红米的</p><p>就要这样</p>`,26),ls=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"query"'),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token property"},'"match_phrase"'),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token property"},'"category"'),n("span",{class:"token operator"},":"),n("span",{class:"token string"},'"小米"'),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),is=a(`<p>但是注意 如果我输入</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match_phrase&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;米&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依旧能把所有的小米和红米匹配上…</p><h2 id="文档查询-结果高亮显示" tabindex="-1"><a class="header-anchor" href="#文档查询-结果高亮显示" aria-hidden="true">#</a> 文档查询-结果高亮显示</h2><p>如果说我想让查询的结果高亮显示，需要</p>`,5),us=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"query"'),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token property"},'"match_phrase"'),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token property"},'"category"'),n("span",{class:"token operator"},":"),n("span",{class:"token string"},'"小米"'),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"highlight"'),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),s(`
       `),n("span",{class:"token property"},'"fields"'),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token property"},'"category"'),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
       `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),rs=a(`<p>查询出的结果如下所示</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1002&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">0.26706278</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">3366.0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;highlight&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;&lt;em&gt;小&lt;/em&gt;&lt;em&gt;米&lt;/em&gt;&quot;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果说是一个字的话</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match_phrase&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token string">&quot;米&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;highlight&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
       <span class="token property">&quot;fields&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;category&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p4i6Dn4BV-gGdE5MAcvG&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">0.13353139</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米手机&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;images&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://cdn.cnbj1.fds.api.mi-img.com/product-images/xiaomi12proarp71i/header_img1.jpg&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">4699.00</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;highlight&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;category&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token string">&quot;小&lt;em&gt;米&lt;/em&gt;&quot;</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文章查询-聚合查询" tabindex="-1"><a class="header-anchor" href="#文章查询-聚合查询" aria-hidden="true">#</a> 文章查询-聚合查询</h2><h3 id="分组" tabindex="-1"><a class="header-anchor" href="#分组" aria-hidden="true">#</a> 分组</h3><p>我们现在想把不同价格之间的做一个统计</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token comment">// 聚合操作</span>
    <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token comment">// 分组名称 可以随意取名</span>
        <span class="token property">&quot;price_group&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token comment">// 分组</span>
            <span class="token property">&quot;terms&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token comment">// 分组字段</span>
                <span class="token property">&quot;field&quot;</span><span class="token operator">:</span><span class="token string">&quot;price&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询结果中会多出这些</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;price_group&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;doc_count_error_upper_bound&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sum_other_doc_count&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;buckets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">4699.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;doc_count&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">3366.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;doc_count&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是这样的话原始数据也在查询结果内</p><figure><img src="`+S+'" alt="image-20211231144725551" tabindex="0" loading="lazy"><figcaption>image-20211231144725551</figcaption></figure><h3 id="只取统计的字段" tabindex="-1"><a class="header-anchor" href="#只取统计的字段" aria-hidden="true">#</a> 只取统计的字段</h3><p>如果我们只想要统计的字段的话 只需要</p>',16),ks=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 聚合操作"),s(`
    `),n("span",{class:"token property"},'"aggs"'),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"// 分组名称 可以随意取名"),s(`
        `),n("span",{class:"token property"},'"price_group"'),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token comment"},"// 分组"),s(`
            `),n("span",{class:"token property"},'"terms"'),n("span",{class:"token operator"},":"),n("span",{class:"token punctuation"},"{"),s(`
                `),n("span",{class:"token comment"},"// 分组字段"),s(`
                `),n("span",{class:"token property"},'"field"'),n("span",{class:"token operator"},":"),n("span",{class:"token string"},'"price"'),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"size"'),n("span",{class:"token operator"},":"),n("span",{class:"token number"},"0"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ds=a(`<p>设置查询的hits结果数量 设置为0</p><p>结果：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;skipped&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;price_group&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;doc_count_error_upper_bound&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;sum_other_doc_count&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;buckets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">4699.0</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;doc_count&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">3366.0</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;doc_count&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="平均值等" tabindex="-1"><a class="header-anchor" href="#平均值等" aria-hidden="true">#</a> 平均值等</h2><ul><li>min ：最小值</li><li>max ：最大值</li><li>sum ：用所有值</li><li>avg ：用所有值的平均值</li><li>median ：用所有值的中间值</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token comment">// 聚合操作</span>
    <span class="token property">&quot;aggs&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token comment">// 分组名称 可以随意取名</span>
        <span class="token property">&quot;price_group&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token comment">// 取平均值</span>
            <span class="token property">&quot;avg&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token comment">// 分组字段</span>
                <span class="token property">&quot;field&quot;</span><span class="token operator">:</span><span class="token string">&quot;price&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;size&quot;</span><span class="token operator">:</span><span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;skipped&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;price_group&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">4254.666666666667</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字段类型的约束-声明类型" tabindex="-1"><a class="header-anchor" href="#字段类型的约束-声明类型" aria-hidden="true">#</a> 字段类型的约束（声明类型）</h2><p>我们先创建一个User</p>`,10),ms={href:"http://localhost:9200/user",target:"_blank",rel:"noopener noreferrer"},vs={href:"http://localhost:9200/user/_mapping",target:"_blank",rel:"noopener noreferrer"},bs=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token comment">// 指定字段</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token comment">// 字段的类型</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
            <span class="token comment">// 字段是否可以被索引查询</span>
            <span class="token property">&quot;index&quot;</span><span class="token operator">:</span><span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token comment">// keyword 不能被分词查询 必须要完整匹配差能被查询</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;keyword&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;index&quot;</span><span class="token operator">:</span><span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;tel&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;keyword&quot;</span><span class="token punctuation">,</span>
            <span class="token comment">// 不能够被索引</span>
            <span class="token property">&quot;index&quot;</span><span class="token operator">:</span><span class="token boolean">false</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),gs={href:"http://localhost:9200/user/_mapping",target:"_blank",rel:"noopener noreferrer"},qs=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;tel&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;keyword&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着我们正常给他插入一条数据</p>`,2),hs={href:"http://localhost:9200/user/_create/1001",target:"_blank",rel:"noopener noreferrer"},ys=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;tel&quot;</span><span class="token operator">:</span><span class="token string">&quot;1111&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;created&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来我们进行查询</p>`,4),_s={href:"http://localhost:9200/user/_search",target:"_blank",rel:"noopener noreferrer"},fs=a(`<p>查询name</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;老张&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询的到</p><p>查询性别：通过模糊匹配</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;老男人了&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询不到</p><p>通过全部都匹配得上</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果说查手机号的话</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;query&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;match_phrase&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;tel&quot;</span><span class="token operator">:</span><span class="token string">&quot;1111&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>会直接报错 因为它不能被索引 也就是不能通过这个字段来进行查询</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;error&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;root_cause&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;query_shard_exception&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;failed to create query: Cannot search on field [tel] since it is not indexed.&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index_uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xAk-eeCTQ4W28EVrSUlrmQ&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;search_phase_execution_exception&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;all shards failed&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;phase&quot;</span><span class="token operator">:</span> <span class="token string">&quot;query&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;grouped&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;shard&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;node&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Y2PQHruOS0GY2BqQlRHN6A&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;query_shard_exception&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;failed to create query: Cannot search on field [tel] since it is not indexed.&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;index_uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xAk-eeCTQ4W28EVrSUlrmQ&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;caused_by&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;illegal_argument_exception&quot;</span><span class="token punctuation">,</span>
                        <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Cannot search on field [tel] since it is not indexed.&quot;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">400</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="java-api" tabindex="-1"><a class="header-anchor" href="#java-api" aria-hidden="true">#</a> Java API</h2><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备" aria-hidden="true">#</a> 环境准备</h3><p>我们先创建一个空的maven项目</p><p>然后添加如下依赖</p><p>前面两个是必须的 一个连接 一个做json数据转换</p><p>这里说下 目前7.x版本的情况下 使用下面那个啥玩意 会提示说推荐用最新的elasticsearch-java</p><p>但是那个elasticsearch-java的文档特别云里雾里 我看了一下午没看明白 以后再研究了（估计以后也用不上这玩意 太痛苦了）</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>co.elastic.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>elasticsearch-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>7.16.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.fasterxml.jackson.core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jackson-databind<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.13.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>



    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>slf4j-simple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.7.32<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>compile<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.18.22<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>


<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建索引" tabindex="-1"><a class="header-anchor" href="#创建索引" aria-hidden="true">#</a> 创建索引</h3>`,21),xs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ESTest_Client"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

`),n("span",{class:"token comment"},"//        创建连接 这是固定操作"),s(`
        `),n("span",{class:"token class-name"},"HttpHost"),s(" httpHost "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"HttpHost"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"localhost"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"9200"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"http"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"RestClientBuilder"),s(" builder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClient"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"builder"),n("span",{class:"token punctuation"},"("),s("httpHost"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s("  "),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"RestHighLevelClient"),n("span",{class:"token punctuation"},"("),s("builder"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"//        创建索引"),s(`
        `),n("span",{class:"token class-name"},"CreateIndexResponse"),s(" user "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"create"),n("span",{class:"token punctuation"},"("),s(`
            `),n("span",{class:"token comment"},"// 第一个是要创建的索引的信息 这里直接创建一个user的索引 所以填一个User就行了"),s(`
            `),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"CreateIndexRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token comment"},"// 第二个是请求方式 我们直接使用默认的请求方式即可"),s(`
            `),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token comment"},"// 这里的user就相当于是封装好了的响应体 可以通过isAcknowledged 获取 json中的"),s(`
        `),n("span",{class:"token class-name"},"Boolean"),s(" aBoolean "),n("span",{class:"token operator"},"="),s(" user"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isAcknowledged"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("aBoolean"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        

`),n("span",{class:"token comment"},"//        关闭链接也是固定操作"),s(`
        client`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ws=a(`<p>返回结果：true</p><h3 id="查询索引" tabindex="-1"><a class="header-anchor" href="#查询索引" aria-hidden="true">#</a> 查询索引</h3><p>为了简化我之后的操作 这里整一个工具类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestClientUtils</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">RestHighLevelClient</span> <span class="token constant">TRANSPORT</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token class-name">HttpHost</span> httpHost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token number">9200</span><span class="token punctuation">,</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RestClientBuilder</span> builder <span class="token operator">=</span> <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>httpHost<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">TRANSPORT</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token comment">// 获取client</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">RestHighLevelClient</span> <span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">TRANSPORT</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token comment">// 关闭client</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token constant">TRANSPORT</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Ss={href:"http://localhost:9200/user",target:"_blank",rel:"noopener noreferrer"},js=a(`<p>我们首先看下直接get 的结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;aliases&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;routing&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;allocation&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                            <span class="token property">&quot;_tier_preference&quot;</span><span class="token operator">:</span> <span class="token string">&quot;data_content&quot;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;number_of_shards&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;provided_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;creation_date&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1640945308925&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;number_of_replicas&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;B-DxzXR_Qluvrbckja07lA&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;created&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7160299&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在settings里面有蛮多信息 其他里面都没有东西 接下来我们代码实现 固定写法</p>`,3),Es=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"GetIndexRequest"),s(" userRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"GetIndexRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"GetIndexResponse"),s(" user "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("userRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"getSettings:"'),n("span",{class:"token operator"},"+"),s("user"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSettings"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 之后就可以直接get到对应的信息"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"getAliases:"'),n("span",{class:"token operator"},"+"),s("user"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAliases"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"getMappings:"'),n("span",{class:"token operator"},"+"),s("user"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getMappings"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`


`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Rs=a(`<p>运行结果：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>getSettings:[user=&gt;{&quot;index.creation_date&quot;:&quot;1640945308925&quot;,&quot;index.number_of_replicas&quot;:&quot;1&quot;,&quot;index.number_of_shards&quot;:&quot;1&quot;,&quot;index.provided_name&quot;:&quot;user&quot;,&quot;index.routing.allocation.include._tier_preference&quot;:&quot;data_content&quot;,&quot;index.uuid&quot;:&quot;B-DxzXR_Qluvrbckja07lA&quot;,&quot;index.version.created&quot;:&quot;7160299&quot;}]
getAliases:[user=&gt;[]]
getMappings:[user=&gt;[]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除索引" tabindex="-1"><a class="header-anchor" href="#删除索引" aria-hidden="true">#</a> 删除索引</h3><p>更加固定的写法</p>`,4),Bs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"AcknowledgedResponse"),s(" user "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"delete"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"DeleteIndexRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("user"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isAcknowledged"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token string"},'"删除成功"'),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"删除失败"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ts=a(`<p>结果：删除成功</p><p>如果删除失败，且是在索引不存在的情况下，在那一行中会直接抛出异常</p><h3 id="新建文档" tabindex="-1"><a class="header-anchor" href="#新建文档" aria-hidden="true">#</a> 新建文档</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token class-name">RestHighLevelClient</span> client <span class="token operator">=</span> <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//        插入数据</span>
    <span class="token comment">//        1 创建请求体</span>
    <span class="token class-name">IndexRequest</span> indexRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IndexRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        2 设置插入哪个索引 并指定id（如果说索引不存在，会自动创建）</span>
    indexRequest<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        3 创建一个User对象</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        把对象转换成json</span>
    <span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> userJson <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        4 设置请求体的内容 后面哪个是请求体的格式 只能选择json</span>
    indexRequest<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>userJson<span class="token punctuation">,</span> <span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//         发送请求 并获取响应</span>
    <span class="token class-name">IndexResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>indexRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//        获取响应状态</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回值：CREATED</p><p>直接get user表</p><figure><img src="`+j+'" alt="image-20211231185118642" tabindex="0" loading="lazy"><figcaption>image-20211231185118642</figcaption></figure>',7),As={href:"http://localhost:9200/user/_search",target:"_blank",rel:"noopener noreferrer"},Cs=a(`<p>结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;took&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;skipped&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;relation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eq&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;max_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
        <span class="token property">&quot;hits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_score&quot;</span><span class="token operator">:</span> <span class="token number">1.0</span><span class="token punctuation">,</span>
                <span class="token property">&quot;_source&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>
                    <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">18</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改文档" tabindex="-1"><a class="header-anchor" href="#修改文档" aria-hidden="true">#</a> 修改文档</h3>`,3),Us=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"ObjectMapper"),s(" objectMapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"//        修改数据"),s(`
    `),n("span",{class:"token comment"},"//         创建UpdateRequest请求体"),s(`
    `),n("span",{class:"token class-name"},"UpdateRequest"),s(" updateRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"UpdateRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    updateRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"index"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"id"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"1001"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"HashMap"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},">")]),s(" map "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"HashMap"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
 `),n("span",{class:"token comment"},"// 注意 修改的话  只能用这种格式 不然修改不成。 可以同时传入多个这样的key-value"),s(`
    updateRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"doc"),n("span",{class:"token punctuation"},"("),s(),n("span",{class:"token class-name"},"XContentType"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"JSON"),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},'"sex"'),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},'"女"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(` 

    `),n("span",{class:"token comment"},"//         发送请求 并获取响应"),s(`
    `),n("span",{class:"token class-name"},"UpdateResponse"),s(" response "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"update"),n("span",{class:"token punctuation"},"("),s("updateRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"//        获取响应状态"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("response"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getResult"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),zs=a(`<p>若修改成功返回UPDATED</p><h3 id="查询文档" tabindex="-1"><a class="header-anchor" href="#查询文档" aria-hidden="true">#</a> 查询文档</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token class-name">RestHighLevelClient</span> client <span class="token operator">=</span> <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 依旧是老一套 模板都长这样</span>
    <span class="token class-name">GetRequest</span> getRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 这个id不可省略 会报错</span>
    getRequest<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">GetResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>getRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 这里还可以获取一些其他信息 按需get即可 这里的getSourceAsString 是将返回值封装成String</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">//字符串转换成Object</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getSourceAsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>{&quot;name&quot;:&quot;张三&quot;,&quot;sex&quot;:&quot;男&quot;,&quot;age&quot;:18}
User(name=张三, sex=男, age=18)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除文档-1" tabindex="-1"><a class="header-anchor" href="#删除文档-1" aria-hidden="true">#</a> 删除文档</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token class-name">RestHighLevelClient</span> client <span class="token operator">=</span> <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">DeleteRequest</span> deleteRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    deleteRequest<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">DeleteResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>deleteRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：DELETED</p><h3 id="批量插入" tabindex="-1"><a class="header-anchor" href="#批量插入" aria-hidden="true">#</a> 批量插入</h3><p>其实就是把多个单个插入整到一块一次性插入</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token class-name">RestHighLevelClient</span> client <span class="token operator">=</span> <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//        批量插入数据</span>
    <span class="token class-name">BulkRequest</span> bulkRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BulkRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token comment">// 这里就省略了实体对象转成JSon  直接插入了</span>
    bulkRequest<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IndexRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;name\\&quot;:\\&quot;张三\\&quot;,\\&quot;age\\&quot;:18}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bulkRequest<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IndexRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;name\\&quot;:\\&quot;李四\\&quot;,\\&quot;age\\&quot;:19}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bulkRequest<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IndexRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;name\\&quot;:\\&quot;王五\\&quot;,\\&quot;age\\&quot;:20}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bulkRequest<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IndexRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1004&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;name\\&quot;:\\&quot;赵六\\&quot;,\\&quot;age\\&quot;:21}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token class-name">BulkResponse</span> responses <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">bulk</span><span class="token punctuation">(</span>bulkRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>responses<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>responses<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果测试</p><figure><img src="`+E+`" alt="image-20211231202525037" tabindex="0" loading="lazy"><figcaption>image-20211231202525037</figcaption></figure><h3 id="文档操作-批量删除" tabindex="-1"><a class="header-anchor" href="#文档操作-批量删除" aria-hidden="true">#</a> 文档操作-批量删除</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

    <span class="token class-name">RestHighLevelClient</span> client <span class="token operator">=</span> <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//        批量删除数据</span>
    <span class="token class-name">BulkRequest</span> bulkRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BulkRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token comment">// 和批量添加一样的操作 只是IndexRequest换成了DeleteRequest而已</span>
    bulkRequest<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bulkRequest<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bulkRequest<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bulkRequest<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token string">&quot;1004&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token class-name">BulkResponse</span> responses <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">bulk</span><span class="token punctuation">(</span>bulkRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>responses<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>responses<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="高级查询-全量查询" tabindex="-1"><a class="header-anchor" href="#高级查询-全量查询" aria-hidden="true">#</a> 高级查询-全量查询</h3><p>这里先批量插入一些数据</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ESTest_Client</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

        <span class="token class-name">RestHighLevelClient</span> client <span class="token operator">=</span> <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//        批量插入数据</span>
        <span class="token class-name">BulkRequest</span> bulkRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BulkRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        姓名、年龄、性别、地址</span>
        <span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> user1 <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&quot;北京&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> user2 <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">&quot;上海&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> user3 <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&quot;广州&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> user4 <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;赵六&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">&quot;深圳&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> user5 <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;钱七&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&quot;杭州&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> user6 <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;孙八&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">&quot;南京&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> user7 <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;周九&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token string">&quot;武汉&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> user8 <span class="token operator">=</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">&quot;吴十&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token string">&quot;成都&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addPerson</span><span class="token punctuation">(</span>bulkRequest<span class="token punctuation">,</span> user1<span class="token punctuation">,</span> user2<span class="token punctuation">,</span> user3<span class="token punctuation">,</span> user4<span class="token punctuation">,</span>user5<span class="token punctuation">,</span> user6<span class="token punctuation">,</span> user7<span class="token punctuation">,</span> user8<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BulkResponse</span> responses <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">bulk</span><span class="token punctuation">(</span>bulkRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>responses<span class="token punctuation">.</span><span class="token function">getTook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>responses<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addPerson</span><span class="token punctuation">(</span><span class="token class-name">BulkRequest</span> bulkRequest<span class="token punctuation">,</span> <span class="token class-name">String</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> arg <span class="token operator">:</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            bulkRequest<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IndexRequest</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>arg<span class="token punctuation">,</span> <span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着变写如下代码</p>`,19),Ds=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchRequest"),s(" searchRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        设置查询规则 这里是查询所有数据"),s(`
    `),n("span",{class:"token class-name"},"SearchSourceBuilder"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchSourceBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"query"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"matchAllQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"source"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"SearchResponse"),s(" search "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("searchRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//       草 lombok里面有一个val 我才发现"),s(`
    val hits `),n("span",{class:"token operator"},"="),s(" search"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHits"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"ObjectMapper"),s(" mapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SearchHit"),s(" hit "),n("span",{class:"token operator"},":"),s(" hits"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//            System.out.println(hit);"),s(`
        `),n("span",{class:"token comment"},"//            转换成User对象"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("mapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readValue"),n("span",{class:"token punctuation"},"("),s("hit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSourceAsString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Os=a(`<p>运行结果：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>User(name=张三, sex=男, age=18, city=北京)
User(name=李四, sex=男, age=19, city=上海)
User(name=王五, sex=男, age=20, city=广州)
User(name=赵六, sex=男, age=21, city=深圳)
User(name=钱七, sex=男, age=22, city=杭州)
User(name=孙八, sex=男, age=23, city=南京)
User(name=周九, sex=男, age=24, city=武汉)
User(name=吴十, sex=男, age=25, city=成都)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="条件查询" tabindex="-1"><a class="header-anchor" href="#条件查询" aria-hidden="true">#</a> 条件查询</h3><p>这里有个坑，中文全称通过termQuery是查不到的。</p><p>因为默认字符串分词，找不到这个全称的索引。</p><p>得通过<code>matchQuery</code>来进行查询（）</p><p>下面是地址</p>`,7),Is=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchRequest"),s(" searchRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        设置查询规则 "),s(`
    `),n("span",{class:"token class-name"},"SearchSourceBuilder"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchSourceBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"query"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"termQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"age"'),n("span",{class:"token punctuation"},","),n("span",{class:"token number"},"18"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"source"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"SearchResponse"),s(" search "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("searchRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        lombok里面有一个val"),s(`
    val hits `),n("span",{class:"token operator"},"="),s(" search"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHits"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"ObjectMapper"),s(" mapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SearchHit"),s(" hit "),n("span",{class:"token operator"},":"),s(" hits"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//            System.out.println(hit);"),s(`
        `),n("span",{class:"token comment"},"//            转换成User对象"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("mapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readValue"),n("span",{class:"token punctuation"},"("),s("hit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSourceAsString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ms=n("p",null,"结果：User(name=张三, sex=男, age=18, city=北京)",-1),Ls=n("h3",{id:"分页查询",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#分页查询","aria-hidden":"true"},"#"),s(" 分页查询")],-1),Ps=n("p",null,"注意是在query内添加",-1),Hs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchRequest"),s(" searchRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        设置查询规则"),s(`
    `),n("span",{class:"token class-name"},"SearchSourceBuilder"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchSourceBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"query"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"matchAllQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"source"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchResponse"),s(" search "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("searchRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        lombok里面有一个val"),s(`
    val hits `),n("span",{class:"token operator"},"="),s(" search"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHits"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"ObjectMapper"),s(" mapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SearchHit"),s(" hit "),n("span",{class:"token operator"},":"),s(" hits"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//            System.out.println(hit);"),s(`
        `),n("span",{class:"token comment"},"//            转换成User对象"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("mapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readValue"),n("span",{class:"token punctuation"},"("),s("hit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSourceAsString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Gs=a(`<p>结果：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>User(name=张三, sex=男, age=18, city=北京)
User(name=李四, sex=男, age=19, city=上海)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询结果排序" tabindex="-1"><a class="header-anchor" href="#查询结果排序" aria-hidden="true">#</a> 查询结果排序</h3><p>依旧是在query对象中操作</p>`,4),Fs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchRequest"),s(" searchRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        设置查询规则"),s(`
    `),n("span",{class:"token class-name"},"SearchSourceBuilder"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchSourceBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"query"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"matchAllQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sort"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"age"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"SortOrder"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DESC"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"source"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchResponse"),s(" search "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("searchRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        lombok里面有一个val"),s(`
    val hits `),n("span",{class:"token operator"},"="),s(" search"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHits"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"ObjectMapper"),s(" mapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SearchHit"),s(" hit "),n("span",{class:"token operator"},":"),s(" hits"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//            System.out.println(hit);"),s(`
        `),n("span",{class:"token comment"},"//            转换成User对象"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("mapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readValue"),n("span",{class:"token punctuation"},"("),s("hit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSourceAsString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ns=a(`<p>结果</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>User(name=吴十, sex=男, age=25, city=成都)
User(name=周九, sex=男, age=24, city=武汉)
User(name=孙八, sex=男, age=23, city=南京)
User(name=钱七, sex=男, age=22, city=杭州)
User(name=赵六, sex=男, age=21, city=深圳)
User(name=王五, sex=男, age=20, city=广州)
User(name=李四, sex=男, age=19, city=上海)
User(name=张三, sex=男, age=18, city=北京)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="过滤字段" tabindex="-1"><a class="header-anchor" href="#过滤字段" aria-hidden="true">#</a> 过滤字段</h3><p>例如我们只想要姓名和年龄</p><p>如果说你只设置了excludes ，includes为空数组或者null，则只会排除指定的字段</p><p>例如 name age sex 你设置排除sex 没有设置includes 则返回 name age</p>`,6),Vs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[s("    "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

        `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token class-name"},"SearchRequest"),s(" searchRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//        设置查询规则"),s(`
        `),n("span",{class:"token class-name"},"SearchSourceBuilder"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchSourceBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"query"),n("span",{class:"token punctuation"},"("),s(`
                `),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"matchAllQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"// include是包含的字段 另一个是排除的字段 一般来说只要设置一种就行 另一种填null"),s(`
        `),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" includes "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"age"'),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" excludes "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
        query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"fetchSource"),n("span",{class:"token punctuation"},"("),s("includes"),n("span",{class:"token punctuation"},","),s(" excludes"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"source"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token class-name"},"SearchResponse"),s(" search "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("searchRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"//        lombok里面有一个val"),s(`
        val hits `),n("span",{class:"token operator"},"="),s(" search"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHits"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"ObjectMapper"),s(" mapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SearchHit"),s(" hit "),n("span",{class:"token operator"},":"),s(" hits"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
`),n("span",{class:"token comment"},"//            System.out.println(hit);"),s(`
`),n("span",{class:"token comment"},"//            转换成User对象"),s(`
            `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("mapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readValue"),n("span",{class:"token punctuation"},"("),s("hit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSourceAsString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

        `),n("span",{class:"token punctuation"},"}"),s(`

        `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Qs=a(`<p>结果</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>User(name=张三, sex=null, age=18, city=null)
User(name=李四, sex=null, age=19, city=null)
User(name=王五, sex=null, age=20, city=null)
User(name=赵六, sex=null, age=21, city=null)
User(name=钱七, sex=null, age=22, city=null)
User(name=孙八, sex=null, age=23, city=null)
User(name=周九, sex=null, age=24, city=null)
User(name=吴十, sex=null, age=25, city=null)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="组合查询" tabindex="-1"><a class="header-anchor" href="#组合查询" aria-hidden="true">#</a> 组合查询</h3>`,3),Js=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchRequest"),s(" searchRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        设置查询规则"),s(`
    `),n("span",{class:"token class-name"},"SearchSourceBuilder"),s(" builder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchSourceBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"BoolQueryBuilder"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"boolQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        must 必须满足指定条件 、 mustNot 必须不满足什么样的条件 should 可能满足什么样的条件"),s(`
    query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"must"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"matchQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"sex"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"男"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 下面这里可以设置为matchPhraseQuery来进行全字段匹配"),s(`
    query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"must"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"matchQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"city"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"北京"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"query"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"source"),n("span",{class:"token punctuation"},"("),s("builder"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchResponse"),s(" search "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("searchRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        lombok里面有一个val"),s(`
    val hits `),n("span",{class:"token operator"},"="),s(" search"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHits"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"ObjectMapper"),s(" mapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SearchHit"),s(" hit "),n("span",{class:"token operator"},":"),s(" hits"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//            System.out.println(hit);"),s(`
        `),n("span",{class:"token comment"},"//            转换成User对象"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("mapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readValue"),n("span",{class:"token punctuation"},"("),s("hit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSourceAsString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ks=a(`<p>结果：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>User(name=张三, sex=男, age=18, city=北京)
User(name=孙八, sex=男, age=23, city=南京)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>你还可以 设置两个should 让某个值例如age的取值为两个值</p><p>例如</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>query<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
query<span class="token punctuation">.</span><span class="token function">must</span><span class="token punctuation">(</span><span class="token class-name">QueryBuilders</span><span class="token punctuation">.</span><span class="token function">should</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这样年龄就得是18或者20</p><h3 id="范围查询" tabindex="-1"><a class="header-anchor" href="#范围查询" aria-hidden="true">#</a> 范围查询</h3>`,7),Xs=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchRequest"),s(" searchRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        设置查询规则"),s(`
    `),n("span",{class:"token class-name"},"SearchSourceBuilder"),s(" builder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchSourceBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"RangeQueryBuilder"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rangeQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"age"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token comment"},"//        大于等于20  如果没有那个e则表示单纯的大于20 下面的同理"),s(`
    query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"gte"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"20"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        小于等于25"),s(`
    query`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"lte"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"25"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`


    builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"query"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"source"),n("span",{class:"token punctuation"},"("),s("builder"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchResponse"),s(" search "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("searchRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        lombok里面有一个val"),s(`
    val hits `),n("span",{class:"token operator"},"="),s(" search"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHits"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"ObjectMapper"),s(" mapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SearchHit"),s(" hit "),n("span",{class:"token operator"},":"),s(" hits"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//            System.out.println(hit);"),s(`
        `),n("span",{class:"token comment"},"//            转换成User对象"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("mapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readValue"),n("span",{class:"token punctuation"},"("),s("hit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSourceAsString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ws=a(`<p>结果：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>User(name=王五, sex=男, age=20, city=广州)
User(name=赵六, sex=男, age=21, city=深圳)
User(name=钱七, sex=男, age=22, city=杭州)
User(name=孙八, sex=男, age=23, city=南京)
User(name=周九, sex=男, age=24, city=武汉)
User(name=吴十, sex=男, age=25, city=成都)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模糊查询" tabindex="-1"><a class="header-anchor" href="#模糊查询" aria-hidden="true">#</a> 模糊查询</h3>`,3),Ys=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchRequest"),s(" searchRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        设置查询规则"),s(`
    `),n("span",{class:"token class-name"},"SearchSourceBuilder"),s(" builder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchSourceBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"FuzzyQueryBuilder"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"fuzzyQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"王三"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"fuzziness"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Fuzziness"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"ONE"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`


    builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"query"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"source"),n("span",{class:"token punctuation"},"("),s("builder"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchResponse"),s(" search "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("searchRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        lombok里面有一个val"),s(`
    val hits `),n("span",{class:"token operator"},"="),s(" search"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHits"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"ObjectMapper"),s(" mapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SearchHit"),s(" hit "),n("span",{class:"token operator"},":"),s(" hits"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//            System.out.println(hit);"),s(`
        `),n("span",{class:"token comment"},"//            转换成User对象"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("mapper"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"readValue"),n("span",{class:"token punctuation"},"("),s("hit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSourceAsString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Zs=a(`<p>这里的<code>QueryBuilders.fuzzyQuery(&quot;name&quot;, &quot;王三&quot;)</code>是模糊查询表达式</p><p>name=王三</p><p>然后后面<code>fuzziness(Fuzziness.ONE);</code>是允许不同的字数</p><p>例如 ONE 则表示和其中一个字不同的都会匹配</p><p>也就是说-----王，三，这两个只要匹配上一个就会查询出来</p><ul><li>王五</li><li>张三</li><li>王三二</li></ul><p>这些都能匹配上</p><p>这个例子中的代码 能匹配上之前存储的字段为</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>User(name=张三, sex=男, age=18, city=北京)
User(name=王五, sex=男, age=20, city=广州)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>还支持如下的常量</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">X_FIELD_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;fuzziness&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Fuzziness</span> <span class="token constant">ZERO</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fuzziness</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Fuzziness</span> <span class="token constant">ONE</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fuzziness</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Fuzziness</span> <span class="token constant">TWO</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fuzziness</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Fuzziness</span> <span class="token constant">AUTO</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Fuzziness</span><span class="token punctuation">(</span><span class="token string">&quot;AUTO&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ParseField</span> <span class="token constant">FIELD</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParseField</span><span class="token punctuation">(</span><span class="token constant">X_FIELD_NAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="高量查询" tabindex="-1"><a class="header-anchor" href="#高量查询" aria-hidden="true">#</a> 高量查询</h3><p>代码</p>`,13),$s=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token class-name"},"RestHighLevelClient"),s(" client "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getClient"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchRequest"),s(" searchRequest "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchRequest"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indices"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        设置查询规则"),s(`
    `),n("span",{class:"token class-name"},"SearchSourceBuilder"),s(" builder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"SearchSourceBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`


    `),n("span",{class:"token comment"},"//        这里依旧用match查询"),s(`
    `),n("span",{class:"token class-name"},"MatchQueryBuilder"),s(" query "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"matchQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"张三"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 绑定查询规则"),s(`
    builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"query"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"HighlightBuilder"),s(" highlightBuilder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"HighlightBuilder"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        这里是自定义高亮显示的样式"),s(`
    highlightBuilder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"preTags"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},`"<span style='color:red'>"`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    highlightBuilder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"postTags"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"</span>"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        对哪个查询结果需要进行高亮显示"),s(`
    highlightBuilder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"field"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"name"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 绑定高量规则"),s(`
    builder`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"highlighter"),n("span",{class:"token punctuation"},"("),s("highlightBuilder"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    searchRequest`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"source"),n("span",{class:"token punctuation"},"("),s("builder"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token class-name"},"SearchResponse"),s(" search "),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("searchRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"RequestOptions"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"DEFAULT"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//        lombok里面有一个val"),s(`
    val hits `),n("span",{class:"token operator"},"="),s(" search"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHits"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"ObjectMapper"),s(" mapper "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ObjectMapper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"SearchHit"),s(" hit "),n("span",{class:"token operator"},":"),s(" hits"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//            System.out.println(hit);"),s(`
        `),n("span",{class:"token comment"},"//            转换成User对象"),s(`
        `),n("span",{class:"token comment"},"//            System.out.println(mapper.readValue(hit.getSourceAsString(), User.class));"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("hit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSourceAsString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token comment"},"//            获取高亮显示的字段"),s(`
        `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),s("hit"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getHighlightFields"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token class-name"},"RestClientUtils"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"close"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),na=a(`<p>结果</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>{name=[name], fragments[[<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>张<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">&#39;</span></span></span><span class="token punctuation">&gt;</span></span>三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>]]}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="最大值查询" tabindex="-1"><a class="header-anchor" href="#最大值查询" aria-hidden="true">#</a> 最大值查询</h3><p>最小值之类的同理</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//        获取连接</span>
    <span class="token class-name">RestHighLevelClient</span> client <span class="token operator">=</span> <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        创建查询请求体</span>
    <span class="token class-name">SearchRequest</span> searchRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        设置查询的索引</span>
    searchRequest<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        创建查询规则</span>
    <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//       设置聚合查询条件-最大值查询个 第一个参数 组名 第二个参数 字段名</span>
    <span class="token class-name">MaxAggregationBuilder</span> age <span class="token operator">=</span> <span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token string">&quot;maxAge&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//        将最大值查询条件添加到查询规则中</span>
    builder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        将查询规则设置到查询请求体中</span>
    searchRequest<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        开始查询</span>
    <span class="token class-name">SearchResponse</span> search <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>searchRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Aggregation</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> search<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//            获取聚合结果 转换成json 并打印</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;maxAge&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;metadata&quot;</span><span class="token operator">:</span><span class="token null keyword">null</span><span class="token punctuation">,</span><span class="token property">&quot;value&quot;</span><span class="token operator">:</span><span class="token number">25.0</span><span class="token punctuation">,</span><span class="token property">&quot;valueAsString&quot;</span><span class="token operator">:</span><span class="token string">&quot;25.0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;max&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="分组查询" tabindex="-1"><a class="header-anchor" href="#分组查询" aria-hidden="true">#</a> 分组查询</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//        获取连接</span>
    <span class="token class-name">RestHighLevelClient</span> client <span class="token operator">=</span> <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        创建查询请求体</span>
    <span class="token class-name">SearchRequest</span> searchRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        设置查询的索引</span>
    searchRequest<span class="token punctuation">.</span><span class="token function">indices</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        创建查询规则</span>
    <span class="token class-name">SearchSourceBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchSourceBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token comment">// 设置分组查询 第一个参数 组名 第二个参数 字段名</span>
    <span class="token class-name">TermsAggregationBuilder</span> field <span class="token operator">=</span> <span class="token class-name">AggregationBuilders</span><span class="token punctuation">.</span><span class="token function">terms</span><span class="token punctuation">(</span><span class="token string">&quot;ageGroup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//        将分组查询条件添加到查询规则中</span>
    builder<span class="token punctuation">.</span><span class="token function">aggregation</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        将查询规则设置到查询请求体中</span>
    searchRequest<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        开始查询</span>
    <span class="token class-name">SearchResponse</span> search <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>searchRequest<span class="token punctuation">,</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//        获取分组结果</span>
    <span class="token class-name">Aggregation</span> ageGroup <span class="token operator">=</span> search<span class="token punctuation">.</span><span class="token function">getAggregations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;ageGroup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        获取分组结果集</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>ageGroup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">RestClientUtils</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果： 每个的数量都是1</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ageGroup&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;metadata&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;buckets&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;asMap&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsString&quot;</span><span class="token operator">:</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCount&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCountError&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsNumber&quot;</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
            <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;asMap&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsString&quot;</span><span class="token operator">:</span> <span class="token string">&quot;19&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCount&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCountError&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsNumber&quot;</span><span class="token operator">:</span> <span class="token number">19</span><span class="token punctuation">,</span>
            <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;asMap&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsString&quot;</span><span class="token operator">:</span> <span class="token string">&quot;20&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCount&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCountError&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsNumber&quot;</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
            <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;asMap&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsString&quot;</span><span class="token operator">:</span> <span class="token string">&quot;21&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCount&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCountError&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsNumber&quot;</span><span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
            <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;asMap&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsString&quot;</span><span class="token operator">:</span> <span class="token string">&quot;22&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCount&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCountError&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsNumber&quot;</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>
            <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;asMap&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsString&quot;</span><span class="token operator">:</span> <span class="token string">&quot;23&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCount&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCountError&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsNumber&quot;</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span>
            <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;asMap&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsString&quot;</span><span class="token operator">:</span> <span class="token string">&quot;24&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCount&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCountError&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsNumber&quot;</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
            <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;aggregations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;asMap&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsString&quot;</span><span class="token operator">:</span> <span class="token string">&quot;25&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCount&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;docCountError&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
            <span class="token property">&quot;keyAsNumber&quot;</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
            <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lterms&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;docCountError&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sumOfOtherDocCounts&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;fragment&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="elasticsearch环境" tabindex="-1"><a class="header-anchor" href="#elasticsearch环境" aria-hidden="true">#</a> ElasticSearch环境</h1><h2 id="单机和集群" tabindex="-1"><a class="header-anchor" href="#单机和集群" aria-hidden="true">#</a> 单机和集群</h2><p>单台ElasticSearch服务器提供服务，往往都有最大的负载能力，超过这个阀值，服务器性能就会大大降低甚至不可用，所以在生产环境中，这玩意一般都是部署在集群内</p><p>除了负载能力，单点服务器也存在其他问题</p><ul><li>单台机器容量存储有限</li><li>单台服务器容易出现单点故障， 无法实现高可用</li><li>单服务器的并发处理能力有限</li></ul><p>配置服务器集群时，集群中的节点数量没有限制，大于等于两个节点就可以看做是集群了，一般情况下都是两个以上</p><h2 id="集群cluster" tabindex="-1"><a class="header-anchor" href="#集群cluster" aria-hidden="true">#</a> 集群Cluster</h2><p>一个集群就是由一个或者多个服务器节点组织在一起，共同持有整个的数据，并一起提供索引和搜索功能，一个ElasticSearch集群有一个唯一的名字标识，这个名字默认就是<code>elasticsearch</code>，因为一个节点只能通过指定某个集群的名字，来加入这个集群</p><h2 id="节点node" tabindex="-1"><a class="header-anchor" href="#节点node" aria-hidden="true">#</a> 节点Node</h2><p>集群中包含很多服务器，一个节点就是其中一台服务器，作为集群的一部分，它存储数据，参与集群的索引和搜索功能</p><p>一个节也是由名字来标识的，默认情况下，这个名字是一个随机的<strong>漫威漫画角色名</strong>，这个名字会在启动的过程中赋予节点</p><p>例如：钢铁侠、绿巨人….</p><p>这个名字挺重要的，因为在这个管理过程中，你会去指定网络中的哪些服务器对应ElasticSearch集群中的哪些节点</p><p>一个节点可以通过配置集群名字的方式来加入一个指定的集群，默认情况下，每个节点都会被安排到一个叫做<code>elasticsearch</code>的集群中，这意味着----如果我们在网络中启动了若干个节点，并假定他们能够互相发现彼此，他们会自动的加入到一个叫做<code>elasticsearch</code>的集群内</p><h2 id="windows下部署集群" tabindex="-1"><a class="header-anchor" href="#windows下部署集群" aria-hidden="true">#</a> Windows下部署集群</h2><p>如果你之前启动过ES 那先把这两个文件夹内的所有内容都删除（这两个文件夹要留着）</p><figure><img src="`+R+`" alt="image-20220101144013286" tabindex="0" loading="lazy"><figcaption>image-20220101144013286</figcaption></figure><p>紧接着 你打开config目录下的elasticsearch.yml 会发现全都是注释 把他们全部删除掉 填入如下内容</p><p>PS 可以不用这样 写 可以像正常的写application配置那样分层的写 这里写只是为了直观看到这些内容</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 集群的名字 每个节点之间这个字段要保持一致</span>
<span class="token key atrule">cluster.name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>application

<span class="token comment"># 节点名称 在集群内是唯一的</span>
<span class="token key atrule">node.name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span><span class="token number">1001</span>
<span class="token comment"># 这个节点是否是master节点</span>
<span class="token key atrule">node.master</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">node.data</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>



<span class="token comment"># IP地址</span>
<span class="token key atrule">network.host</span><span class="token punctuation">:</span> localhost
<span class="token comment"># HTTP 监听端口</span>
<span class="token key atrule">http.port</span><span class="token punctuation">:</span> <span class="token number">7001</span>
<span class="token comment"># TCP监听端口</span>
<span class="token key atrule">transport.tcp.port</span><span class="token punctuation">:</span> <span class="token number">9301</span>

<span class="token comment"># 跨域配置</span>
<span class="token comment"># 是否允许跨域</span>
<span class="token key atrule">http.cors.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token comment"># 允许跨域的地址</span>
<span class="token key atrule">http.cors.allow-origin</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着我们正产启动 然后丢一边</p><p>再打开postman，发送get请求</p>`,33),sa={href:"http://localhost:7001/_cluster/health",target:"_blank",rel:"noopener noreferrer"},aa=a(`<p>这个命令是查询集群的健康状态</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;cluster_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-application&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// 当前节点的健康状态 green表示正常</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token comment">// 当前的节点数量</span>
    <span class="token property">&quot;number_of_nodes&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token comment">// 当前的数据节点数量</span>
    <span class="token property">&quot;number_of_data_nodes&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active_primary_shards&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active_shards&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">&quot;relocating_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;initializing_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;unassigned_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;delayed_unassigned_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_pending_tasks&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_in_flight_fetch&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;task_max_waiting_in_queue_millis&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active_shards_percent_as_number&quot;</span><span class="token operator">:</span> <span class="token number">100.0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>紧接着我们将ES 的文件夹（整个）复制一份，然后将data和logs删除。并修改yaml</p>`,3),ta=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{yaml:"",class:"language-yaml"},[n("code",null,[n("span",{class:"token comment"},"# 集群的名字 每个节点之间这个字段要保持一致"),s(`
`),n("span",{class:"token key atrule"},"cluster.name"),n("span",{class:"token punctuation"},":"),s(" my"),n("span",{class:"token punctuation"},"-"),s(`application

`),n("span",{class:"token comment"},"# 节点名称 在集群内是唯一的"),s(`
`),n("span",{class:"token key atrule"},"node.name"),n("span",{class:"token punctuation"},":"),s(" node"),n("span",{class:"token punctuation"},"-"),n("span",{class:"token number"},"1002"),s(`
`),n("span",{class:"token comment"},"# 这个节点是否是master节点"),s(`
`),n("span",{class:"token key atrule"},"node.master"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean important"},"true"),s(`
`),n("span",{class:"token key atrule"},"node.data"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean important"},"true"),s(`



`),n("span",{class:"token comment"},"# IP地址"),s(`
`),n("span",{class:"token key atrule"},"network.host"),n("span",{class:"token punctuation"},":"),s(` localhost
`),n("span",{class:"token comment"},"# HTTP 监听端口"),s(`
`),n("span",{class:"token key atrule"},"http.port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"7002"),s(`
`),n("span",{class:"token comment"},"# TCP监听端口"),s(`
`),n("span",{class:"token key atrule"},"transport.tcp.port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"9302"),s(`

`),n("span",{class:"token comment"},"# 跨域配置"),s(`
`),n("span",{class:"token comment"},"# 是否允许跨域"),s(`
`),n("span",{class:"token key atrule"},"http.cors.enabled"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean important"},"true"),s(`
`),n("span",{class:"token comment"},"# 允许跨域的地址"),s(`
`),n("span",{class:"token key atrule"},"http.cors.allow-origin"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"*"'),s(`

`),n("span",{class:"token comment"},"# 集群额外配置"),s(`
`),n("span",{class:"token comment"},"# 查找节点 这里填写第一个节点的tcp.port"),s(`
`),n("span",{class:"token key atrule"},"discovery.seed_hosts"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"localhost:9301"'),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token comment"},"# 超时时间1分钟"),s(`
`),n("span",{class:"token key atrule"},"discovery.zen.fd.ping_timeout"),n("span",{class:"token punctuation"},":"),s(` 1m
`),n("span",{class:"token comment"},"# 重新连接次数"),s(`
`),n("span",{class:"token key atrule"},"discovery.zen.fd.ping_retries"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"5"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ea=a(`<p>配置完毕后启动</p><p>然后你就能get之前第一个节点的地址 获取现在的节点数量</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;cluster_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-application&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;timed_out&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token comment">// 节点数量-2</span>
    <span class="token property">&quot;number_of_nodes&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_data_nodes&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active_primary_shards&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active_shards&quot;</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
    <span class="token property">&quot;relocating_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;initializing_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;unassigned_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;delayed_unassigned_shards&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_pending_tasks&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_in_flight_fetch&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;task_max_waiting_in_queue_millis&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;active_shards_percent_as_number&quot;</span><span class="token operator">:</span> <span class="token number">100.0</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果说还要继续添加新的节点的话</p>`,4),pa=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{yaml:"",class:"language-yaml"},[n("code",null,[n("span",{class:"token comment"},"# 集群的名字 每个节点之间这个字段要保持一致"),s(`
`),n("span",{class:"token key atrule"},"cluster.name"),n("span",{class:"token punctuation"},":"),s(" my"),n("span",{class:"token punctuation"},"-"),s(`application

`),n("span",{class:"token comment"},"# 节点名称 在集群内是唯一的"),s(`
`),n("span",{class:"token key atrule"},"node.name"),n("span",{class:"token punctuation"},":"),s(" node"),n("span",{class:"token punctuation"},"-"),n("span",{class:"token number"},"1003"),s(`
`),n("span",{class:"token comment"},"# 这个节点是否是master节点"),s(`
`),n("span",{class:"token key atrule"},"node.master"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean important"},"true"),s(`
`),n("span",{class:"token key atrule"},"node.data"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean important"},"true"),s(`



`),n("span",{class:"token comment"},"# IP地址"),s(`
`),n("span",{class:"token key atrule"},"network.host"),n("span",{class:"token punctuation"},":"),s(` localhost
`),n("span",{class:"token comment"},"# HTTP 监听端口"),s(`
`),n("span",{class:"token key atrule"},"http.port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"7003"),s(`
`),n("span",{class:"token comment"},"# TCP监听端口"),s(`
`),n("span",{class:"token key atrule"},"transport.tcp.port"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"9303"),s(`

`),n("span",{class:"token comment"},"# 跨域配置"),s(`
`),n("span",{class:"token comment"},"# 是否允许跨域"),s(`
`),n("span",{class:"token key atrule"},"http.cors.enabled"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token boolean important"},"true"),s(`
`),n("span",{class:"token comment"},"# 允许跨域的地址"),s(`
`),n("span",{class:"token key atrule"},"http.cors.allow-origin"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"*"'),s(`

`),n("span",{class:"token comment"},"# 集群额外配置"),s(`
`),n("span",{class:"token comment"},"# 查找节点 这里填写之前节点的tcp端口"),s(`
`),n("span",{class:"token key atrule"},"discovery.seed_hosts"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"localhost:9301"'),n("span",{class:"token punctuation"},","),n("span",{class:"token string"},'"localhost:9302"'),n("span",{class:"token punctuation"},"]"),s(`
`),n("span",{class:"token comment"},"# 超时时间1分钟"),s(`
`),n("span",{class:"token key atrule"},"discovery.zen.fd.ping_timeout"),n("span",{class:"token punctuation"},":"),s(` 1m
`),n("span",{class:"token comment"},"# 重新连接次数"),s(`
`),n("span",{class:"token key atrule"},"discovery.zen.fd.ping_retries"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"5"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),oa=n("h2",{id:"linux下的es的安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#linux下的es的安装","aria-hidden":"true"},"#"),s(" Linux下的ES的安装")],-1),ca={href:"https://www.elastic.co/cn/downloads/elasticsearch",target:"_blank",rel:"noopener noreferrer"},la=a(`<p>下载linux x86-64的即可</p><p>可以选择下载好了后发过去</p><p>这玩意是不允许在root用户下使用的，所以要自行先创建一个子用户</p><p>如果对自己的服务器速率比较自信的 可以直接在linux下载</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> elasticsearch <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> ./elasticsearch
<span class="token function">wget</span> https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.16.2-linux-x86_64.tar.gz <span class="token parameter variable">-O</span> <span class="token string">&quot;elasticsearch.tar.gz&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后解压缩到当前目录下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> elasticsearch.tar.gz
<span class="token comment"># 然后用mv改个名 例如改成es</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后你就能看到 和windows一样的文件</p><figure><img src="`+B+`" alt="image-20220101155626598" tabindex="0" loading="lazy"><figcaption>image-20220101155626598</figcaption></figure><p>你在这一部可以先按照之前为windows的方式改动配置</p><p>改动yaml完毕之后 还需要额外增加个配置</p><p>用有权限的用户：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/security/limits.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在末尾添加如下内容 这一步是增加这个用户的最大打开文件数量</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment"># 第一个是用户名 第四个是数量 这个数量按照自己的心情写即可</span>
es soft nofile 65536
es hard nofile 65536
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着 还要修改下另外一个玩意</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token function">sudo</span> <span class="token function">vi</span> /etc/sysctl.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>增加一个话</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token comment"># 一个进程可以拥有的vam虚拟机内存区域的数量 默认是65536</span>
<span class="token key attr-name">vm.max_map_count</span><span class="token punctuation">=</span><span class="token value attr-value">655350</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>以上修改完毕后重载即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sysctl</span> <span class="token parameter variable">-p</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接着 cd到es文件夹 <code>./bin/elasticsearch</code>即可启动</p><p>也可以加参数 <code>elasticsearch -d</code> 后台启动</p><p>反正启动的时候没有报错就是大成功</p><p>我这里并没有修改yaml</p><p>所以是9300端口访问</p><p>这里你如果是多机运行的话 可以先去了解下hadoop 里面有个xsync可以方便的传输文件（以后也得学）</p><p>接着 我们的配置文件需要变动一下</p><p>如果是多个主机 ，唯一需要变动的只有node.name和discovery.seed_hosts的地址</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 集群的名字 每个节点之间这个字段要保持一致</span>
<span class="token key atrule">cluster.name</span><span class="token punctuation">:</span> my<span class="token punctuation">-</span>application

<span class="token comment"># 节点名称 在集群内是唯一的</span>
<span class="token key atrule">node.name</span><span class="token punctuation">:</span> node<span class="token punctuation">-</span><span class="token number">1001</span>
<span class="token comment"># 是不是有资格主节点</span>
<span class="token key atrule">node.master</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">node.data</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>


<span class="token comment"># IP地址</span>
<span class="token key atrule">network.host</span><span class="token punctuation">:</span> localhost
<span class="token comment"># HTTP 监听端口</span>
<span class="token key atrule">http.port</span><span class="token punctuation">:</span> <span class="token number">7003</span>
<span class="token comment"># TCP监听端口</span>
<span class="token key atrule">transport.tcp.port</span><span class="token punctuation">:</span> <span class="token number">9303</span>

<span class="token comment"># 跨域配置</span>
<span class="token comment"># 是否允许跨域</span>
<span class="token key atrule">http.cors.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token comment"># 允许跨域的地址</span>
<span class="token key atrule">http.cors.allow-origin</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>


<span class="token comment">##### 节点的配置</span>

<span class="token comment"># 集群额外配置</span>
<span class="token comment"># 初始化一个新的集群时，通过下面这一个配置来选举master节点</span>
<span class="token key atrule">cluster.initial_master_nodes</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node1&quot;</span><span class="token punctuation">]</span>

<span class="token comment"># 节点发现 </span>
<span class="token key atrule">discovery.seed_hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;localhost:9301&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;localhost:9302&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;localhost:9303&quot;</span><span class="token punctuation">]</span>
<span class="token key atrule">gateway.recover_after_nodes</span><span class="token punctuation">:</span> <span class="token number">2</span>
<span class="token key atrule">network.tcp.keep_alive</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">network.tcp.no_delay</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">transport.tcp.compress</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

<span class="token comment"># 集群内同时启动的数据任务个数 默认是2个</span>
<span class="token key atrule">cluster.routing.allocation.cluster_concurrent_rebalance</span><span class="token punctuation">:</span> <span class="token number">16</span>
<span class="token comment"># 添加或删除节点及负载均衡时并发恢复的线程个数 默认是4个</span>
<span class="token key atrule">cluster.routing.allocation.node_concurrent_recoveries</span><span class="token punctuation">:</span> <span class="token number">16</span>
<span class="token comment"># 初始化数据恢复时，并发恢复的线程个数，默认是4个</span>
<span class="token key atrule">cluster.routing.allocation.node_initial_primaries_recoveries</span><span class="token punctuation">:</span> <span class="token number">16</span>


<span class="token comment"># 超时时间1分钟</span>
<span class="token key atrule">discovery.zen.fd.ping_timeout</span><span class="token punctuation">:</span> 1m
<span class="token comment"># 重新连接次数</span>
<span class="token key atrule">discovery.zen.fd.ping_retries</span><span class="token punctuation">:</span> <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后访问任意一个节点</p><p>例如：<code>localhost:9200/_cat/nodes</code>即可看到所有节点的信息</p><p>Docker更简单些 只需要制定配置文件就行了，这里就不做演示</p><p>PS：这玩意的内存开销比较大 不建议在一台服务器上跑多个…</p><h2 id="原理分析" tabindex="-1"><a class="header-anchor" href="#原理分析" aria-hidden="true">#</a> 原理分析</h2><h3 id="单节点集群和故障转移" tabindex="-1"><a class="header-anchor" href="#单节点集群和故障转移" aria-hidden="true">#</a> 单节点集群和故障转移</h3><p>我们先启动windows上的es，启动两个</p><p>node-1和node-2</p><p>端口分别为7001和7002</p>`,39),ia={href:"http://localhost:7001/user/",target:"_blank",rel:"noopener noreferrer"},ua=a(`<p>请求体内容如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;number_of_shards&quot;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span>
        <span class="token property">&quot;number_of_replicas&quot;</span><span class="token operator">:</span><span class="token number">1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里是设置分片数量，就类似于数据库的中的表一样，shards设置总数量，replicas设置每个分片的备份数量</p><p>接下来 get</p>`,4),ra={href:"http://localhost:7001/user",target:"_blank",rel:"noopener noreferrer"},ka=a(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;aliases&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;mappings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token property">&quot;routing&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;allocation&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                            <span class="token property">&quot;_tier_preference&quot;</span><span class="token operator">:</span> <span class="token string">&quot;data_content&quot;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token comment">//分片数量</span>
                <span class="token property">&quot;number_of_shards&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;provided_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;creation_date&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1641029070478&quot;</span><span class="token punctuation">,</span>
                <span class="token comment">// 每个分片的备份数量</span>
                <span class="token property">&quot;number_of_replicas&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PLcCWftvTFKHYHieXF65vg&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token property">&quot;created&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7160299&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在我们的集群时一个拥有索引的单节点集群，所有的三个主分片都被分配在node-1</p><figure><img src="`+T+'" alt="image-20220101172832461" tabindex="0" loading="lazy"><figcaption>image-20220101172832461</figcaption></figure><p>PS: chrome可以通过安装浏览器插件-<code>elasticsearch-head</code>查看当前的集群情况</p><p>安装完毕后打开扩展页面输入地址即可访问</p><figure><img src="'+A+'" alt="image-20220101173306779" tabindex="0" loading="lazy"><figcaption>image-20220101173306779</figcaption></figure><figure><img src="'+C+'" alt="image-20220101173401682" tabindex="0" loading="lazy"><figcaption>image-20220101173401682</figcaption></figure><p>如果说遇到这个黄色的健康值，其实就是在告诉你 你没有留有兜底操作</p><p>也就是说你的主节点数据没有共享到其他的从节点上，所以我们只需要启动好从节点就不会遇到这样的问题了</p>',9),da={href:"http://xn--cluster-m73k48bo70a0ka84c927k3pdm55bbnt9s0c8k0a.name",target:"_blank",rel:"noopener noreferrer"},ma=a('<figure><img src="'+U+'" alt="image-20220101173930464" tabindex="0" loading="lazy"><figcaption>image-20220101173930464</figcaption></figure><h3 id="水平扩容" tabindex="-1"><a class="header-anchor" href="#水平扩容" aria-hidden="true">#</a> 水平扩容</h3><p>人话来说就是 如果说我们启动了三个节点的集群，那么副本和朱分片将会均匀的分配到这三个节点上</p><p>例如 现在我们的user 三个分片 每个分片有一个副本 总计六个副本</p><ul><li>只有一个节点的情况 <ul><li>三主三副都在同一个节点上</li></ul></li><li>有两个节点 <ul><li>三个主在1，三个副在2</li></ul></li><li>有三个节点 <ul><li>均匀分配到三个节点上，将会这样：</li></ul></li></ul><figure><img src="'+z+'" alt="image-20220101174438104" tabindex="0" loading="lazy"><figcaption>image-20220101174438104</figcaption></figure><figure><img src="'+D+'" alt="image-20220101174510432" tabindex="0" loading="lazy"><figcaption>image-20220101174510432</figcaption></figure><p>这样看来 我们理论可以扩容到六个，让所有分片均匀分配在每一个节点上</p><p>但是，如果我们想要扩容超过六个节点该怎么办呢？</p><p><strong>主分片的数目在索引创建的时候就已经确定下来了，是不可以更改的</strong>，实际上，这个数目定义了这个索引能够存储的最大数量</p><p>（实际取决于数据、硬件和使用场景）</p><p>但是，读操作---搜索和返回数据都可以同时被主分片或附分片或副本分片处理，所以当我们拥有越多的副本分片时，也将拥有更高的吞吐量</p><p>在运行中的集群上是可以动态调整副本分片的数量的，我们可以按需伸缩集群，让我们把默认的副本数从1增加到2</p>',13),va={href:"http://localhost:7001/user/_settings",target:"_blank",rel:"noopener noreferrer"},ba=a(`<p>请求体内容</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;number_of_replicas&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就可以修改副本分片的数量</p><p>接下来我们如果值开两个node访问 就会发现</p><figure><img src="`+O+'" alt="image-20220101175259556" tabindex="0" loading="lazy"><figcaption>image-20220101175259556</figcaption></figure><p>标黄了，说明总共要有九个分片，也就是三个节点才可以完成这个操作</p><p>我们的User索引现在拥有9个分片---三个主分片和6个附分片，这意味着我们可以将集群扩容到九个节点，每个节点上一个分片，相比较于原来的三个分片，集群搜索性能可以提升三倍..</p><h3 id="应对故障" tabindex="-1"><a class="header-anchor" href="#应对故障" aria-hidden="true">#</a> 应对故障</h3><p>我们的节点随时都有概率挂掉</p><p>我们现在启动三个节点 并且创建一个主3 附2*3的索引</p><p>注意 这里使用的配置文件yaml是之前在linux系统安装中写的那一套</p><figure><img src="'+I+'" alt="image-20220101182737565" tabindex="0" loading="lazy"><figcaption>image-20220101182737565</figcaption></figure><p>但如果此时我们将node-1关了 或者说它宕机了</p><figure><img src="'+M+'" alt="image-20220101183040589" tabindex="0" loading="lazy"><figcaption>image-20220101183040589</figcaption></figure><p>连接他是没有任何东西产生</p><p>接下来连接node2看看是什么情况</p><p>可以发现两件事情</p><figure><img src="'+L+'" alt="image-20220101183155747" tabindex="0" loading="lazy"><figcaption>image-20220101183155747</figcaption></figure><p>node-2变成了主节点，并且依旧存在副本</p><p>这有点像是redis的哨兵…自动易主 我曹高端</p><p>接下来重启node-1</p><p>可以发现他边成了从节点</p><figure><img src="'+P+'" alt="image-20220101183350793" tabindex="0" loading="lazy"><figcaption>image-20220101183350793</figcaption></figure><h3 id="路由计算和分片控制" tabindex="-1"><a class="header-anchor" href="#路由计算和分片控制" aria-hidden="true">#</a> 路由计算和分片控制</h3><p>插入是这种方式插入的 这也叫做路由计算</p><figure><img src="'+H+'" alt="image-20220101201724622" tabindex="0" loading="lazy"><figcaption>image-20220101201724622</figcaption></figure><p>然后因为附分片均匀的分配在这些node上，并且主分片会自动复制内容到负分片 所以无论访问哪个都能查询得到数据</p><p>这就是分片控制：用户可以访问任意一个节点获取数据，这个节点称之为协调节点</p><figure><img src="'+G+'" alt="image-20220101202100665" tabindex="0" loading="lazy"><figcaption>image-20220101202100665</figcaption></figure><p>然后 这之中 是通过轮循操作来进行负载均衡（例如node-1此时超多用户访问 你再去查询 它将会将你这个请求转发到node-2，让node-2来处理你的请求，这些都是封装好了的）</p><h3 id="数据写流程" tabindex="-1"><a class="header-anchor" href="#数据写流程" aria-hidden="true">#</a> 数据写流程</h3><figure><img src="'+F+'" alt="image-20220101202645937" tabindex="0" loading="lazy"><figcaption>image-20220101202645937</figcaption></figure><p>客户端收到响应的时候，文档变更已经在主分片和所有副本分片执行完成，变更是安全的</p><p><strong>有一些可选的请求参数会影响这个过程</strong>，这些请求参数可能是以数据安全为代价提升性能（例如让主分片存储完成就发送反馈，存储到副本分片的事情之后慢慢处理）</p><p>这些选项很少使用，因为ElasticSearch已经很快了，但是为了完整起见，可以参考下方表格</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>consistency</td><td>和名字一样，一致性的意思，即使是在试图执行一个写操作之前<br>主分片都会要求，必须有规定数量（也就是大多数）的分片副本处于活跃可用状态<br>才会去执行写操作（其中分片副本可以是主分片或者副本分片）<br>这是为了避免在发生网络故障的时候进行写操作，进而导致数据不一致<br>规定数量：<code>int (pirmary+number_of_repilcas)/2+1</code><br>consistency的参数可以设置为<br><code>ONE</code>（主要主分片状态OK就允许执行写操作）<br><code>ALL</code>（必须要主分片和所有副本分片的状态没问题才允许执行写操作）<br>或者<br><code>quorum</code>---默认值--大多数的分片副本没问题的情况下就允许执行写操作(50%+)<br>注意 number_of_repilcas指的是在索引设置中设定的副本分片数<br>而不是指当前处理活动状态的分片数<br>如果在索引中指定了当前索引拥有三个副本分片，那规定数量的计算结果即：<br><code>int (primary+3)/2+1=3</code><br>如果这个时候我们只有两个节点，那么处于活跃部分的分片数量就达不到规定数量<br>因此将无法索引和删除任何文档</td></tr><tr><td>timeout</td><td>如果没有足够的副本分片时，ElasticSearch将会等待，希望更多分片出现<br>在默认情况下，它最多等待一分钟<br>如果需要，可以使用timeout参数让它更早的终止<br>例如： 10000=10000毫秒 30s= 30秒</td></tr></tbody></table><h3 id="数据读流程" tabindex="-1"><a class="header-anchor" href="#数据读流程" aria-hidden="true">#</a> 数据读流程</h3><figure><img src="'+N+'" alt="image-20220101204729315" tabindex="0" loading="lazy"><figcaption>image-20220101204729315</figcaption></figure><h3 id="更新流程和批量处理流程" tabindex="-1"><a class="header-anchor" href="#更新流程和批量处理流程" aria-hidden="true">#</a> 更新流程和批量处理流程</h3><figure><img src="'+V+'" alt="image-20220101204831947" tabindex="0" loading="lazy"><figcaption>image-20220101204831947</figcaption></figure><p>更新一个文档的步骤如下：</p><ol><li><p>客户端向Node1发送请求</p></li><li><p>它将请求转发到主分片所在的Node3</p></li><li><p>Node3 此时可能还有别的线程正在写（内部通过锁来控制，需要抢占锁）</p><ol><li>如果没有抢到，则继续抢，直到抢到了为止</li></ol></li><li><p>如果Node3成功更新文档，它将新版本的文档并行转发到Node1和Node2上的副本分片，重新建立索引，一旦部分分片都返回成功，Node3向协调节点也返回成功，协调节点向客户端返回成功</p><ul><li>当主分片把更该转发到副本时，他不会转发更新请求</li><li>相反，他转发完整的更新文档</li><li>这些更改将会异步转发的附分片，并且不能保证他们相同的顺序到达</li><li>如果ES仅仅转发更该请求，则可能以错误的顺序更该，从而得到损坏的文档 <ul><li>如果说是转发-则副本分片又会转发到主分片上--无线套娃，栈溢出警告</li></ul></li></ul><blockquote><p>多文档处理流程的话和单文档差不多，区别在于协调节点知道每个文档存在于哪个分片中</p></blockquote><p>它将整个多文档请求分解成 每个分片 的多文档请求，并且将这些数据并行转发到每个参与节点</p><p>协调节点一旦收到来自每个节点的应答，就会将每个节点的响应数据整理成单个响应，返回给客户端</p><figure><img src="'+Q+'" alt="image-20220101205733691" tabindex="0" loading="lazy"><figcaption>image-20220101205733691</figcaption></figure><p>核心流程和单文档修改是完全一致的</p></li></ol><h3 id="分片原理和倒排索引" tabindex="-1"><a class="header-anchor" href="#分片原理和倒排索引" aria-hidden="true">#</a> 分片原理和倒排索引</h3><blockquote><p>分片是ES最小工作单元</p><p>传统的数据库对每个字段存储单个值，但这对全文检索并不够，文本字段中的每个单词需要被搜索，对数据库意味着需要对单个字段有索引多值的能力</p><p>最好的支持是一个字段多个值，需求的数据结构是<strong>倒排结构</strong></p></blockquote><p>ES使用的一种称为<strong>倒排索引</strong>的结构，它适用于快速的全文搜索</p><p>如其名，有倒排索引，必然有正向索引</p><p>正向索引(Forward index)，反向索引（Inverted index）更熟悉的名字是倒排索引</p><p>倒排索引有三个核心概念</p><ul><li>词条：索引中最小存储和查询的单元 <ul><li>在英文环境中，一般是一个单词 在中文环境中一般是一个词组</li></ul></li><li>词典：字典，词条的集合，会有两种结构来进行结合 <ul><li>B+数</li><li>HashMap</li></ul></li><li>倒排表：记录了出现过的某个单词的所有文档列表及单词在该文档中出现的位置信息 <ul><li>每条记录称之为一个倒排项</li><li>根据倒排列表，可以获知哪些文档包含哪个单词</li><li>这玩意并不算存放了一个文档ID这么简单，还有一些其他信息 <ul><li>词频（词条出现的次数）</li><li>偏移量（Offset）</li><li>可以理解成是一个Java中实体对象，，，不对 貌似ES就是Java写的 本身存储的就是Java实体对象</li></ul></li></ul></li></ul><p>例如我们存放一个用户数据</p><figure><img src="'+J+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>则ES将会帮我们存储为：</p><ul><li>Name字段<br><img src="'+K+'" alt="img" loading="lazy"></li><li>Age字段<br><img src="'+X+'" alt="img" loading="lazy"></li><li>gender字段<br><img src="'+W+'" alt="img" loading="lazy"></li><li>address字段<br><img src="'+Y+'" alt="img" loading="lazy"></li></ul><blockquote><p>Es分别为每个字段都建立了一个倒排索引</p><p>比如：在上面，张三、北京、22这些都是词条，而[1，3]是倒排列表</p><p>倒排列表是一个组数，存储了符合某个Term的文档ID</p><p>只要知道文档ID，就能快速找到文档</p></blockquote><p>可是，该怎么样通过我们给定的关键词快速的找到这个词条呢？</p><p>当然是建立索引了，为Terms建立索引</p><p>最好的就是B—Tree，B树</p><p>这玩意大概是这样的</p><figure><img src="'+Z+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>在倒排索引中，通过Term索引可以找到Term在Term Dictionary中的位置，进而找到Posting List，有了倒排列表就可以根据ID找到文档了</p><p>emm大概流程应该是这样</p><figure><img src="'+$+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><figure><img src="'+nn+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>就是分两个地方存储数据，查询的时候两个地方都查，查询结果是两个查询的并集，相当于mysql中的union all</p><h3 id="文档搜索-索引更新规则" tabindex="-1"><a class="header-anchor" href="#文档搜索-索引更新规则" aria-hidden="true">#</a> 文档搜索-索引更新规则</h3><p>早期的全文检索会为整个文档集合建立一个很大的倒排索引并将其写入到磁盘。 一旦新的索引就绪，旧的就会被其替换，这样最近的变化便可以被检索到。</p><p>倒排索引被写入磁盘后是不可改变的：<strong>它永远不会修改</strong>。</p><ul><li>不需要锁。如果你从来不更新索引，你就不需要担心多进程同时修改数据的问题。</li><li>一旦索引被读入内核的文件系统缓存，便会留在哪里，由于其不变性。只要文件系统缓存中还有足够的空间，那么大部分读请求会直接请求内存，而不会命中磁盘。这提供了很大的性能提升。</li><li>其它缓存(像filter缓存)，在索引的生命周期内始终有效。它们不需要在每次数据改变时被重建，因为数据不会变化。</li><li>写入单个大的倒排索引允许数据被压缩，减少磁盘IO和需要被缓存到内存的索引的使用量。</li></ul><p>当然，一个不变的索引也有不好的地方。主要事实是它是不可变的! 你不能修改它。如果你需要让一个新的文档可被搜索，你需要重建整个索引。这要么对一个索引所能包含的数据量造成了很大的限制，要么对索引可被更新的频率造成了很大的限制。</p><blockquote><p>如何在保留不变性的前提下实现倒排索引的更新？</p></blockquote><p>答案是：用更多的索引。<strong>通过增加新的补充索引来反映新近的修改，而不是直接重写整个倒排索引</strong>。每一个倒排索引都会被轮流查询到,从最早的开始查询完后再对结果进行合并。</p><p>Elasticsearch基于Lucene，这个java库引入了按段搜索的概念。</p><p>每一段本身都是一个倒排索引，但索引在 Lucene 中除表示所有段的集合外，还增加了提交点的概念—一个<strong>列出了所有已知段的文件</strong>。</p><figure><img src="'+sn+'" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>按段搜索会以如下流程执行：</p><ol><li>新文档被收集到内存索引缓存<br><img src="'+an+'" alt="img" loading="lazy"></li><li>不时地, 缓存被提交 <ul><li>一个新的段，一个追加的倒排索引，被写入磁盘。</li><li>一个新的包含新段名字的提交点被写入磁盘。</li><li>磁盘进行同步，所有在文件系统缓存中等待的写入都刷新到磁盘，以确保它们被写入物理文件</li></ul></li><li>新的段被开启，让它包含的文档可见以被搜索。</li><li>内存缓存被清空，等待接收新的文档。<br><img src="'+tn+`" alt="img" loading="lazy"></li></ol><blockquote><p>当一个查询被触发，所有已知的段按顺序被查询。词项统计会对所有段的结果进行聚合，以保证每个词和每个文档的关联都被准确计算。这种方式可以用相对较低的成本将新文档添加到索引。</p></blockquote><p>段是不可改变的，所以既不能从把文档从旧的段中移除，也不能修改旧的段来进行反映文档的更新。取而代之的是，每个提交点会包含一个.del 文件，文件中会列出这些被删除文档的段信息。</p><p>当一个文档被<code>删除</code>时</p><ul><li>它实际上只是在 .del 文件中被标记删除</li><li>一个被标记删除的文档仍然可以被查询匹配到，但它会在最终结果被返回前从结果集中移除（ES会自动过滤掉）。</li></ul><p>文档更新也是类似的操作方式:</p><ul><li>当一个文档被<code>更新</code>时，旧版本文档被标记删除，文档的新版本被索引到一个新的段中</li><li>可能两个版本的文档都会被一个查询匹配到，但被删除的那个旧版本文档在结果集返回前就已经被移除。</li></ul><h3 id="文档分析" tabindex="-1"><a class="header-anchor" href="#文档分析" aria-hidden="true">#</a> 文档分析</h3><p>包含下面的流程</p><ul><li>将一块文本分成合适的用于倒排索引的独立的词条</li><li>将这些词条统一话为标准格式以提高他们的可搜索性，或者reacall分析器执行上面的操作，分析器实际上是将三个功能分装到了一个包内 <ul><li>字符过滤器 <ul><li>首先，字符按顺序通过每个字符过滤器，他们的任务是在分词前整理字符串，一个字符过滤器可以用来去掉HTML，或者将&amp;转换为and</li></ul></li><li>分词器 <ul><li>其次，字符串被分词器分为单个的词条，一个简单的分词器遇到空格和标点的时候，可能会将文本拆分成词条</li></ul></li><li>Token过滤器 <ul><li>最后，此条按照顺序通过每个Token过滤器，这个过程可能会改变词条（例如：小写化Quick）、删除词条（例如，像，and，the等无用词）或者增加词条（例如：jump和leap这种同义词）</li></ul></li></ul></li></ul><h3 id="内置分析器" tabindex="-1"><a class="header-anchor" href="#内置分析器" aria-hidden="true">#</a> 内置分析器</h3><p>ES还附带了可以直接使用的预包装分析器</p><blockquote><p>我们准备一段话 <code>Set the shape to semi-transparent by calling set_trans(5)</code></p></blockquote><ul><li>标准分析器 <ul><li>ES默认使用的分析器，它是分析各种语言文本最常用的选择，它根据Unicode联盟定义的单词边界来划分文本，删除绝大部分标点，最后，将词条小写</li><li>上面 那段话通过它解析后： <ul><li><code>[set,the,shape,to,semi,transparent,by,calling,set,trans,5]</code></li></ul></li></ul></li><li>简单分析器 <ul><li>这玩意在任何不是字母的地方分割文本，将词条小写，他会产生： <ul><li><code>[set,the,shape,to,semi,transparent,by,calling,set,trans,5]</code></li></ul></li></ul></li><li>空格分析器 <ul><li>将空格在的地方划分文本，它会产生 <ul><li><code>[Set,the,shape,to,semi-transparent,by,calling,set_trans(5)]</code></li></ul></li></ul></li><li>语言分析器 <ul><li>特定语言分析器可用于很多语言</li><li>他们可以考虑指定语言的特点 <ul><li>例如英语分析器附带了一组英语无用词：像and或者the，他们对关键性没有多少印象</li><li>这些玩一会被删除，由于理解英语语法的规则，这个分词器可以提取英语单词的词干</li></ul></li><li>使用它会产生如下词条 <ul><li><code>[set,shape,semi,transpar,call,set_tran,5]</code></li></ul></li></ul></li></ul><h3 id="分析器的使用场景" tabindex="-1"><a class="header-anchor" href="#分析器的使用场景" aria-hidden="true">#</a> 分析器的使用场景</h3><blockquote><p>当我们索引一个文档，它的全文域将被分析器词条以用来创建倒排索引</p><p>但是，当我们在全文搜索域搜索的时候，我们需要将查询字符串通过相同的分析过程，以保证我们搜索的词条格式与索引中的词条格式一致</p></blockquote><p>全文查询，理解每个域是如何定义的，因此他们可以做正确的事：</p><ul><li>当查询一个<strong>全文</strong>域时，会对查询字符串应用相同的分析器，以产生正确的搜索词条列表</li><li>当查询一个 <strong>精确值</strong> 域时，不会分析查询字符串，而是搜索你指定的精确值。</li></ul><h4 id="测试分析器" tabindex="-1"><a class="header-anchor" href="#测试分析器" aria-hidden="true">#</a> 测试分析器</h4><p>有些时候很难理解分词的过程和实际被存储到索引中的词条，特别是你刚接触 Elasticsearch。为了理解发生了什么，你可以使用 analyze API 来看文本是如何被分析的。 在消息体里，指定分析器和要分析的文本</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>GET http://localhost:9200/_analyze
{
 &quot;analyzer&quot;: &quot;standard&quot;,
 &quot;text&quot;: &quot;Text to analyze&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果中的每个元素代表一个单独的词条</p><p>position指明该词条在原始文本中出现的位置</p><p>start_offset和end_offset指明字符在原始字符串中的位置</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;tokens&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;to&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;analyze&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="指定分词器" tabindex="-1"><a class="header-anchor" href="#指定分词器" aria-hidden="true">#</a> 指定分词器</h3><p>当ES在我们的文档中检测到一个新的字符串域，它会自动设置为一个全文字符串域，使用标准的分析器对他进行分析</p><p>我们不希望总是这样，可能我们想使用一个不同的分析器，适用于我们的数据的语言</p><p>有时我们希望一个字符串就是一个字符串域，不适用分析器，直接索引传入的精确的值，例如用户ID或者一个内部的状态域标签，要做到这一点，我们必须手动指定这些域的映射</p><h3 id="ik分词器" tabindex="-1"><a class="header-anchor" href="#ik分词器" aria-hidden="true">#</a> IK分词器</h3><p>首先我们通过POSTMan发送Get请求查询分词效果</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>GET http://localhost:9200/_analyze
{
 &quot;analyzer&quot;: &quot;standard&quot;,
 &quot;text&quot;: &quot;测试单词&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以发现使用默认的分词器（那个analyzer可以省略掉 效果一样的）</p><p>获取的值 是这样的 四个字都被拆分了，但实际上我们希望的是 测试是一个词，单词是一个词</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;tokens&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;测&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;试&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;单&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;词&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个时候我们就可以用到IK分词器了</p><p>仓库地址</p>`,112),ga={href:"https://github.com/medcl/elasticsearch-analysis-ik/tree/master",target:"_blank",rel:"noopener noreferrer"},qa=a('<p>进入releases页面下载最新的即可</p><p>下载后解压到ES的plugins文件夹内 重启ES即可使用</p><figure><img src="'+en+'" alt="image-20220101222326958" tabindex="0" loading="lazy"><figcaption>image-20220101222326958</figcaption></figure><p>接下里我们的分词器将会多两个选项</p><ul><li><code>ik_max_word</code>:会将文本做最细粒度的拆分</li><li><code>ik_smart</code>:会将文本做最粗粒度的拆分</li></ul><p>效果 这两个都差不多 具体可以自己测试</p><figure><img src="'+pn+`" alt="image-20220101222642674" tabindex="0" loading="lazy"><figcaption>image-20220101222642674</figcaption></figure><h4 id="自己扩展词汇" tabindex="-1"><a class="header-anchor" href="#自己扩展词汇" aria-hidden="true">#</a> 自己扩展词汇</h4><p>例如</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>GET http://localhost:9200/_analyze
{
 &quot;analyzer&quot;: &quot;ik_max_word&quot;,
 &quot;text&quot;: &quot;我是神里绫华的狗&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我希望神里绫华是一个词..但是实际上她被拆分成了四个词</p><p>所以我们需要自己来扩展词汇</p><p>我们先进入到plugins下的ik文件夹，进入其config目录</p><p>创建<code>custom.dic</code>文件，写入神里绫华</p><p>同时打开<code>IKAnalyzer.cfg.xml</code>文件，将custom.dic配置在其中，然后重启ES服务器</p><figure><img src="`+on+'" alt="image-20220101223433557" tabindex="0" loading="lazy"><figcaption>image-20220101223433557</figcaption></figure><figure><img src="'+cn+`" alt="image-20220101223558096" tabindex="0" loading="lazy"><figcaption>image-20220101223558096</figcaption></figure><p>接着重启后，我们就可以成为神里绫华的狗了</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>GET http://localhost:9200/_analyze
{
 &quot;analyzer&quot;: &quot;ik_max_word&quot;,
 &quot;text&quot;: &quot;我是神里绫华的狗&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+ln+`" alt="image-20220101223843621" tabindex="0" loading="lazy"><figcaption>image-20220101223843621</figcaption></figure><h3 id="自定义分析器" tabindex="-1"><a class="header-anchor" href="#自定义分析器" aria-hidden="true">#</a> 自定义分析器</h3><p>虽然 Elasticsearch 带有一些现成的分析器，然而在分析器上 Elasticsearch 真正的强大之 处在于，你可以通过在一个适合你的特定数据的设置之中组合字符过滤器、分词器、词汇单 元过滤器来创建自定义的分析器。在 分析与分析器 我们说过，一个 分析器 就是在一个包 里面组合了三种函数的一个包装器， 三种函数按照顺序被执行</p><blockquote><p>字符过滤器</p></blockquote><p>字符过滤器 用来 整理 一个尚未被分词的字符串。</p><ul><li>例如，如果我们的文本是 HTML 格式的，它会包含像<code>&lt;p&gt;</code>或者<code>&lt;div&gt;</code>这样的 HTML 标签，这些标签是我们不想索引的。</li></ul><p>我们可以使用 html 清除 字符过滤器 来移除掉所有的 HTML 标签，并且像把<code>&amp;Aacute;</code>转换为相对应的 Unicode 字符<code>Á</code>这样，转换 HTML 实体。</p><p>一个分析器可能有 0 个或者多个字符过滤器。</p><blockquote><p>分词器</p></blockquote><p>一个分析器 必须 有一个唯一的分词器。</p><p>分词器把字符串分解成单个词条或者词汇单元。</p><p>标准分析器里使用的 标准 分词器 把一个字符串根据单词边界分解成单个词条，并 且移除掉大部分的标点符号，然而还有其他不同行为的分词器存在。</p><p>例如</p><ul><li><p>关键词 分词器 完整地输出 接收到的同样的字符串，并不做任何分词。</p></li><li><p>空格 分词 器 只根据空格分割文本 。</p></li><li><p>正则 分词器 根据匹配正则表达式来分割文本 。</p></li></ul><blockquote><p>词单元过滤器</p></blockquote><p>经过分词，作为结果的 词单元流 会按照指定的顺序通过指定的词单元过滤器 。</p><p>词单元过滤器可以修改、添加或者移除词单元。</p><p>我们已经提到过 lowercase 和 stop 词过滤 器 ，但是在 Elasticsearch 里面还有很多可供选择的词单元过滤器。</p><p>词干过滤器 把单词遏制为词干。</p><p>ascii_folding 过滤器移除变音符，把一个像 &quot;très&quot; 这样的词转换为 &quot;tres&quot; 。</p><p>ngram 和 edge_ngram 词单元过滤器 可以产生 适合用于部分匹配或者自动补全的词单元。</p><p>接下来，我们看看如何创建自定义的分析器：</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>PUT http://localhost:9200/my_index
{
    &quot;settings&quot;: {
        &quot;analysis&quot;: {
            &quot;char_filter&quot;: {
             // 自定义的过滤操作
                &quot;&amp;_to_and&quot;: {
                    &quot;type&quot;: &quot;mapping&quot;,
                    &quot;mappings&quot;: [ &quot;&amp;=&gt; and &quot;]
                }},
            &quot;filter&quot;: {
             // 停用的过滤操作
                &quot;my_stopwords&quot;: {
                    &quot;type&quot;: &quot;stop&quot;,
                    &quot;stopwords&quot;: [ &quot;the&quot;, &quot;a&quot; ]
                }},
            &quot;analyzer&quot;: {
                &quot;my_analyzer&quot;: {
                    &quot;type&quot;: &quot;custom&quot;,
                    //过滤器
                    &quot;char_filter&quot;: [ &quot;html_strip&quot;, &quot;&amp;_to_and&quot; ],
                    &quot;tokenizer&quot;: &quot;standard&quot;,
                   //分词器
                   &quot;filter&quot;: [ &quot;lowercase&quot;, &quot;my_stopwords&quot; ]
                }}
        }
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来测试下</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>GET http://localhost:9200/my_index/_analyze
{
    &quot;text&quot;:&quot;The quick &amp; brown fox&quot;,
    &quot;analyzer&quot;:&quot;my_analyzer&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;tokens&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;quick&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;and&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">2</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;brown&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fox&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;start_offset&quot;</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
            <span class="token property">&quot;end_offset&quot;</span><span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
            <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;ALPHANUM&gt;&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;position&quot;</span><span class="token operator">:</span> <span class="token number">4</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文档冲突的解决方案" tabindex="-1"><a class="header-anchor" href="#文档冲突的解决方案" aria-hidden="true">#</a> 文档冲突的解决方案</h3><p>当我们使用indexAPI更新文档，可以一次性读取原始文档，做我们的修改，然后重新索引整个文档</p><p>最近的请求索引将获胜，无论哪一个文档被缩影，都将被唯一存储在ES中</p><p>如果有别人更新这个文档，他们的更该将丢失</p><p>很多时候是没有这个问题的，也许我们的主数据存储的是一个关系型数据库，我们只是将数据复制到ElasticSearch中并使其可以被搜索，也许两个人同时更改文档的概率很小，或者对于我们的业务来说偶尔去丢失更改并不是很严重的问题</p><p>但有时丢失了一个变更就是非常严重的</p><p>例如我们用ES存储我们网上的商城商品库存数量，每次我们卖一个商品的时候，ES中库存就减一</p><p>如果有一天，管理层决定做一次促销，突然的，我们一秒要卖好几个商品，假设有两个Web程序并行运行，每一个都同时处理所有商品的销售</p><figure><img src="`+un+`" alt="image-20220101230107465" tabindex="0" loading="lazy"><figcaption>image-20220101230107465</figcaption></figure><p>Web1对stock_count所做的更该已经丢失，因为web2不知道它的stock_count的拷贝已经过期</p><p>结果我们会认为有超时的商品的实际数量库存，因为卖给客户的库存商品并不存在，我们将让他们非常失望</p><p>解决方案有，而且非常的眼熟</p><ul><li>悲观锁</li><li>乐观锁</li></ul><h3 id="乐观并发控制" tabindex="-1"><a class="header-anchor" href="#乐观并发控制" aria-hidden="true">#</a> 乐观并发控制</h3><p>ES是分布式的</p><p>当创建文档、更新或删除时，新版本的文档必须复制到集群中的其他节点，ES却也是异步和并发的，这意味着这些复制请求被发送，并且达到目的地时顺序也许是乱的，ElasticSearch需要一种方法区确保文档的旧版本不会覆盖新的版本</p><p>当我们之前讨论index，GET、和DELETE请求时，每个文档都有一个_version版本号</p><p>当文档被修改时版本号递增，ES使用这个version号来确保变更以正确顺序得到执行</p><p>入股过旧版本的文档在新版本之后到达，它可以被简单的忽略</p><p>我们可以利用version来确保应用中相互冲突的变更不会导致数据丢失，我们通过指定想要修改文档的version来达到这个目的，如果该版本号不是当前的版本号，我们的请求将会失败</p><p>我们先创建一个数据</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>PUT http://localhost:9200/user/_create/1001
{
    &quot;name&quot;:&quot;张三&quot;,
    &quot;sex&quot;:&quot;男&quot;,
    &quot;tel&quot;:&quot;1111&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_version&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token string">&quot;created&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_shards&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;total&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token property">&quot;successful&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token property">&quot;failed&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_seq_no&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">&quot;_primary_term&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来我们再来发送一个修改的请求</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>POST http://localhost:9200/user/_update/1001
{
    &quot;doc&quot;:{
         &quot;name&quot;:&quot;李四&quot;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果</p>`,73),ha=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"_index"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_type"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"_doc"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"1001"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"result"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"updated"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_shards"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token property"},'"total"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token property"},'"successful"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token property"},'"failed"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_seq_no"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_primary_term"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),ya=a(`<p>可以看到，版本号和一个seq_no发生变化了</p><p>这个时候，我们试图指定版本号来进行更新</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>POST http://localhost:9200/user/_update/1001?version=1
{
    &quot;doc&quot;:{
         &quot;name&quot;:&quot;李四&quot;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以得到一个错误</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;error&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;root_cause&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;action_request_validation_exception&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Validation Failed: 1: internal versioning can not be used for optimistic concurrency control. Please use \`if_seq_no\` and \`if_primary_term\` instead;&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;action_request_validation_exception&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Validation Failed: 1: internal versioning can not be used for optimistic concurrency control. Please use \`if_seq_no\` and \`if_primary_term\` instead;&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">400</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是因为这个玩意官方已经不推荐使用了</p><p>而是推荐我们通过<code>if_seq_no</code> 和 <code>if_primary_term</code> 来进行版本锁控制</p><p>所以我们应该这样请求</p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>POST http://localhost:9200/user/_update/1001?if_seq_no=1&amp;if_primary_term=1
{
    &quot;doc&quot;:{
         &quot;name&quot;:&quot;王老五&quot;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果</p>`,10),_a=n("div",{class:"language-json line-numbers-mode","data-ext":"json"},[n("pre",{json:"",class:"language-json"},[n("code",null,[n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token property"},'"_index"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"user"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_type"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"_doc"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_id"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"1001"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_version"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"result"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"updated"'),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_shards"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token property"},'"total"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token property"},'"successful"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token property"},'"failed"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_seq_no"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token property"},'"_primary_term"'),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"1"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),fa=n("p",null,"可以看到 version和 seq_no又发生变化了",-1),xa=n("p",null,"这个时候如果我们再次尝试",-1),wa={href:"http://localhost:9200/user/_update/1001?if_seq_no=1&if_primary_term=1",target:"_blank",rel:"noopener noreferrer"},Sa=a(`<p>这样更改 将会抛出异常</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;error&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;root_cause&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;version_conflict_engine_exception&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;[1001]: version conflict, required seqNo [1], primary term [1]. current document has seqNo [2] and primary term [1]&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index_uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1FKrmOb0QQ-rM7ScAbCP6A&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;shard&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;version_conflict_engine_exception&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;[1001]: version conflict, required seqNo [1], primary term [1]. current document has seqNo [2] and primary term [1]&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;index_uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1FKrmOb0QQ-rM7ScAbCP6A&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;shard&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;index&quot;</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">409</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是这样的话 我们就需要那啥 做多个请求来获取数据 这样是非常痛苦的</p><h3 id="外部系统版本控制" tabindex="-1"><a class="header-anchor" href="#外部系统版本控制" aria-hidden="true">#</a> 外部系统版本控制</h3><p><strong>在最新版本（7.16.x）中，这个方案已经被废弃了====不清楚是不是废弃 或者说这个功能是高级版才有的..没有在update日志中看到过关于这个变动的说明，看视频7.8.0是可以正常用的</strong></p><p>最新版本中 可以将更新结果 和 数据库内进行匹配后进行返回</p><p>一个常见的设置是使用其它数据库作为主要的数据存储，使用ElasticSearch做数据检索，这意味着主数据库的所有更该发生时都需要被复制到ElasticSearch，如果多个进程负责这一数据同步，我们可能会遇到之前描述的并发问题</p><p>如果我们的主数据库已经有了版本号或一个能作为版本号字段的值timestamp</p><p>那么就可以通过在ElasticSearch中通过添加<code>version_type=external</code>到查询字符串的方式重用这些相同的版本号，版本号必须是大于零的整数，并且小于Java中Long的最大值<code>9.2E+18</code></p><div class="language-http line-numbers-mode" data-ext="http"><pre class="language-http"><code>POST http://localhost:9200/user/_update/1001?version=1&amp;if_primary_termversion_type=external
{
    &quot;doc&quot;:{
         &quot;name&quot;:&quot;十六春&quot;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的version就相当于指定了我们的外部版本号，es会用他跟自己的<code>_version</code>进行对比 如果说对比结果为true，则过，否则不通过 之前我们修改过了这个的数据 所以他目前是3 故不通过</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;error&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;root_cause&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;action_request_validation_exception&quot;</span><span class="token punctuation">,</span>
                <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Validation Failed: 1: internal versioning can not be used for optimistic concurrency control. Please use \`if_seq_no\` and \`if_primary_term\` instead;&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;action_request_validation_exception&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;reason&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Validation Failed: 1: internal versioning can not be used for optimistic concurrency control. Please use \`if_seq_no\` and \`if_primary_term\` instead;&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token number">400</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="kibana" tabindex="-1"><a class="header-anchor" href="#kibana" aria-hidden="true">#</a> Kibana</h3><p>一个免费，开源的图形化管理工具</p><p>地址</p>`,15),ja={href:"https://www.elastic.co/downloads/kibana",target:"_blank",rel:"noopener noreferrer"},Ea=a(`<p>下载好了之后解压</p><p>然后修改<code>config/kibana.yml</code>文件为如下内容</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># 默认端口</span>
<span class="token key atrule">server.port</span><span class="token punctuation">:</span> <span class="token number">5601</span>

<span class="token comment"># ES服务器的地址</span>
<span class="token key atrule">elasticsearch.hosts</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;http://localhost:9200&quot;</span><span class="token punctuation">]</span>

<span class="token comment"># 索引名</span>
<span class="token key atrule">kibana.index</span><span class="token punctuation">:</span> <span class="token string">&quot;.kibana&quot;</span>

<span class="token comment"># 支持中文</span>
<span class="token key atrule">i18n.locale</span><span class="token punctuation">:</span> <span class="token string">&quot;zh-CN&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后运行<code>bin/kibana.bat</code>即可</p>`,4),Ra={href:"http://localhost:5601",target:"_blank",rel:"noopener noreferrer"},Ba=a('<p>即可</p><figure><img src="'+rn+'" alt="image-20220102003021879" tabindex="0" loading="lazy"><figcaption>image-20220102003021879</figcaption></figure><p>选择右边的即可</p><p>具体的就不多说了 主要这玩意还是蛮吃内存的..</p><h1 id="elasticsearch集成" tabindex="-1"><a class="header-anchor" href="#elasticsearch集成" aria-hidden="true">#</a> ElasticSearch集成</h1><h2 id="spring-data框架集成" tabindex="-1"><a class="header-anchor" href="#spring-data框架集成" aria-hidden="true">#</a> Spring Data框架集成</h2><h3 id="spring-data介绍" tabindex="-1"><a class="header-anchor" href="#spring-data介绍" aria-hidden="true">#</a> Spring Data介绍</h3><p>Spring Data是一个用于简化数据库、非关系形数据库、索引库访问，并支持云服务的开源框架</p><p>其主要目的是使得对数据的访问变得方便快捷，并支持map-reduce框架和云计算服务</p><p>Spring Data可以极大地简化JPA（ElasticSearch…）的写法，可以在几乎不用写实现的情况下，实现对数据的访问和操作</p><p>除了CRUD之外，还包括一些如分页、排序等常用的功能</p><blockquote><p>Spring Data ElasticSearch基于Spring Data Api简化ElasticSearch的操作，将原始操作ElasticSearch的客户端API进行封装，Spring Data为ElasticSearch项目提供集成搜索引擎</p></blockquote><p>这玩意对ElasticSearch的版本是有要求的</p>',13),Ta={href:"https://docs.spring.io/spring-data/elasticsearch/docs/current/reference/html/#preface.versions",target:"_blank",rel:"noopener noreferrer"},Aa=a('<p>目前最新是4.3.0 最高支持 ElasticSearch 7.15.x</p><figure><img src="'+kn+'" alt="image-20220102122714859" tabindex="0" loading="lazy"><figcaption>image-20220102122714859</figcaption></figure><figure><img src="'+dn+'" alt="image-20220102122739215" tabindex="0" loading="lazy"><figcaption>image-20220102122739215</figcaption></figure><p>并且不同版本之间有些APi变动有那么亿点点大</p><h3 id="spring-boot集成" tabindex="-1"><a class="header-anchor" href="#spring-boot集成" aria-hidden="true">#</a> Spring Boot集成</h3><figure><img src="'+mn+`" alt="image-20220102123221639" tabindex="0" loading="lazy"><figcaption>image-20220102123221639</figcaption></figure><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-elasticsearch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来看看父依赖中需要的ElasticSearch的版本</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>elasticsearch.version</span><span class="token punctuation">&gt;</span></span>7.15.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>elasticsearch.version</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要7.15.2的。。。</p><p>所以说得去下载这个版本的</p>`,11),Ca={href:"https://www.elastic.co/downloads/past-releases#elasticsearch",target:"_blank",rel:"noopener noreferrer"},Ua=n("p",null,"接着IK也顺手装一下",-1),za={href:"https://github.com/medcl/elasticsearch-analysis-ik/releases",target:"_blank",rel:"noopener noreferrer"},Da=a('<p>接着我们看下这玩意的自动配置文件</p><figure><img src="'+vn+`" alt="image-20220102124727964" tabindex="0" loading="lazy"><figcaption>image-20220102124727964</figcaption></figure><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElasticsearchRestTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElasticsearchRestClientAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                     <span class="token class-name">ReactiveElasticsearchRestClientAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Import</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token class-name">ElasticsearchDataConfiguration<span class="token punctuation">.</span>BaseConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
         <span class="token class-name">ElasticsearchDataConfiguration<span class="token punctuation">.</span>RestClientConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
         <span class="token class-name">ElasticsearchDataConfiguration<span class="token punctuation">.</span>ReactiveRestClientConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ElasticsearchDataAutoConfiguration</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>emm没看出啥来 先用吧</p><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h3><p>我们目前只需要配置</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># ES服务器地址</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">elasticsearch</span><span class="token punctuation">:</span>
    <span class="token key atrule">uris</span><span class="token punctuation">:</span> <span class="token string">&quot;http://localhost:9200&quot;</span>

<span class="token comment"># 开下debug 这里是为了能看到请求路径</span>
<span class="token key atrule">logging.level.com.myproject</span><span class="token punctuation">:</span> debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看下这个uris对应的配置文件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
  * Comma-separated list of the Elasticsearch instances to use.
  */</span>
<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> uris <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:9200&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
  * Username for authentication with Elasticsearch.
  */</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
  * Password for authentication with Elasticsearch.
  */</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
  * Connection timeout used when communicating with Elasticsearch.
  */</span>
<span class="token keyword">private</span> <span class="token class-name">Duration</span> connectionTimeout <span class="token operator">=</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
  * Socket timeout used when communicating with Elasticsearch.
  */</span>
<span class="token keyword">private</span> <span class="token class-name">Duration</span> socketTimeout <span class="token operator">=</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
  * Prefix added to the path of every request sent to Elasticsearch.
  */</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> pathPrefix<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原来配置不在data目录下</p><figure><img src="`+bn+`" alt="image-20220102125416311" tabindex="0" loading="lazy"><figcaption>image-20220102125416311</figcaption></figure><h3 id="索引的基本添加和删除" tabindex="-1"><a class="header-anchor" href="#索引的基本添加和删除" aria-hidden="true">#</a> 索引的基本添加和删除</h3><p>我们先添加一个domain</p><p>这些见名知意 @id为指定id字段</p><p>@field指定字段类型 是text 还是keyword</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token comment">// 下面这个@Document一定不能省略  然后如果是老版本（7.8以及之前应该都是 @setting中的内容是卸载这个document内的）</span>
<span class="token annotation punctuation">@Document</span><span class="token punctuation">(</span>indexName <span class="token operator">=</span> <span class="token string">&quot;shopping&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Setting</span><span class="token punctuation">(</span>shards <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> replicas <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 商品id
     */</span>
    <span class="token annotation punctuation">@Id</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 商品名称
     */</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Text</span><span class="token punctuation">,</span> analyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">,</span> searchAnalyzer <span class="token operator">=</span> <span class="token string">&quot;ik_max_word&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 分类名称
     */</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Keyword</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> category<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 商品价格
     */</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Double</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Double</span> price<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 图片地址
     */</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token class-name">FieldType<span class="token punctuation">.</span>Keyword</span><span class="token punctuation">,</span>index <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> images<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后就可以了</p><p>对这样就可以了</p><p>其他的什么事情都不用做</p><p>springboot将会在启动的时候自动创建索引</p><p>我们要删除也非常简单</p>`,21),Oa=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@SpringBootTest"),s(`
`),n("span",{class:"token annotation punctuation"},"@Slf4j"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ApplicationTests"),s(),n("span",{class:"token punctuation"},"{"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Autowired"),s(`
    `),n("span",{class:"token class-name"},"ElasticsearchRestTemplate"),s(" elasticsearchRestTemplate"),n("span",{class:"token punctuation"},";"),s(`
    
    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"contextLoads"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
`),n("span",{class:"token comment"},"//        初始化的时候会自动创建索引"),s(`

        log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"创建索引"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"deleteIndex"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
`),n("span",{class:"token comment"},"//        如果说是在7.8.0版本之下 需要通过elasticsearchRestTemplate.deleteIndex(Product.class)来删除索引"),s(`
        val delete `),n("span",{class:"token operator"},"="),s(" elasticsearchRestTemplate"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"indexOps"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Product"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"delete"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"删除索引：{}"'),n("span",{class:"token punctuation"},","),s(" delete"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Ia=a('<p>日志：</p><figure><img src="'+gn+`" alt="image-20220102160902051" tabindex="0" loading="lazy"><figcaption>image-20220102160902051</figcaption></figure><h3 id="文档的基本操作" tabindex="-1"><a class="header-anchor" href="#文档的基本操作" aria-hidden="true">#</a> 文档的基本操作</h3><p>我们先创建一个pojo</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Repository</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductDao</span> <span class="token keyword">extends</span> <span class="token class-name">ElasticsearchRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">,</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这玩意就类似于Mybatis的那啥一样 反正很方便就是了 加一个继承接口就可以使用它的全部功能，接下来使用</p><h4 id="基本增删改查" tabindex="-1"><a class="header-anchor" href="#基本增删改查" aria-hidden="true">#</a> 基本增删改查</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootTest</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">class</span> <span class="token class-name">ApplicationTests</span> <span class="token punctuation">{</span>
 <span class="token comment">// 自动导入即可</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">ProductDao</span> purchaseDao<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        val product <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        product<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        product<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;iphone 999 plus&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        product<span class="token punctuation">.</span><span class="token function">setCategory</span><span class="token punctuation">(</span><span class="token string">&quot;苹果手机&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        product<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">10000.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        存储对象</span>
        purchaseDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        通过id获取对象</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;product:{}&quot;</span><span class="token punctuation">,</span> purchaseDao<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        修改和增加用的是同一个方法 会覆盖原来的数据</span>
        val product <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        product<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        product<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">&quot;iphone 666 plus&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        product<span class="token punctuation">.</span><span class="token function">setCategory</span><span class="token punctuation">(</span><span class="token string">&quot;苹果手机&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        product<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token number">10000.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        purchaseDao<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;product:{}&quot;</span><span class="token punctuation">,</span> purchaseDao<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//         查询</span>
<span class="token comment">//         通过id查询</span>
        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> byId <span class="token operator">=</span> purchaseDao<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;product:{}&quot;</span><span class="token punctuation">,</span> byId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//         查询全部</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;============&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        purchaseDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>product <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;product:{}&quot;</span><span class="token punctuation">,</span> product<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//        删除 这玩意没有返回值 如果说东西不存在也不会报错</span>
        purchaseDao<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="批量增删改查和分页、排序查询" tabindex="-1"><a class="header-anchor" href="#批量增删改查和分页、排序查询" aria-hidden="true">#</a> 批量增删改查和分页、排序查询</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//        批量插入 其他的都差不多是这个样子做即可</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> products <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">long</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        products<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">&quot;iphone&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">,</span> <span class="token string">&quot;苹果手机&quot;</span><span class="token punctuation">,</span> i <span class="token operator">*</span> <span class="token number">1000.0</span><span class="token punctuation">,</span> <span class="token string">&quot;www.aaa.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">&gt;</span></span> products1 <span class="token operator">=</span> purchaseDao<span class="token punctuation">.</span><span class="token function">saveAll</span><span class="token punctuation">(</span>products<span class="token punctuation">)</span><span class="token punctuation">;</span>
    products1<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>product <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;product:{}&quot;</span><span class="token punctuation">,</span> product<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findByPageable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//        分页查询和排序</span>
    <span class="token comment">//         先设置 排序规则这里通过id倒序排序</span>
    <span class="token class-name">Sort</span> idSort <span class="token operator">=</span> <span class="token class-name">Sort</span><span class="token punctuation">.</span><span class="token function">by</span><span class="token punctuation">(</span><span class="token class-name">Sort<span class="token punctuation">.</span>Direction</span><span class="token punctuation">.</span><span class="token constant">DESC</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//        设置查询分页</span>

    <span class="token comment">//        当前页</span>
    <span class="token keyword">int</span> currentPage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">//        每页的数据</span>
    <span class="token keyword">int</span> pageSize <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token comment">//        分页查询 设置 页数 和规则</span>
    <span class="token class-name">PageRequest</span> pageRequest <span class="token operator">=</span> <span class="token class-name">PageRequest</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>currentPage<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> idSort<span class="token punctuation">)</span><span class="token punctuation">;</span>
    purchaseDao<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>pageRequest<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>product <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;product:{}&quot;</span><span class="token punctuation">,</span> product<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文档搜索" tabindex="-1"><a class="header-anchor" href="#文档搜索" aria-hidden="true">#</a> 文档搜索</h3><p>我们的文档内现在有十条数据</p><figure><img src="`+qn+'" alt="image-20220102164058988" tabindex="0" loading="lazy"><figcaption>image-20220102164058988</figcaption></figure><p>这里就用一个简单的term查询了</p>',14),Ma=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{java:"",class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@SpringBootTest"),s(`
`),n("span",{class:"token annotation punctuation"},"@Slf4j"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"ApplicationTests"),s(),n("span",{class:"token punctuation"},"{"),s(`


    `),n("span",{class:"token annotation punctuation"},"@Autowired"),s(`
    `),n("span",{class:"token class-name"},"ElasticsearchRestTemplate"),s(" elasticsearchRestTemplate"),n("span",{class:"token punctuation"},";"),s(`


    `),n("span",{class:"token annotation punctuation"},"@Test"),s(`
    `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"termQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token comment"},"//        就和之前用JavaApi那样 进行查询builder封装"),s(`
        `),n("span",{class:"token class-name"},"TermQueryBuilder"),s(" termQueryBuilder "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"QueryBuilders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"termQuery"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"title"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"6"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"NativeSearchQuery"),s(" nativeSearchQuery "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"NativeSearchQuery"),n("span",{class:"token punctuation"},"("),s("termQueryBuilder"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        `),n("span",{class:"token class-name"},"SearchHits"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Product"),n("span",{class:"token punctuation"},">")]),s(" search "),n("span",{class:"token operator"},"="),s(" elasticsearchRestTemplate"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("nativeSearchQuery"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Product"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
        search`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"forEach"),n("span",{class:"token punctuation"},"("),s("hit "),n("span",{class:"token operator"},"->"),s(" log"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"hit:{}"'),n("span",{class:"token punctuation"},","),s(" hit"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),La=n("p",null,"这玩意查询有点怪….只能说 如果要加其他条件 比如排序啥的",-1),Pa=n("p",null,[s("在nativeSearchQuery内添加 例如"),n("code",null,"nativeSearchQuery.addSort(new Sort.....)")],-1),Ha=n("p",null,"类似于这样",-1),Ga=n("p",null,"模糊查询之类的 和原生APi没啥两样 不过是换了个方式查而已。。。",-1),Fa=n("h2",{id:"spark和filnk框架集成es",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#spark和filnk框架集成es","aria-hidden":"true"},"#"),s(" Spark和Filnk框架集成ES")],-1),Na=n("p",null,"这两个是大数据框架",-1),Va=n("p",null,"暂时先过了",-1),Qa={href:"https://www.bilibili.com/video/BV1hh411D7sb?p=54&spm_id_from=pageDriver",target:"_blank",rel:"noopener noreferrer"},Ja=a(`<p>54 -55 说了如何集成</p><h1 id="es的优化" tabindex="-1"><a class="header-anchor" href="#es的优化" aria-hidden="true">#</a> ES的优化</h1><h2 id="硬件的选择" tabindex="-1"><a class="header-anchor" href="#硬件的选择" aria-hidden="true">#</a> 硬件的选择</h2><p>ES的所有索引和文档数据都是存储在本地硬盘中的</p><p>可以通过修改<code>/config/elasticsearch.yml</code>中的配置来进行修改</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>path
 <span class="token key atrule">data</span><span class="token punctuation">:</span> /path/to/data
 <span class="token key atrule">logs</span><span class="token punctuation">:</span> /path/to/logs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的是默认值</p><p>爱咋改咋改</p><figure><img src="`+hn+'" alt="image-20220102173605929" tabindex="0" loading="lazy"><figcaption>image-20220102173605929</figcaption></figure><h2 id="分片策略" tabindex="-1"><a class="header-anchor" href="#分片策略" aria-hidden="true">#</a> 分片策略</h2><p>分片和副本的设计为ES提供了支持分布式和故障转移的特性，但并不意味着分片和副本是可以无限分配的</p><p>而且索引的分片完成后由于索引的路由机制，我们是不能在这之后修改分片数量</p><p>可能有人会说：我不知道这个索引将来会变得多大，并且过后我也不能更该索引的大小，所以为了保险起见先来个1k</p><p>但--分片也是有代价的</p><ul><li>一个分片的底层是一个Lucene索引，它会消耗一定的句柄内存和CPU运转</li><li>每一个搜索请求都需要命中一个节点，如果没一个分片都处于不同的节点还好，但如果多个分片都需要在同一个节点上竞争使用相同的资源就GG了</li><li>用户计算相关度的词项统计信息是基于分片的，如果有序多分片，每一个都只会有很少的数据导致很低的相关度</li></ul><figure><img src="'+yn+'" alt="image-20220102174345075" tabindex="0" loading="lazy"><figcaption>image-20220102174345075</figcaption></figure><figure><img src="'+_n+'" alt="image-20220102174409304" tabindex="0" loading="lazy"><figcaption>image-20220102174409304</figcaption></figure><figure><img src="'+fn+'" alt="image-20220102174458115" tabindex="0" loading="lazy"><figcaption>image-20220102174458115</figcaption></figure><h2 id="写入优化" tabindex="-1"><a class="header-anchor" href="#写入优化" aria-hidden="true">#</a> 写入优化</h2><figure><img src="'+xn+'" alt="image-20220102174628693" tabindex="0" loading="lazy"><figcaption>image-20220102174628693</figcaption></figure><figure><img src="'+wn+'" alt="image-20220102174747109" tabindex="0" loading="lazy"><figcaption>image-20220102174747109</figcaption></figure><figure><img src="'+Sn+'" alt="image-20220102174809106" tabindex="0" loading="lazy"><figcaption>image-20220102174809106</figcaption></figure><figure><img src="'+jn+'" alt="image-20220102174828216" tabindex="0" loading="lazy"><figcaption>image-20220102174828216</figcaption></figure><figure><img src="'+En+'" alt="image-20220102174853617" tabindex="0" loading="lazy"><figcaption>image-20220102174853617</figcaption></figure><figure><img src="'+Rn+'" alt="image-20220102174913428" tabindex="0" loading="lazy"><figcaption>image-20220102174913428</figcaption></figure><h2 id="内存设置" tabindex="-1"><a class="header-anchor" href="#内存设置" aria-hidden="true">#</a> 内存设置</h2><figure><img src="'+Bn+'" alt="image-20220102175012177" tabindex="0" loading="lazy"><figcaption>image-20220102175012177</figcaption></figure><figure><img src="'+Tn+'" alt="image-20220102175110536" tabindex="0" loading="lazy"><figcaption>image-20220102175110536</figcaption></figure><figure><img src="'+An+'" alt="image-20220102175127313" tabindex="0" loading="lazy"><figcaption>image-20220102175127313</figcaption></figure><figure><img src="'+Cn+'" alt="image-20220102175140594" tabindex="0" loading="lazy"><figcaption>image-20220102175140594</figcaption></figure><h2 id="重要配置项" tabindex="-1"><a class="header-anchor" href="#重要配置项" aria-hidden="true">#</a> 重要配置项</h2>',31),Ka=n("thead",null,[n("tr",null,[n("th",null,"参数名"),n("th",null,"参数值"),n("th",null,"说明")])],-1),Xa={href:"http://cluster.name",target:"_blank",rel:"noopener noreferrer"},Wa=n("td",null,"elasticsearch",-1),Ya=n("td",null,"配置 ES 的集群名称，默认值是 ES，建议改成与所存数据相关的名称，ES 会自动发现在同一网段下的 集群名称相同的节点",-1),Za={href:"http://node.name",target:"_blank",rel:"noopener noreferrer"},$a=n("td",null,"node-1",-1),nt={href:"http://node.name",target:"_blank",rel:"noopener noreferrer"},st=n("tr",null,[n("td",null,"node.master"),n("td",null,"true"),n("td",null,"指定该节点是否有资格被选举成为 Master 节点，默 认是 True，如果被设置为 True，则只是有资格成为 Master 节点，具体能否成为 Master 节点，需要通 过选举产生。")],-1),at=n("tr",null,[n("td",null,"node.data"),n("td",null,"true"),n("td",null,"指定该节点是否存储索引数据，默认为 True。数据 的增、删、改、查都是在 Data 节点完成的。")],-1),tt=n("tr",null,[n("td",null,"index.number_of_shards"),n("td",null,"1"),n("td",null,"设置都索引分片个数，默认是 1 片。也可以在创建 索引时设置该值，具体设置为多大都值要根据数据 量的大小来定。如果数据量不大，则设置成 1 时效 率最高")],-1),et=n("tr",null,[n("td",null,"index.number_of_replicas"),n("td",null,"1"),n("td",null,"设置默认的索引副本个数，默认为 1 个。副本数越 多，集群的可用性越好，但是写索引时需要同步的 数据越多。")],-1),pt=n("tr",null,[n("td",null,"transport.tcp.compress"),n("td",null,"true"),n("td",null,"设置在节点间传输数据时是否压缩，默认为 False， 不压缩")],-1),ot=n("tr",null,[n("td",null,"discovery.zen.minimum_master_nodes"),n("td",null,"1"),n("td",null,[s("设置在选举 Master 节点时需要参与的最少的候选 主节点数，默认为 1。"),n("br"),s("如果使用默认值，则当网络 不稳定时有可能会出现脑裂。"),n("br"),s(" 合理的数值为 (master_eligible_nodes/2)+1 "),n("br"),s("其中 master_eligible_nodes 表示集群中的候选主节点数"),n("br"),s("(超过半数)")])],-1),ct=n("tr",null,[n("td",null,"discovery.zen.ping.timeout"),n("td",null,"3s"),n("td",null,"设置在集群中自动发现其他节点时 Ping 连接的超 时时间，默认为 3 秒。 在较差的网络环境下需要设置得大一点，防止因误 判该节点的存活状态而导致分片的转移")],-1),lt=n("p",null,"剩下的一些面试题",-1),it=n("p",null,"建议看",-1),ut={href:"https://www.bilibili.com/video/BV1hh411D7sb?p=62&spm_id_from=pageDriver",target:"_blank",rel:"noopener noreferrer"};function rt(kt,dt){const t=o("ExternalLinkIcon");return c(),l("div",null,[zn,n("p",null,[s("官方网址："),n("a",Dn,[s("https://www.elastic.co/cn"),e(t)])]),n("p",null,[s("下载ElasticSearch："),n("a",On,[s("https://www.elastic.co/cn/downloads/elasticsearch"),e(t)])]),In,n("p",null,[n("a",Mn,[s("http://localhost:9200/shopping/_doc/100"),e(t)])]),Ln,n("p",null,[s("GET ："),n("a",Pn,[s("http://localhost:9200/shopping/_search"),e(t)])]),Hn,n("p",null,[s("只需要 PUT请求 "),n("a",Gn,[s("http://localhost:9200/shopping/_doc/1001"),e(t)])]),Fn,n("p",null,[n("a",Nn,[s("http://localhost:9200/shopping/_update/1001"),e(t)])]),Vn,n("p",null,[n("a",Qn,[s("http://localhost:9200/shopping/_doc/1001"),e(t)])]),Jn,Kn,Xn,Wn,Yn,n("p",null,[s("GET "),n("a",Zn,[s("http://localhost:9200/shopping/_search"),e(t)])]),$n,n("p",null,[n("a",ns,[s("http://localhost:9200/shopping/_search"),e(t)])]),ss,n("p",null,[s("GET "),n("a",as,[s("http://localhost:9200/shopping/_search"),e(t)])]),ts,n("p",null,[n("a",es,[s("http://localhost:9200/shopping/_search"),e(t)])]),ps,n("p",null,[n("a",os,[s("http://localhost:9200/shopping/_search"),e(t)])]),cs,ls,is,us,rs,ks,ds,n("p",null,[s("PUT："),n("a",ms,[s("http://localhost:9200/user"),e(t)])]),n("p",null,[s("然后依旧是PUT请求 "),n("a",vs,[s("http://localhost:9200/user/_mapping"),e(t)])]),bs,n("p",null,[s("接着可以get "),n("a",gs,[s("http://localhost:9200/user/_mapping"),e(t)]),s(" 查看字段信息")]),qs,n("p",null,[s("POST "),n("a",hs,[s("http://localhost:9200/user/_create/1001"),e(t)])]),ys,n("p",null,[s("GET "),n("a",_s,[s("http://localhost:9200/user/_search"),e(t)])]),fs,xs,ws,n("p",null,[s("接着我们写如下代码 即可等效于get "),n("a",Ss,[s("http://localhost:9200/user"),e(t)])]),js,Es,Rs,Bs,Ts,n("p",null,[s("Get 文档： "),n("a",As,[s("http://localhost:9200/user/_search"),e(t)])]),Cs,Us,zs,Ds,Os,Is,Ms,Ls,Ps,Hs,Gs,Fs,Ns,Vs,Qs,Js,Ks,Xs,Ws,Ys,Zs,$s,na,n("p",null,[n("a",sa,[s("http://localhost:7001/_cluster/health"),e(t)])]),aa,ta,ea,pa,oa,n("p",null,[n("a",ca,[s("https://www.elastic.co/cn/downloads/elasticsearch"),e(t)])]),la,n("p",null,[s("接下来再7001中put创建一个user "),n("a",ia,[s("http://localhost:7001/user/"),e(t)])]),ua,n("p",null,[n("a",ra,[s("http://localhost:7001/user"),e(t)])]),ka,n("p",null,[s("从节点启后后，"),n("a",da,[s("只要他和主节点有同样的cluster.name"),e(t)]),s("，他就会自动加入到这个集群中，然后会自动将我们的索引备份复制到自己这")]),ma,n("p",null,[s("我们PUT "),n("a",va,[s("http://localhost:7001/user/_settings"),e(t)])]),ba,n("p",null,[n("a",ga,[s("https://github.com/medcl/elasticsearch-analysis-ik/tree/master"),e(t)])]),qa,ha,ya,_a,fa,xa,n("p",null,[n("a",wa,[s("http://localhost:9200/user/_update/1001?if_seq_no=1&if_primary_term=1"),e(t)])]),Sa,n("p",null,[n("a",ja,[s("https://www.elastic.co/downloads/kibana"),e(t)])]),Ea,n("p",null,[s("然后访问："),n("a",Ra,[s("http://localhost:5601"),e(t)])]),Ba,n("p",null,[n("a",Ta,[s("https://docs.spring.io/spring-data/elasticsearch/docs/current/reference/html/#preface.versions"),e(t)])]),Aa,n("p",null,[n("a",Ca,[s("https://www.elastic.co/downloads/past-releases#elasticsearch"),e(t)])]),Ua,n("p",null,[n("a",za,[s("https://github.com/medcl/elasticsearch-analysis-ik/releases"),e(t)])]),Da,Oa,Ia,Ma,La,Pa,Ha,Ga,Fa,Na,Va,n("p",null,[n("a",Qa,[s("https://www.bilibili.com/video/BV1hh411D7sb?p=54&spm_id_from=pageDriver"),e(t)])]),Ja,n("table",null,[Ka,n("tbody",null,[n("tr",null,[n("td",null,[n("a",Xa,[s("cluster.name"),e(t)])]),Wa,Ya]),n("tr",null,[n("td",null,[n("a",Za,[s("node.name"),e(t)])]),$a,n("td",null,[s("集群中的节点名，在同一个集群中不能重复。节点 的名称一旦设置，就不能再改变了。当然，也可以 设 置 成 服 务 器 的 主 机 名 称 ， 例 如 "),n("a",nt,[s("node.name"),e(t)]),s("😒{HOSTNAME}。")])]),st,at,tt,et,pt,ot,ct])]),lt,it,n("p",null,[n("a",ut,[s("https://www.bilibili.com/video/BV1hh411D7sb?p=62&spm_id_from=pageDriver"),e(t)])])])}const bt=p(Un,[["render",rt],["__file","08-Elasticsearch.html.vue"]]);export{bt as default};
